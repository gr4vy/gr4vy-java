/*
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gr4vy.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;


/**
 * Additional context for this event.
 */
@ApiModel(description = "Additional context for this event.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PaymentConnectorReportTransactionSettledContext {
  public static final String SERIALIZED_NAME_SETTLEMENT_ID = "settlement_id";
  @SerializedName(SERIALIZED_NAME_SETTLEMENT_ID)
  private UUID settlementId;

  public static final String SERIALIZED_NAME_POSTED_AT = "posted_at";
  @SerializedName(SERIALIZED_NAME_POSTED_AT)
  private String postedAt;

  public static final String SERIALIZED_NAME_INGESTED_AT = "ingested_at";
  @SerializedName(SERIALIZED_NAME_INGESTED_AT)
  private String ingestedAt;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Integer amount;

  public static final String SERIALIZED_NAME_EXCHANGE_RATE = "exchange_rate";
  @SerializedName(SERIALIZED_NAME_EXCHANGE_RATE)
  private BigDecimal exchangeRate;

  public static final String SERIALIZED_NAME_COMMISSION = "commission";
  @SerializedName(SERIALIZED_NAME_COMMISSION)
  private Integer commission;

  public static final String SERIALIZED_NAME_INTERCHANGE = "interchange";
  @SerializedName(SERIALIZED_NAME_INTERCHANGE)
  private Integer interchange;

  public static final String SERIALIZED_NAME_MARKUP = "markup";
  @SerializedName(SERIALIZED_NAME_MARKUP)
  private Integer markup;

  public static final String SERIALIZED_NAME_SCHEME_FEE = "scheme_fee";
  @SerializedName(SERIALIZED_NAME_SCHEME_FEE)
  private Integer schemeFee;

  public static final String SERIALIZED_NAME_PAYMENT_SERVICE_ID = "payment_service_id";
  @SerializedName(SERIALIZED_NAME_PAYMENT_SERVICE_ID)
  private UUID paymentServiceId;

  public static final String SERIALIZED_NAME_PAYMENT_SERVICE_DEFINITION_ID = "payment_service_definition_id";
  @SerializedName(SERIALIZED_NAME_PAYMENT_SERVICE_DEFINITION_ID)
  private String paymentServiceDefinitionId;

  public static final String SERIALIZED_NAME_PAYMENT_SERVICE_DISPLAY_NAME = "payment_service_display_name";
  @SerializedName(SERIALIZED_NAME_PAYMENT_SERVICE_DISPLAY_NAME)
  private String paymentServiceDisplayName;

  public static final String SERIALIZED_NAME_PAYMENT_SERVICE_REPORT_ID = "payment_service_report_id";
  @SerializedName(SERIALIZED_NAME_PAYMENT_SERVICE_REPORT_ID)
  private UUID paymentServiceReportId;

  public static final String SERIALIZED_NAME_PAYMENT_SERVICE_REPORT_FILE_IDS = "payment_service_report_file_ids";
  @SerializedName(SERIALIZED_NAME_PAYMENT_SERVICE_REPORT_FILE_IDS)
  private List<UUID> paymentServiceReportFileIds = null;

  public static final String SERIALIZED_NAME_PAYMENT_SERVICE_TRANSACTION_ID = "payment_service_transaction_id";
  @SerializedName(SERIALIZED_NAME_PAYMENT_SERVICE_TRANSACTION_ID)
  private String paymentServiceTransactionId;


  public PaymentConnectorReportTransactionSettledContext settlementId(UUID settlementId) {
    
    this.settlementId = settlementId;
    return this;
  }

   /**
   * The unique ID of this transaction&#39;s settlement.
   * @return settlementId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "577b430a-b516-4c96-bba2-7f63604c4d62", value = "The unique ID of this transaction's settlement.")

  public UUID getSettlementId() {
    return settlementId;
  }


  public void setSettlementId(UUID settlementId) {
    this.settlementId = settlementId;
  }


  public PaymentConnectorReportTransactionSettledContext postedAt(String postedAt) {
    
    this.postedAt = postedAt;
    return this;
  }

   /**
   * The date and time when this transaction was settled.
   * @return postedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2023-07-26T19:23Z", value = "The date and time when this transaction was settled.")

  public String getPostedAt() {
    return postedAt;
  }


  public void setPostedAt(String postedAt) {
    this.postedAt = postedAt;
  }


  public PaymentConnectorReportTransactionSettledContext ingestedAt(String ingestedAt) {
    
    this.ingestedAt = ingestedAt;
    return this;
  }

   /**
   * The date and time when information about this transaction&#39;s settlement was ingested into our system.
   * @return ingestedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2023-07-26T19:23Z", value = "The date and time when information about this transaction's settlement was ingested into our system.")

  public String getIngestedAt() {
    return ingestedAt;
  }


  public void setIngestedAt(String ingestedAt) {
    this.ingestedAt = ingestedAt;
  }


  public PaymentConnectorReportTransactionSettledContext currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * The currency of this transaction&#39;s settlement in ISO 4217 three-letter code format.
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "The currency of this transaction's settlement in ISO 4217 three-letter code format.")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public PaymentConnectorReportTransactionSettledContext amount(Integer amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * The net amount settled for this transaction.
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "500", value = "The net amount settled for this transaction.")

  public Integer getAmount() {
    return amount;
  }


  public void setAmount(Integer amount) {
    this.amount = amount;
  }


  public PaymentConnectorReportTransactionSettledContext exchangeRate(BigDecimal exchangeRate) {
    
    this.exchangeRate = exchangeRate;
    return this;
  }

   /**
   * The exchange rate used to convert amounts from the processing currency to the settlement currency.
   * @return exchangeRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.95", value = "The exchange rate used to convert amounts from the processing currency to the settlement currency.")

  public BigDecimal getExchangeRate() {
    return exchangeRate;
  }


  public void setExchangeRate(BigDecimal exchangeRate) {
    this.exchangeRate = exchangeRate;
  }


  public PaymentConnectorReportTransactionSettledContext commission(Integer commission) {
    
    this.commission = commission;
    return this;
  }

   /**
   * The total commission paid on this transaction, expressed in &#x60;currency&#x60;.
   * @return commission
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "The total commission paid on this transaction, expressed in `currency`.")

  public Integer getCommission() {
    return commission;
  }


  public void setCommission(Integer commission) {
    this.commission = commission;
  }


  public PaymentConnectorReportTransactionSettledContext interchange(Integer interchange) {
    
    this.interchange = interchange;
    return this;
  }

   /**
   * The interchange fee for this transaction, expressed in &#x60;currency&#x60;.
   * @return interchange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "The interchange fee for this transaction, expressed in `currency`.")

  public Integer getInterchange() {
    return interchange;
  }


  public void setInterchange(Integer interchange) {
    this.interchange = interchange;
  }


  public PaymentConnectorReportTransactionSettledContext markup(Integer markup) {
    
    this.markup = markup;
    return this;
  }

   /**
   * The markup applied to this transaction by the acquirer, expressed in &#x60;currency&#x60;.
   * @return markup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "The markup applied to this transaction by the acquirer, expressed in `currency`.")

  public Integer getMarkup() {
    return markup;
  }


  public void setMarkup(Integer markup) {
    this.markup = markup;
  }


  public PaymentConnectorReportTransactionSettledContext schemeFee(Integer schemeFee) {
    
    this.schemeFee = schemeFee;
    return this;
  }

   /**
   * The scheme fee for this transaction, expressed in &#x60;currency&#x60;.
   * @return schemeFee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "The scheme fee for this transaction, expressed in `currency`.")

  public Integer getSchemeFee() {
    return schemeFee;
  }


  public void setSchemeFee(Integer schemeFee) {
    this.schemeFee = schemeFee;
  }


  public PaymentConnectorReportTransactionSettledContext paymentServiceId(UUID paymentServiceId) {
    
    this.paymentServiceId = paymentServiceId;
    return this;
  }

   /**
   * The unique ID of the payment service used.
   * @return paymentServiceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5d8fe189-ea36-4a92-b0b2-d0b2f9d8639f", value = "The unique ID of the payment service used.")

  public UUID getPaymentServiceId() {
    return paymentServiceId;
  }


  public void setPaymentServiceId(UUID paymentServiceId) {
    this.paymentServiceId = paymentServiceId;
  }


  public PaymentConnectorReportTransactionSettledContext paymentServiceDefinitionId(String paymentServiceDefinitionId) {
    
    this.paymentServiceDefinitionId = paymentServiceDefinitionId;
    return this;
  }

   /**
   * The payment service definition used.
   * @return paymentServiceDefinitionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "stripe-card", value = "The payment service definition used.")

  public String getPaymentServiceDefinitionId() {
    return paymentServiceDefinitionId;
  }


  public void setPaymentServiceDefinitionId(String paymentServiceDefinitionId) {
    this.paymentServiceDefinitionId = paymentServiceDefinitionId;
  }


  public PaymentConnectorReportTransactionSettledContext paymentServiceDisplayName(String paymentServiceDisplayName) {
    
    this.paymentServiceDisplayName = paymentServiceDisplayName;
    return this;
  }

   /**
   * The display name of the payment service used.
   * @return paymentServiceDisplayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Stripe", value = "The display name of the payment service used.")

  public String getPaymentServiceDisplayName() {
    return paymentServiceDisplayName;
  }


  public void setPaymentServiceDisplayName(String paymentServiceDisplayName) {
    this.paymentServiceDisplayName = paymentServiceDisplayName;
  }


  public PaymentConnectorReportTransactionSettledContext paymentServiceReportId(UUID paymentServiceReportId) {
    
    this.paymentServiceReportId = paymentServiceReportId;
    return this;
  }

   /**
   * The ID of the payment service report containing this transaction&#39;s settlement.
   * @return paymentServiceReportId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8724fd24-5489-4a5d-90fd-0604df7d3b83", value = "The ID of the payment service report containing this transaction's settlement.")

  public UUID getPaymentServiceReportId() {
    return paymentServiceReportId;
  }


  public void setPaymentServiceReportId(UUID paymentServiceReportId) {
    this.paymentServiceReportId = paymentServiceReportId;
  }


  public PaymentConnectorReportTransactionSettledContext paymentServiceReportFileIds(List<UUID> paymentServiceReportFileIds) {
    
    this.paymentServiceReportFileIds = paymentServiceReportFileIds;
    return this;
  }

  public PaymentConnectorReportTransactionSettledContext addPaymentServiceReportFileIdsItem(UUID paymentServiceReportFileIdsItem) {
    if (this.paymentServiceReportFileIds == null) {
      this.paymentServiceReportFileIds = new ArrayList<UUID>();
    }
    this.paymentServiceReportFileIds.add(paymentServiceReportFileIdsItem);
    return this;
  }

   /**
   * The list of payment service report file IDs that make up the payment service report containing this transaction&#39;s settlement.
   * @return paymentServiceReportFileIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"0302e601-d2c3-42b2-9825-9457145331ae\",\"7deec061-71a5-435f-beae-40f35820ca67\"]", value = "The list of payment service report file IDs that make up the payment service report containing this transaction's settlement.")

  public List<UUID> getPaymentServiceReportFileIds() {
    return paymentServiceReportFileIds;
  }


  public void setPaymentServiceReportFileIds(List<UUID> paymentServiceReportFileIds) {
    this.paymentServiceReportFileIds = paymentServiceReportFileIds;
  }


  public PaymentConnectorReportTransactionSettledContext paymentServiceTransactionId(String paymentServiceTransactionId) {
    
    this.paymentServiceTransactionId = paymentServiceTransactionId;
    return this;
  }

   /**
   * The external ID of the transaction as set by the payment service.
   * @return paymentServiceTransactionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "transaction-1234", value = "The external ID of the transaction as set by the payment service.")

  public String getPaymentServiceTransactionId() {
    return paymentServiceTransactionId;
  }


  public void setPaymentServiceTransactionId(String paymentServiceTransactionId) {
    this.paymentServiceTransactionId = paymentServiceTransactionId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentConnectorReportTransactionSettledContext paymentConnectorReportTransactionSettledContext = (PaymentConnectorReportTransactionSettledContext) o;
    return Objects.equals(this.settlementId, paymentConnectorReportTransactionSettledContext.settlementId) &&
        Objects.equals(this.postedAt, paymentConnectorReportTransactionSettledContext.postedAt) &&
        Objects.equals(this.ingestedAt, paymentConnectorReportTransactionSettledContext.ingestedAt) &&
        Objects.equals(this.currency, paymentConnectorReportTransactionSettledContext.currency) &&
        Objects.equals(this.amount, paymentConnectorReportTransactionSettledContext.amount) &&
        Objects.equals(this.exchangeRate, paymentConnectorReportTransactionSettledContext.exchangeRate) &&
        Objects.equals(this.commission, paymentConnectorReportTransactionSettledContext.commission) &&
        Objects.equals(this.interchange, paymentConnectorReportTransactionSettledContext.interchange) &&
        Objects.equals(this.markup, paymentConnectorReportTransactionSettledContext.markup) &&
        Objects.equals(this.schemeFee, paymentConnectorReportTransactionSettledContext.schemeFee) &&
        Objects.equals(this.paymentServiceId, paymentConnectorReportTransactionSettledContext.paymentServiceId) &&
        Objects.equals(this.paymentServiceDefinitionId, paymentConnectorReportTransactionSettledContext.paymentServiceDefinitionId) &&
        Objects.equals(this.paymentServiceDisplayName, paymentConnectorReportTransactionSettledContext.paymentServiceDisplayName) &&
        Objects.equals(this.paymentServiceReportId, paymentConnectorReportTransactionSettledContext.paymentServiceReportId) &&
        Objects.equals(this.paymentServiceReportFileIds, paymentConnectorReportTransactionSettledContext.paymentServiceReportFileIds) &&
        Objects.equals(this.paymentServiceTransactionId, paymentConnectorReportTransactionSettledContext.paymentServiceTransactionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(settlementId, postedAt, ingestedAt, currency, amount, exchangeRate, commission, interchange, markup, schemeFee, paymentServiceId, paymentServiceDefinitionId, paymentServiceDisplayName, paymentServiceReportId, paymentServiceReportFileIds, paymentServiceTransactionId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentConnectorReportTransactionSettledContext {\n");
    sb.append("    settlementId: ").append(toIndentedString(settlementId)).append("\n");
    sb.append("    postedAt: ").append(toIndentedString(postedAt)).append("\n");
    sb.append("    ingestedAt: ").append(toIndentedString(ingestedAt)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    exchangeRate: ").append(toIndentedString(exchangeRate)).append("\n");
    sb.append("    commission: ").append(toIndentedString(commission)).append("\n");
    sb.append("    interchange: ").append(toIndentedString(interchange)).append("\n");
    sb.append("    markup: ").append(toIndentedString(markup)).append("\n");
    sb.append("    schemeFee: ").append(toIndentedString(schemeFee)).append("\n");
    sb.append("    paymentServiceId: ").append(toIndentedString(paymentServiceId)).append("\n");
    sb.append("    paymentServiceDefinitionId: ").append(toIndentedString(paymentServiceDefinitionId)).append("\n");
    sb.append("    paymentServiceDisplayName: ").append(toIndentedString(paymentServiceDisplayName)).append("\n");
    sb.append("    paymentServiceReportId: ").append(toIndentedString(paymentServiceReportId)).append("\n");
    sb.append("    paymentServiceReportFileIds: ").append(toIndentedString(paymentServiceReportFileIds)).append("\n");
    sb.append("    paymentServiceTransactionId: ").append(toIndentedString(paymentServiceTransactionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

