/*
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gr4vy.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Click to Pay decrypted token context.
 */
@ApiModel(description = "Click to Pay decrypted token context.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DigitalWalletClickToPayTokenDecryptedContext {
  public static final String SERIALIZED_NAME_CORRELATION_ID = "correlation_id";
  @SerializedName(SERIALIZED_NAME_CORRELATION_ID)
  private String correlationId;

  public static final String SERIALIZED_NAME_MERCHANT_TRANSACTION_ID = "merchant_transaction_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_TRANSACTION_ID)
  private String merchantTransactionId;

  /**
   * The type of payment instrument.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    DPAN("dpan"),
    
    FPAN("fpan");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_EXPIRATION_DATE = "expiration_date";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE)
  private String expirationDate;

  public static final String SERIALIZED_NAME_HAS_CRYPTOGRAM = "has_cryptogram";
  @SerializedName(SERIALIZED_NAME_HAS_CRYPTOGRAM)
  private Boolean hasCryptogram;

  public static final String SERIALIZED_NAME_CARDHOLDER_NAME = "cardholder_name";
  @SerializedName(SERIALIZED_NAME_CARDHOLDER_NAME)
  private String cardholderName;

  public static final String SERIALIZED_NAME_CARD_BIN = "card_bin";
  @SerializedName(SERIALIZED_NAME_CARD_BIN)
  private String cardBin;

  public static final String SERIALIZED_NAME_CARD_LAST_FOUR = "card_last_four";
  @SerializedName(SERIALIZED_NAME_CARD_LAST_FOUR)
  private String cardLastFour;

  public static final String SERIALIZED_NAME_CARD_EXPIRATION_DATE = "card_expiration_date";
  @SerializedName(SERIALIZED_NAME_CARD_EXPIRATION_DATE)
  private String cardExpirationDate;

  public static final String SERIALIZED_NAME_CARD_TYPE = "card_type";
  @SerializedName(SERIALIZED_NAME_CARD_TYPE)
  private String cardType;

  public static final String SERIALIZED_NAME_BILLING_LINE1 = "billing_line1";
  @SerializedName(SERIALIZED_NAME_BILLING_LINE1)
  private String billingLine1;

  public static final String SERIALIZED_NAME_BILLING_LINE2 = "billing_line2";
  @SerializedName(SERIALIZED_NAME_BILLING_LINE2)
  private String billingLine2;

  public static final String SERIALIZED_NAME_BILLING_CITY = "billing_city";
  @SerializedName(SERIALIZED_NAME_BILLING_CITY)
  private String billingCity;

  public static final String SERIALIZED_NAME_BILLING_STATE = "billing_state";
  @SerializedName(SERIALIZED_NAME_BILLING_STATE)
  private String billingState;

  public static final String SERIALIZED_NAME_BILLING_ZIP = "billing_zip";
  @SerializedName(SERIALIZED_NAME_BILLING_ZIP)
  private String billingZip;

  public static final String SERIALIZED_NAME_BILLING_COUNTRY_CODE = "billing_country_code";
  @SerializedName(SERIALIZED_NAME_BILLING_COUNTRY_CODE)
  private String billingCountryCode;


  public DigitalWalletClickToPayTokenDecryptedContext correlationId(String correlationId) {
    
    this.correlationId = correlationId;
    return this;
  }

   /**
   * Correlation ID for transaction.
   * @return correlationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ba7a2034-3c9e-4d74-b0e9-d77435fd35d7", value = "Correlation ID for transaction.")

  public String getCorrelationId() {
    return correlationId;
  }


  public void setCorrelationId(String correlationId) {
    this.correlationId = correlationId;
  }


  public DigitalWalletClickToPayTokenDecryptedContext merchantTransactionId(String merchantTransactionId) {
    
    this.merchantTransactionId = merchantTransactionId;
    return this;
  }

   /**
   * Merchant Checkout Transaction Identifier which links the client-side JavaScript calls and server-side API calls for a specific transaction.
   * @return merchantTransactionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0a4e0d3.34f4a04b.47ee82c373dd4fd5398f3980b39eb6d648b9687c", value = "Merchant Checkout Transaction Identifier which links the client-side JavaScript calls and server-side API calls for a specific transaction.")

  public String getMerchantTransactionId() {
    return merchantTransactionId;
  }


  public void setMerchantTransactionId(String merchantTransactionId) {
    this.merchantTransactionId = merchantTransactionId;
  }


  public DigitalWalletClickToPayTokenDecryptedContext type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of payment instrument.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "dpan", value = "The type of payment instrument.")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public DigitalWalletClickToPayTokenDecryptedContext expirationDate(String expirationDate) {
    
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Expiration of the card/token.
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Expiration of the card/token.")

  public String getExpirationDate() {
    return expirationDate;
  }


  public void setExpirationDate(String expirationDate) {
    this.expirationDate = expirationDate;
  }


  public DigitalWalletClickToPayTokenDecryptedContext hasCryptogram(Boolean hasCryptogram) {
    
    this.hasCryptogram = hasCryptogram;
    return this;
  }

   /**
   * Online payment cryptogram, as defined by 3-D Secure.
   * @return hasCryptogram
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Online payment cryptogram, as defined by 3-D Secure.")

  public Boolean getHasCryptogram() {
    return hasCryptogram;
  }


  public void setHasCryptogram(Boolean hasCryptogram) {
    this.hasCryptogram = hasCryptogram;
  }


  public DigitalWalletClickToPayTokenDecryptedContext cardholderName(String cardholderName) {
    
    this.cardholderName = cardholderName;
    return this;
  }

   /**
   * The cardholder name.
   * @return cardholderName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The cardholder name.")

  public String getCardholderName() {
    return cardholderName;
  }


  public void setCardholderName(String cardholderName) {
    this.cardholderName = cardholderName;
  }


  public DigitalWalletClickToPayTokenDecryptedContext cardBin(String cardBin) {
    
    this.cardBin = cardBin;
    return this;
  }

   /**
   * First six digits of underlying card.
   * @return cardBin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "424242", value = "First six digits of underlying card.")

  public String getCardBin() {
    return cardBin;
  }


  public void setCardBin(String cardBin) {
    this.cardBin = cardBin;
  }


  public DigitalWalletClickToPayTokenDecryptedContext cardLastFour(String cardLastFour) {
    
    this.cardLastFour = cardLastFour;
    return this;
  }

   /**
   * Last four digits of underlying card.
   * @return cardLastFour
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last four digits of underlying card.")

  public String getCardLastFour() {
    return cardLastFour;
  }


  public void setCardLastFour(String cardLastFour) {
    this.cardLastFour = cardLastFour;
  }


  public DigitalWalletClickToPayTokenDecryptedContext cardExpirationDate(String cardExpirationDate) {
    
    this.cardExpirationDate = cardExpirationDate;
    return this;
  }

   /**
   * Expiration date of underlying card.
   * @return cardExpirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Expiration date of underlying card.")

  public String getCardExpirationDate() {
    return cardExpirationDate;
  }


  public void setCardExpirationDate(String cardExpirationDate) {
    this.cardExpirationDate = cardExpirationDate;
  }


  public DigitalWalletClickToPayTokenDecryptedContext cardType(String cardType) {
    
    this.cardType = cardType;
    return this;
  }

   /**
   * Card type.
   * @return cardType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CREDIT", value = "Card type.")

  public String getCardType() {
    return cardType;
  }


  public void setCardType(String cardType) {
    this.cardType = cardType;
  }


  public DigitalWalletClickToPayTokenDecryptedContext billingLine1(String billingLine1) {
    
    this.billingLine1 = billingLine1;
    return this;
  }

   /**
   * Address line 1.
   * @return billingLine1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Address line 1.")

  public String getBillingLine1() {
    return billingLine1;
  }


  public void setBillingLine1(String billingLine1) {
    this.billingLine1 = billingLine1;
  }


  public DigitalWalletClickToPayTokenDecryptedContext billingLine2(String billingLine2) {
    
    this.billingLine2 = billingLine2;
    return this;
  }

   /**
   * Address line 2.
   * @return billingLine2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Address line 2.")

  public String getBillingLine2() {
    return billingLine2;
  }


  public void setBillingLine2(String billingLine2) {
    this.billingLine2 = billingLine2;
  }


  public DigitalWalletClickToPayTokenDecryptedContext billingCity(String billingCity) {
    
    this.billingCity = billingCity;
    return this;
  }

   /**
   * Address city.
   * @return billingCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Address city.")

  public String getBillingCity() {
    return billingCity;
  }


  public void setBillingCity(String billingCity) {
    this.billingCity = billingCity;
  }


  public DigitalWalletClickToPayTokenDecryptedContext billingState(String billingState) {
    
    this.billingState = billingState;
    return this;
  }

   /**
   * Address state.
   * @return billingState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Address state.")

  public String getBillingState() {
    return billingState;
  }


  public void setBillingState(String billingState) {
    this.billingState = billingState;
  }


  public DigitalWalletClickToPayTokenDecryptedContext billingZip(String billingZip) {
    
    this.billingZip = billingZip;
    return this;
  }

   /**
   * Address zip/postal code.
   * @return billingZip
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Address zip/postal code.")

  public String getBillingZip() {
    return billingZip;
  }


  public void setBillingZip(String billingZip) {
    this.billingZip = billingZip;
  }


  public DigitalWalletClickToPayTokenDecryptedContext billingCountryCode(String billingCountryCode) {
    
    this.billingCountryCode = billingCountryCode;
    return this;
  }

   /**
   * ISO 3166-1 alpha 2 address country code.
   * @return billingCountryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ISO 3166-1 alpha 2 address country code.")

  public String getBillingCountryCode() {
    return billingCountryCode;
  }


  public void setBillingCountryCode(String billingCountryCode) {
    this.billingCountryCode = billingCountryCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DigitalWalletClickToPayTokenDecryptedContext digitalWalletClickToPayTokenDecryptedContext = (DigitalWalletClickToPayTokenDecryptedContext) o;
    return Objects.equals(this.correlationId, digitalWalletClickToPayTokenDecryptedContext.correlationId) &&
        Objects.equals(this.merchantTransactionId, digitalWalletClickToPayTokenDecryptedContext.merchantTransactionId) &&
        Objects.equals(this.type, digitalWalletClickToPayTokenDecryptedContext.type) &&
        Objects.equals(this.expirationDate, digitalWalletClickToPayTokenDecryptedContext.expirationDate) &&
        Objects.equals(this.hasCryptogram, digitalWalletClickToPayTokenDecryptedContext.hasCryptogram) &&
        Objects.equals(this.cardholderName, digitalWalletClickToPayTokenDecryptedContext.cardholderName) &&
        Objects.equals(this.cardBin, digitalWalletClickToPayTokenDecryptedContext.cardBin) &&
        Objects.equals(this.cardLastFour, digitalWalletClickToPayTokenDecryptedContext.cardLastFour) &&
        Objects.equals(this.cardExpirationDate, digitalWalletClickToPayTokenDecryptedContext.cardExpirationDate) &&
        Objects.equals(this.cardType, digitalWalletClickToPayTokenDecryptedContext.cardType) &&
        Objects.equals(this.billingLine1, digitalWalletClickToPayTokenDecryptedContext.billingLine1) &&
        Objects.equals(this.billingLine2, digitalWalletClickToPayTokenDecryptedContext.billingLine2) &&
        Objects.equals(this.billingCity, digitalWalletClickToPayTokenDecryptedContext.billingCity) &&
        Objects.equals(this.billingState, digitalWalletClickToPayTokenDecryptedContext.billingState) &&
        Objects.equals(this.billingZip, digitalWalletClickToPayTokenDecryptedContext.billingZip) &&
        Objects.equals(this.billingCountryCode, digitalWalletClickToPayTokenDecryptedContext.billingCountryCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(correlationId, merchantTransactionId, type, expirationDate, hasCryptogram, cardholderName, cardBin, cardLastFour, cardExpirationDate, cardType, billingLine1, billingLine2, billingCity, billingState, billingZip, billingCountryCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DigitalWalletClickToPayTokenDecryptedContext {\n");
    sb.append("    correlationId: ").append(toIndentedString(correlationId)).append("\n");
    sb.append("    merchantTransactionId: ").append(toIndentedString(merchantTransactionId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    hasCryptogram: ").append(toIndentedString(hasCryptogram)).append("\n");
    sb.append("    cardholderName: ").append(toIndentedString(cardholderName)).append("\n");
    sb.append("    cardBin: ").append(toIndentedString(cardBin)).append("\n");
    sb.append("    cardLastFour: ").append(toIndentedString(cardLastFour)).append("\n");
    sb.append("    cardExpirationDate: ").append(toIndentedString(cardExpirationDate)).append("\n");
    sb.append("    cardType: ").append(toIndentedString(cardType)).append("\n");
    sb.append("    billingLine1: ").append(toIndentedString(billingLine1)).append("\n");
    sb.append("    billingLine2: ").append(toIndentedString(billingLine2)).append("\n");
    sb.append("    billingCity: ").append(toIndentedString(billingCity)).append("\n");
    sb.append("    billingState: ").append(toIndentedString(billingState)).append("\n");
    sb.append("    billingZip: ").append(toIndentedString(billingZip)).append("\n");
    sb.append("    billingCountryCode: ").append(toIndentedString(billingCountryCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

