/*
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gr4vy.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * BIN lookup request context.
 */
@ApiModel(description = "BIN lookup request context.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BINLookupRequestContext {
  public static final String SERIALIZED_NAME_RESPONSE = "response";
  @SerializedName(SERIALIZED_NAME_RESPONSE)
  private String response;

  public static final String SERIALIZED_NAME_RESPONSE_STATUS_CODE = "response_status_code";
  @SerializedName(SERIALIZED_NAME_RESPONSE_STATUS_CODE)
  private Integer responseStatusCode;

  public static final String SERIALIZED_NAME_SUCCESS = "success";
  @SerializedName(SERIALIZED_NAME_SUCCESS)
  private Boolean success;

  public static final String SERIALIZED_NAME_BIN = "bin";
  @SerializedName(SERIALIZED_NAME_BIN)
  private String bin;

  public static final String SERIALIZED_NAME_INSTRUMENT = "instrument";
  @SerializedName(SERIALIZED_NAME_INSTRUMENT)
  private String instrument;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  /**
   * The card scheme result from the lookup response.
   */
  @JsonAdapter(SchemeEnum.Adapter.class)
  public enum SchemeEnum {
    ACCEL("accel"),
    
    AMEX("amex"),
    
    BANCONTACT("bancontact"),
    
    CARTE_BANCAIRE("carte-bancaire"),
    
    CIRRUS("cirrus"),
    
    CULIANCE("culiance"),
    
    DANKORT("dankort"),
    
    DINERS_CLUB("diners-club"),
    
    DISCOVER("discover"),
    
    EFTPOS_AUSTRALIA("eftpos-australia"),
    
    ELO("elo"),
    
    HIPERCARD("hipercard"),
    
    JCB("jcb"),
    
    MAESTRO("maestro"),
    
    MASTERCARD("mastercard"),
    
    MIR("mir"),
    
    NYCE("nyce"),
    
    OTHER("other"),
    
    PULSE("pulse"),
    
    RUPAY("rupay"),
    
    STAR("star"),
    
    UATP("uatp"),
    
    UNIONPAY("unionpay"),
    
    VISA("visa"),
    
    NULL("null");

    private String value;

    SchemeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SchemeEnum fromValue(String value) {
      for (SchemeEnum b : SchemeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SchemeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SchemeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SchemeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SchemeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SCHEME = "scheme";
  @SerializedName(SERIALIZED_NAME_SCHEME)
  private SchemeEnum scheme;

  /**
   * Gets or Sets additionalSchemes
   */
  @JsonAdapter(AdditionalSchemesEnum.Adapter.class)
  public enum AdditionalSchemesEnum {
    ACCEL("accel"),
    
    AMEX("amex"),
    
    BANCONTACT("bancontact"),
    
    CARTE_BANCAIRE("carte-bancaire"),
    
    CIRRUS("cirrus"),
    
    CULIANCE("culiance"),
    
    DANKORT("dankort"),
    
    DINERS_CLUB("diners-club"),
    
    DISCOVER("discover"),
    
    EFTPOS_AUSTRALIA("eftpos-australia"),
    
    ELO("elo"),
    
    HIPERCARD("hipercard"),
    
    JCB("jcb"),
    
    MAESTRO("maestro"),
    
    MASTERCARD("mastercard"),
    
    MIR("mir"),
    
    NYCE("nyce"),
    
    OTHER("other"),
    
    PULSE("pulse"),
    
    RUPAY("rupay"),
    
    STAR("star"),
    
    UATP("uatp"),
    
    UNIONPAY("unionpay"),
    
    VISA("visa"),
    
    NULL("null");

    private String value;

    AdditionalSchemesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AdditionalSchemesEnum fromValue(String value) {
      for (AdditionalSchemesEnum b : AdditionalSchemesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AdditionalSchemesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AdditionalSchemesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AdditionalSchemesEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AdditionalSchemesEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ADDITIONAL_SCHEMES = "additional_schemes";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_SCHEMES)
  private List<AdditionalSchemesEnum> additionalSchemes = null;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "country_code";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_SUPPORTS_NETWORK_TOKENS = "supports_network_tokens";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_NETWORK_TOKENS)
  private Boolean supportsNetworkTokens;


  public BINLookupRequestContext response(String response) {
    
    this.response = response;
    return this;
  }

   /**
   * The response body received from the &#x60;url&#x60;.
   * @return response
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{}", value = "The response body received from the `url`.")

  public String getResponse() {
    return response;
  }


  public void setResponse(String response) {
    this.response = response;
  }


  public BINLookupRequestContext responseStatusCode(Integer responseStatusCode) {
    
    this.responseStatusCode = responseStatusCode;
    return this;
  }

   /**
   * The response status code received from the &#x60;url&#x60;.
   * @return responseStatusCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "200", value = "The response status code received from the `url`.")

  public Integer getResponseStatusCode() {
    return responseStatusCode;
  }


  public void setResponseStatusCode(Integer responseStatusCode) {
    this.responseStatusCode = responseStatusCode;
  }


  public BINLookupRequestContext success(Boolean success) {
    
    this.success = success;
    return this;
  }

   /**
   * Whether the BIN lookup was successful or not.
   * @return success
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the BIN lookup was successful or not.")

  public Boolean getSuccess() {
    return success;
  }


  public void setSuccess(Boolean success) {
    this.success = success;
  }


  public BINLookupRequestContext bin(String bin) {
    
    this.bin = bin;
    return this;
  }

   /**
   * The value used to lookup BIN details.
   * @return bin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value used to lookup BIN details.")

  public String getBin() {
    return bin;
  }


  public void setBin(String bin) {
    this.bin = bin;
  }


  public BINLookupRequestContext instrument(String instrument) {
    
    this.instrument = instrument;
    return this;
  }

   /**
   * The instrument type used to lookup BIN details.
   * @return instrument
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "pan", value = "The instrument type used to lookup BIN details.")

  public String getInstrument() {
    return instrument;
  }


  public void setInstrument(String instrument) {
    this.instrument = instrument;
  }


  public BINLookupRequestContext type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of card, i.e. credit or debit, from the lookup response.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of card, i.e. credit or debit, from the lookup response.")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public BINLookupRequestContext scheme(SchemeEnum scheme) {
    
    this.scheme = scheme;
    return this;
  }

   /**
   * The card scheme result from the lookup response.
   * @return scheme
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "visa", value = "The card scheme result from the lookup response.")

  public SchemeEnum getScheme() {
    return scheme;
  }


  public void setScheme(SchemeEnum scheme) {
    this.scheme = scheme;
  }


  public BINLookupRequestContext additionalSchemes(List<AdditionalSchemesEnum> additionalSchemes) {
    
    this.additionalSchemes = additionalSchemes;
    return this;
  }

  public BINLookupRequestContext addAdditionalSchemesItem(AdditionalSchemesEnum additionalSchemesItem) {
    if (this.additionalSchemes == null) {
      this.additionalSchemes = new ArrayList<AdditionalSchemesEnum>();
    }
    this.additionalSchemes.add(additionalSchemesItem);
    return this;
  }

   /**
   * The card additional schemes from the lookup response.
   * @return additionalSchemes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The card additional schemes from the lookup response.")

  public List<AdditionalSchemesEnum> getAdditionalSchemes() {
    return additionalSchemes;
  }


  public void setAdditionalSchemes(List<AdditionalSchemesEnum> additionalSchemes) {
    this.additionalSchemes = additionalSchemes;
  }


  public BINLookupRequestContext countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * The card country code result from the lookup response.
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The card country code result from the lookup response.")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public BINLookupRequestContext supportsNetworkTokens(Boolean supportsNetworkTokens) {
    
    this.supportsNetworkTokens = supportsNetworkTokens;
    return this;
  }

   /**
   * Whether the issuing bank supports network tokenization for this card.
   * @return supportsNetworkTokens
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the issuing bank supports network tokenization for this card.")

  public Boolean getSupportsNetworkTokens() {
    return supportsNetworkTokens;
  }


  public void setSupportsNetworkTokens(Boolean supportsNetworkTokens) {
    this.supportsNetworkTokens = supportsNetworkTokens;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BINLookupRequestContext biNLookupRequestContext = (BINLookupRequestContext) o;
    return Objects.equals(this.response, biNLookupRequestContext.response) &&
        Objects.equals(this.responseStatusCode, biNLookupRequestContext.responseStatusCode) &&
        Objects.equals(this.success, biNLookupRequestContext.success) &&
        Objects.equals(this.bin, biNLookupRequestContext.bin) &&
        Objects.equals(this.instrument, biNLookupRequestContext.instrument) &&
        Objects.equals(this.type, biNLookupRequestContext.type) &&
        Objects.equals(this.scheme, biNLookupRequestContext.scheme) &&
        Objects.equals(this.additionalSchemes, biNLookupRequestContext.additionalSchemes) &&
        Objects.equals(this.countryCode, biNLookupRequestContext.countryCode) &&
        Objects.equals(this.supportsNetworkTokens, biNLookupRequestContext.supportsNetworkTokens);
  }

  @Override
  public int hashCode() {
    return Objects.hash(response, responseStatusCode, success, bin, instrument, type, scheme, additionalSchemes, countryCode, supportsNetworkTokens);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BINLookupRequestContext {\n");
    sb.append("    response: ").append(toIndentedString(response)).append("\n");
    sb.append("    responseStatusCode: ").append(toIndentedString(responseStatusCode)).append("\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    bin: ").append(toIndentedString(bin)).append("\n");
    sb.append("    instrument: ").append(toIndentedString(instrument)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    scheme: ").append(toIndentedString(scheme)).append("\n");
    sb.append("    additionalSchemes: ").append(toIndentedString(additionalSchemes)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    supportsNetworkTokens: ").append(toIndentedString(supportsNetworkTokens)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

