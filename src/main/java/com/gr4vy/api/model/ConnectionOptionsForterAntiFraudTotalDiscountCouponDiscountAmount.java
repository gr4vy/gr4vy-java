/*
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gr4vy.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * A monetary amount in USD or local currency.
 */
@ApiModel(description = "A monetary amount in USD or local currency.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ConnectionOptionsForterAntiFraudTotalDiscountCouponDiscountAmount {
  public static final String SERIALIZED_NAME_AMOUNT_USD = "amount_usd";
  @SerializedName(SERIALIZED_NAME_AMOUNT_USD)
  private String amountUsd;

  public static final String SERIALIZED_NAME_AMOUNT_LOCAL_CURRENCY = "amount_local_currency";
  @SerializedName(SERIALIZED_NAME_AMOUNT_LOCAL_CURRENCY)
  private String amountLocalCurrency;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;


  public ConnectionOptionsForterAntiFraudTotalDiscountCouponDiscountAmount amountUsd(String amountUsd) {
    
    this.amountUsd = amountUsd;
    return this;
  }

   /**
   * Transaction amount in USD.
   * @return amountUsd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "99.95", value = "Transaction amount in USD.")

  public String getAmountUsd() {
    return amountUsd;
  }


  public void setAmountUsd(String amountUsd) {
    this.amountUsd = amountUsd;
  }


  public ConnectionOptionsForterAntiFraudTotalDiscountCouponDiscountAmount amountLocalCurrency(String amountLocalCurrency) {
    
    this.amountLocalCurrency = amountLocalCurrency;
    return this;
  }

   /**
   * Transaction amount in currency chosen by the buyer.
   * @return amountLocalCurrency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "105.55", value = "Transaction amount in currency chosen by the buyer.")

  public String getAmountLocalCurrency() {
    return amountLocalCurrency;
  }


  public void setAmountLocalCurrency(String amountLocalCurrency) {
    this.amountLocalCurrency = amountLocalCurrency;
  }


  public ConnectionOptionsForterAntiFraudTotalDiscountCouponDiscountAmount currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Transaction currency chosen by the buyer, 3-letter ISO-4217 format currency code.
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CAD", value = "Transaction currency chosen by the buyer, 3-letter ISO-4217 format currency code.")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectionOptionsForterAntiFraudTotalDiscountCouponDiscountAmount connectionOptionsForterAntiFraudTotalDiscountCouponDiscountAmount = (ConnectionOptionsForterAntiFraudTotalDiscountCouponDiscountAmount) o;
    return Objects.equals(this.amountUsd, connectionOptionsForterAntiFraudTotalDiscountCouponDiscountAmount.amountUsd) &&
        Objects.equals(this.amountLocalCurrency, connectionOptionsForterAntiFraudTotalDiscountCouponDiscountAmount.amountLocalCurrency) &&
        Objects.equals(this.currency, connectionOptionsForterAntiFraudTotalDiscountCouponDiscountAmount.currency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amountUsd, amountLocalCurrency, currency);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectionOptionsForterAntiFraudTotalDiscountCouponDiscountAmount {\n");
    sb.append("    amountUsd: ").append(toIndentedString(amountUsd)).append("\n");
    sb.append("    amountLocalCurrency: ").append(toIndentedString(amountLocalCurrency)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

