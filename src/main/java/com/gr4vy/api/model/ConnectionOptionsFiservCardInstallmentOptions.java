/*
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gr4vy.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * Fiserv installment options.
 */
@ApiModel(description = "Fiserv installment options.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ConnectionOptionsFiservCardInstallmentOptions {
  public static final String SERIALIZED_NAME_NUMBER_OF_INSTALLMENTS = "numberOfInstallments";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_INSTALLMENTS)
  private BigDecimal numberOfInstallments;

  public static final String SERIALIZED_NAME_INSTALLMENTS_INTEREST = "installmentsInterest";
  @SerializedName(SERIALIZED_NAME_INSTALLMENTS_INTEREST)
  private Boolean installmentsInterest;

  public static final String SERIALIZED_NAME_INSTALLMENT_DELAY_MONTHS = "installmentDelayMonths";
  @SerializedName(SERIALIZED_NAME_INSTALLMENT_DELAY_MONTHS)
  private BigDecimal installmentDelayMonths;

  public static final String SERIALIZED_NAME_MERCHANT_ADVICE_CODE_SUPPORTED = "merchantAdviceCodeSupported";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ADVICE_CODE_SUPPORTED)
  private Boolean merchantAdviceCodeSupported;


  public ConnectionOptionsFiservCardInstallmentOptions numberOfInstallments(BigDecimal numberOfInstallments) {
    
    this.numberOfInstallments = numberOfInstallments;
    return this;
  }

   /**
   * Number of installments for a sale transaction if the customer pays the total amount in multiple transactions.
   * @return numberOfInstallments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of installments for a sale transaction if the customer pays the total amount in multiple transactions.")

  public BigDecimal getNumberOfInstallments() {
    return numberOfInstallments;
  }


  public void setNumberOfInstallments(BigDecimal numberOfInstallments) {
    this.numberOfInstallments = numberOfInstallments;
  }


  public ConnectionOptionsFiservCardInstallmentOptions installmentsInterest(Boolean installmentsInterest) {
    
    this.installmentsInterest = installmentsInterest;
    return this;
  }

   /**
   * Indicates whether the installment interest amount has been applied.
   * @return installmentsInterest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the installment interest amount has been applied.")

  public Boolean getInstallmentsInterest() {
    return installmentsInterest;
  }


  public void setInstallmentsInterest(Boolean installmentsInterest) {
    this.installmentsInterest = installmentsInterest;
  }


  public ConnectionOptionsFiservCardInstallmentOptions installmentDelayMonths(BigDecimal installmentDelayMonths) {
    
    this.installmentDelayMonths = installmentDelayMonths;
    return this;
  }

   /**
   * The number of months the first installment payment will be delayed.
   * @return installmentDelayMonths
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of months the first installment payment will be delayed.")

  public BigDecimal getInstallmentDelayMonths() {
    return installmentDelayMonths;
  }


  public void setInstallmentDelayMonths(BigDecimal installmentDelayMonths) {
    this.installmentDelayMonths = installmentDelayMonths;
  }


  public ConnectionOptionsFiservCardInstallmentOptions merchantAdviceCodeSupported(Boolean merchantAdviceCodeSupported) {
    
    this.merchantAdviceCodeSupported = merchantAdviceCodeSupported;
    return this;
  }

   /**
   * Indicates if the merchant supports merchant advice code (MAC) in order to receive table 55 code for a declined recurring transaction.
   * @return merchantAdviceCodeSupported
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if the merchant supports merchant advice code (MAC) in order to receive table 55 code for a declined recurring transaction.")

  public Boolean getMerchantAdviceCodeSupported() {
    return merchantAdviceCodeSupported;
  }


  public void setMerchantAdviceCodeSupported(Boolean merchantAdviceCodeSupported) {
    this.merchantAdviceCodeSupported = merchantAdviceCodeSupported;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectionOptionsFiservCardInstallmentOptions connectionOptionsFiservCardInstallmentOptions = (ConnectionOptionsFiservCardInstallmentOptions) o;
    return Objects.equals(this.numberOfInstallments, connectionOptionsFiservCardInstallmentOptions.numberOfInstallments) &&
        Objects.equals(this.installmentsInterest, connectionOptionsFiservCardInstallmentOptions.installmentsInterest) &&
        Objects.equals(this.installmentDelayMonths, connectionOptionsFiservCardInstallmentOptions.installmentDelayMonths) &&
        Objects.equals(this.merchantAdviceCodeSupported, connectionOptionsFiservCardInstallmentOptions.merchantAdviceCodeSupported);
  }

  @Override
  public int hashCode() {
    return Objects.hash(numberOfInstallments, installmentsInterest, installmentDelayMonths, merchantAdviceCodeSupported);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectionOptionsFiservCardInstallmentOptions {\n");
    sb.append("    numberOfInstallments: ").append(toIndentedString(numberOfInstallments)).append("\n");
    sb.append("    installmentsInterest: ").append(toIndentedString(installmentsInterest)).append("\n");
    sb.append("    installmentDelayMonths: ").append(toIndentedString(installmentDelayMonths)).append("\n");
    sb.append("    merchantAdviceCodeSupported: ").append(toIndentedString(merchantAdviceCodeSupported)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

