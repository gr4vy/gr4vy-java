/*
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gr4vy.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;


/**
 * A gift card stored for a buyer.
 */
@ApiModel(description = "A gift card stored for a buyer.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GiftCardSummary {
  /**
   * The type of this resource.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    GIFT_CARD("gift-card");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_MERCHANT_ACCOUNT_ID = "merchant_account_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ACCOUNT_ID)
  private String merchantAccountId;

  public static final String SERIALIZED_NAME_BIN = "bin";
  @SerializedName(SERIALIZED_NAME_BIN)
  private String bin;

  public static final String SERIALIZED_NAME_SUB_BIN = "sub_bin";
  @SerializedName(SERIALIZED_NAME_SUB_BIN)
  private String subBin;

  public static final String SERIALIZED_NAME_LAST4 = "last4";
  @SerializedName(SERIALIZED_NAME_LAST4)
  private String last4;

  public static final String SERIALIZED_NAME_EXPIRATION_DATE = "expiration_date";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE)
  private String expirationDate;

  public static final String SERIALIZED_NAME_BALANCE = "balance";
  @SerializedName(SERIALIZED_NAME_BALANCE)
  private Integer balance;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  /**
   * If the last balance update failed, this will contain the internal code for this error.
   */
  @JsonAdapter(BalanceErrorCodeEnum.Adapter.class)
  public enum BalanceErrorCodeEnum {
    DEACTIVATED_CARD("deactivated_card"),
    
    EXPIRED_CARD("expired_card"),
    
    INCORRECT_CURRENCY("incorrect_currency"),
    
    INSUFFICIENT_FUNDS("insufficient_funds"),
    
    INVALID_AMOUNT("invalid_amount"),
    
    INVALID_GIFT_CARD("invalid_gift_card"),
    
    INVALID_SERVICE_CONFIGURATION("invalid_service_configuration"),
    
    INVALID_SERVICE_CREDENTIALS("invalid_service_credentials"),
    
    OPERATION_CANCELED("operation_canceled"),
    
    SERVICE_ERROR("service_error"),
    
    SERVICE_NETWORK_ERROR("service_network_error"),
    
    UNKNOWN_ERROR("unknown_error");

    private String value;

    BalanceErrorCodeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BalanceErrorCodeEnum fromValue(String value) {
      for (BalanceErrorCodeEnum b : BalanceErrorCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<BalanceErrorCodeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BalanceErrorCodeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BalanceErrorCodeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return BalanceErrorCodeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_BALANCE_ERROR_CODE = "balance_error_code";
  @SerializedName(SERIALIZED_NAME_BALANCE_ERROR_CODE)
  private BalanceErrorCodeEnum balanceErrorCode;

  public static final String SERIALIZED_NAME_BALANCE_RAW_ERROR_CODE = "balance_raw_error_code";
  @SerializedName(SERIALIZED_NAME_BALANCE_RAW_ERROR_CODE)
  private String balanceRawErrorCode;

  public static final String SERIALIZED_NAME_BALANCE_RAW_ERROR_MESSAGE = "balance_raw_error_message";
  @SerializedName(SERIALIZED_NAME_BALANCE_RAW_ERROR_MESSAGE)
  private String balanceRawErrorMessage;


  public GiftCardSummary type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of this resource.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "gift-card", value = "The type of this resource.")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public GiftCardSummary id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of this gift card.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "e6cdf979-87e2-4796-8ff6-9784d5aed893", value = "The ID of this gift card.")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public GiftCardSummary merchantAccountId(String merchantAccountId) {
    
    this.merchantAccountId = merchantAccountId;
    return this;
  }

   /**
   * The unique ID for a merchant account.
   * @return merchantAccountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "default", value = "The unique ID for a merchant account.")

  public String getMerchantAccountId() {
    return merchantAccountId;
  }


  public void setMerchantAccountId(String merchantAccountId) {
    this.merchantAccountId = merchantAccountId;
  }


  public GiftCardSummary bin(String bin) {
    
    this.bin = bin;
    return this;
  }

   /**
   * The first 6 digits of the full gift card number.
   * @return bin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "412345", value = "The first 6 digits of the full gift card number.")

  public String getBin() {
    return bin;
  }


  public void setBin(String bin) {
    this.bin = bin;
  }


  public GiftCardSummary subBin(String subBin) {
    
    this.subBin = subBin;
    return this;
  }

   /**
   * The 3 digits after the &#x60;bin&#x60; of the full gift card number.
   * @return subBin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "554", value = "The 3 digits after the `bin` of the full gift card number.")

  public String getSubBin() {
    return subBin;
  }


  public void setSubBin(String subBin) {
    this.subBin = subBin;
  }


  public GiftCardSummary last4(String last4) {
    
    this.last4 = last4;
    return this;
  }

   /**
   * The last 4 digits for the gift card.
   * @return last4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1234", value = "The last 4 digits for the gift card.")

  public String getLast4() {
    return last4;
  }


  public void setLast4(String last4) {
    this.last4 = last4;
  }


  public GiftCardSummary expirationDate(String expirationDate) {
    
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * The date and time when this gift card expires. This is a full date/time and may be more accurate than the actual expiry date received by the gift card service.
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2013-07-16T19:23Z", value = "The date and time when this gift card expires. This is a full date/time and may be more accurate than the actual expiry date received by the gift card service.")

  public String getExpirationDate() {
    return expirationDate;
  }


  public void setExpirationDate(String expirationDate) {
    this.expirationDate = expirationDate;
  }


  public GiftCardSummary balance(Integer balance) {
    
    this.balance = balance;
    return this;
  }

   /**
   * The amount remaining on the balance for this gift card according to the gift card service. This may be &#x60;null&#x60; if the balance could not be fetched.
   * minimum: 0
   * maximum: 99999999
   * @return balance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1299", value = "The amount remaining on the balance for this gift card according to the gift card service. This may be `null` if the balance could not be fetched.")

  public Integer getBalance() {
    return balance;
  }


  public void setBalance(Integer balance) {
    this.balance = balance;
  }


  public GiftCardSummary currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * The ISO-4217 currency code that this gift card has a balance for.
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "The ISO-4217 currency code that this gift card has a balance for.")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public GiftCardSummary balanceErrorCode(BalanceErrorCodeEnum balanceErrorCode) {
    
    this.balanceErrorCode = balanceErrorCode;
    return this;
  }

   /**
   * If the last balance update failed, this will contain the internal code for this error.
   * @return balanceErrorCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "incorrect_currency", value = "If the last balance update failed, this will contain the internal code for this error.")

  public BalanceErrorCodeEnum getBalanceErrorCode() {
    return balanceErrorCode;
  }


  public void setBalanceErrorCode(BalanceErrorCodeEnum balanceErrorCode) {
    this.balanceErrorCode = balanceErrorCode;
  }


  public GiftCardSummary balanceRawErrorCode(String balanceRawErrorCode) {
    
    this.balanceRawErrorCode = balanceRawErrorCode;
    return this;
  }

   /**
   * If the last balance update failed, this will contain the the raw error code received from the gift card provider.
   * @return balanceRawErrorCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10363", value = "If the last balance update failed, this will contain the the raw error code received from the gift card provider.")

  public String getBalanceRawErrorCode() {
    return balanceRawErrorCode;
  }


  public void setBalanceRawErrorCode(String balanceRawErrorCode) {
    this.balanceRawErrorCode = balanceRawErrorCode;
  }


  public GiftCardSummary balanceRawErrorMessage(String balanceRawErrorMessage) {
    
    this.balanceRawErrorMessage = balanceRawErrorMessage;
    return this;
  }

   /**
   * If the last balance update failed, this will contain the the raw error message received from the gift card provider.
   * @return balanceRawErrorMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "This currency is not supported by the merchant.", value = "If the last balance update failed, this will contain the the raw error message received from the gift card provider.")

  public String getBalanceRawErrorMessage() {
    return balanceRawErrorMessage;
  }


  public void setBalanceRawErrorMessage(String balanceRawErrorMessage) {
    this.balanceRawErrorMessage = balanceRawErrorMessage;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GiftCardSummary giftCardSummary = (GiftCardSummary) o;
    return Objects.equals(this.type, giftCardSummary.type) &&
        Objects.equals(this.id, giftCardSummary.id) &&
        Objects.equals(this.merchantAccountId, giftCardSummary.merchantAccountId) &&
        Objects.equals(this.bin, giftCardSummary.bin) &&
        Objects.equals(this.subBin, giftCardSummary.subBin) &&
        Objects.equals(this.last4, giftCardSummary.last4) &&
        Objects.equals(this.expirationDate, giftCardSummary.expirationDate) &&
        Objects.equals(this.balance, giftCardSummary.balance) &&
        Objects.equals(this.currency, giftCardSummary.currency) &&
        Objects.equals(this.balanceErrorCode, giftCardSummary.balanceErrorCode) &&
        Objects.equals(this.balanceRawErrorCode, giftCardSummary.balanceRawErrorCode) &&
        Objects.equals(this.balanceRawErrorMessage, giftCardSummary.balanceRawErrorMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, id, merchantAccountId, bin, subBin, last4, expirationDate, balance, currency, balanceErrorCode, balanceRawErrorCode, balanceRawErrorMessage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GiftCardSummary {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    merchantAccountId: ").append(toIndentedString(merchantAccountId)).append("\n");
    sb.append("    bin: ").append(toIndentedString(bin)).append("\n");
    sb.append("    subBin: ").append(toIndentedString(subBin)).append("\n");
    sb.append("    last4: ").append(toIndentedString(last4)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    balanceErrorCode: ").append(toIndentedString(balanceErrorCode)).append("\n");
    sb.append("    balanceRawErrorCode: ").append(toIndentedString(balanceRawErrorCode)).append("\n");
    sb.append("    balanceRawErrorMessage: ").append(toIndentedString(balanceRawErrorMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

