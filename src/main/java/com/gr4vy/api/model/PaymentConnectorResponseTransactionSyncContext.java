/*
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gr4vy.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.UUID;

/**
 * Additional context for this event.
 */
@ApiModel(description = "Additional context for this event.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PaymentConnectorResponseTransactionSyncContext {
  public static final String SERIALIZED_NAME_PAYMENT_SERVICE_ID = "payment_service_id";
  @SerializedName(SERIALIZED_NAME_PAYMENT_SERVICE_ID)
  private UUID paymentServiceId;

  public static final String SERIALIZED_NAME_PAYMENT_SERVICE_DISPLAY_NAME = "payment_service_display_name";
  @SerializedName(SERIALIZED_NAME_PAYMENT_SERVICE_DISPLAY_NAME)
  private String paymentServiceDisplayName;

  public static final String SERIALIZED_NAME_PAYMENT_SERVICE_DEFINITION_ID = "payment_service_definition_id";
  @SerializedName(SERIALIZED_NAME_PAYMENT_SERVICE_DEFINITION_ID)
  private String paymentServiceDefinitionId;

  public static final String SERIALIZED_NAME_PAYMENT_SERVICE_TRANSACTION_ID = "payment_service_transaction_id";
  @SerializedName(SERIALIZED_NAME_PAYMENT_SERVICE_TRANSACTION_ID)
  private String paymentServiceTransactionId;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private BigDecimal amount;

  public static final String SERIALIZED_NAME_CAPTURED_AMOUNT = "captured_amount";
  @SerializedName(SERIALIZED_NAME_CAPTURED_AMOUNT)
  private BigDecimal capturedAmount;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_PREVIOUS_STATUS = "previous_status";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_STATUS)
  private String previousStatus;


  public PaymentConnectorResponseTransactionSyncContext paymentServiceId(UUID paymentServiceId) {
    
    this.paymentServiceId = paymentServiceId;
    return this;
  }

   /**
   * The unique ID of the payment service used.
   * @return paymentServiceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique ID of the payment service used.")

  public UUID getPaymentServiceId() {
    return paymentServiceId;
  }


  public void setPaymentServiceId(UUID paymentServiceId) {
    this.paymentServiceId = paymentServiceId;
  }


  public PaymentConnectorResponseTransactionSyncContext paymentServiceDisplayName(String paymentServiceDisplayName) {
    
    this.paymentServiceDisplayName = paymentServiceDisplayName;
    return this;
  }

   /**
   * The display name of the payment service used.
   * @return paymentServiceDisplayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The display name of the payment service used.")

  public String getPaymentServiceDisplayName() {
    return paymentServiceDisplayName;
  }


  public void setPaymentServiceDisplayName(String paymentServiceDisplayName) {
    this.paymentServiceDisplayName = paymentServiceDisplayName;
  }


  public PaymentConnectorResponseTransactionSyncContext paymentServiceDefinitionId(String paymentServiceDefinitionId) {
    
    this.paymentServiceDefinitionId = paymentServiceDefinitionId;
    return this;
  }

   /**
   * The payment service definition used.
   * @return paymentServiceDefinitionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The payment service definition used.")

  public String getPaymentServiceDefinitionId() {
    return paymentServiceDefinitionId;
  }


  public void setPaymentServiceDefinitionId(String paymentServiceDefinitionId) {
    this.paymentServiceDefinitionId = paymentServiceDefinitionId;
  }


  public PaymentConnectorResponseTransactionSyncContext paymentServiceTransactionId(String paymentServiceTransactionId) {
    
    this.paymentServiceTransactionId = paymentServiceTransactionId;
    return this;
  }

   /**
   * The external ID of the transaction as set by the payment service.
   * @return paymentServiceTransactionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "transaction-1234", value = "The external ID of the transaction as set by the payment service.")

  public String getPaymentServiceTransactionId() {
    return paymentServiceTransactionId;
  }


  public void setPaymentServiceTransactionId(String paymentServiceTransactionId) {
    this.paymentServiceTransactionId = paymentServiceTransactionId;
  }


  public PaymentConnectorResponseTransactionSyncContext amount(BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * The transaction amount.
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "123", value = "The transaction amount.")

  public BigDecimal getAmount() {
    return amount;
  }


  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public PaymentConnectorResponseTransactionSyncContext capturedAmount(BigDecimal capturedAmount) {
    
    this.capturedAmount = capturedAmount;
    return this;
  }

   /**
   * The amount captured for the transaction.
   * @return capturedAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "123", value = "The amount captured for the transaction.")

  public BigDecimal getCapturedAmount() {
    return capturedAmount;
  }


  public void setCapturedAmount(BigDecimal capturedAmount) {
    this.capturedAmount = capturedAmount;
  }


  public PaymentConnectorResponseTransactionSyncContext currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * The currency for the transaction.
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "EUR", value = "The currency for the transaction.")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public PaymentConnectorResponseTransactionSyncContext status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * The latest status code for the transaction.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "capture_succeeded", value = "The latest status code for the transaction.")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public PaymentConnectorResponseTransactionSyncContext previousStatus(String previousStatus) {
    
    this.previousStatus = previousStatus;
    return this;
  }

   /**
   * The previous status code for the transaction.
   * @return previousStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "capture_succeeded", value = "The previous status code for the transaction.")

  public String getPreviousStatus() {
    return previousStatus;
  }


  public void setPreviousStatus(String previousStatus) {
    this.previousStatus = previousStatus;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentConnectorResponseTransactionSyncContext paymentConnectorResponseTransactionSyncContext = (PaymentConnectorResponseTransactionSyncContext) o;
    return Objects.equals(this.paymentServiceId, paymentConnectorResponseTransactionSyncContext.paymentServiceId) &&
        Objects.equals(this.paymentServiceDisplayName, paymentConnectorResponseTransactionSyncContext.paymentServiceDisplayName) &&
        Objects.equals(this.paymentServiceDefinitionId, paymentConnectorResponseTransactionSyncContext.paymentServiceDefinitionId) &&
        Objects.equals(this.paymentServiceTransactionId, paymentConnectorResponseTransactionSyncContext.paymentServiceTransactionId) &&
        Objects.equals(this.amount, paymentConnectorResponseTransactionSyncContext.amount) &&
        Objects.equals(this.capturedAmount, paymentConnectorResponseTransactionSyncContext.capturedAmount) &&
        Objects.equals(this.currency, paymentConnectorResponseTransactionSyncContext.currency) &&
        Objects.equals(this.status, paymentConnectorResponseTransactionSyncContext.status) &&
        Objects.equals(this.previousStatus, paymentConnectorResponseTransactionSyncContext.previousStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentServiceId, paymentServiceDisplayName, paymentServiceDefinitionId, paymentServiceTransactionId, amount, capturedAmount, currency, status, previousStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentConnectorResponseTransactionSyncContext {\n");
    sb.append("    paymentServiceId: ").append(toIndentedString(paymentServiceId)).append("\n");
    sb.append("    paymentServiceDisplayName: ").append(toIndentedString(paymentServiceDisplayName)).append("\n");
    sb.append("    paymentServiceDefinitionId: ").append(toIndentedString(paymentServiceDefinitionId)).append("\n");
    sb.append("    paymentServiceTransactionId: ").append(toIndentedString(paymentServiceTransactionId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    capturedAmount: ").append(toIndentedString(capturedAmount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    previousStatus: ").append(toIndentedString(previousStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

