/*
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gr4vy.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * A connection that can be configured.
 */
@ApiModel(description = "A connection that can be configured.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-08T13:56:38.178267Z[Etc/UTC]")
public class ConnectionDefinition {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type = "connection-definition";

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_COUNT = "count";
  @SerializedName(SERIALIZED_NAME_COUNT)
  private BigDecimal count;

  /**
   * Gets or Sets group
   */
  @JsonAdapter(GroupEnum.Adapter.class)
  public enum GroupEnum {
    ANTI_FRAUD_SERVICE("anti-fraud-service"),
    
    PAYMENT_SERVICE("payment-service"),
    
    DIGITAL_WALLET("digital-wallet");

    private String value;

    GroupEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GroupEnum fromValue(String value) {
      for (GroupEnum b : GroupEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<GroupEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GroupEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GroupEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return GroupEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_GROUP = "group";
  @SerializedName(SERIALIZED_NAME_GROUP)
  private GroupEnum group;

  /**
   * Gets or Sets category
   */
  @JsonAdapter(CategoryEnum.Adapter.class)
  public enum CategoryEnum {
    ANTI_FRAUD("anti-fraud"),
    
    BANK("bank"),
    
    BNPL("bnpl"),
    
    CARD("card"),
    
    CASH("cash"),
    
    WALLET("wallet");

    private String value;

    CategoryEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CategoryEnum fromValue(String value) {
      for (CategoryEnum b : CategoryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CategoryEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CategoryEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CategoryEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CategoryEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private CategoryEnum category;

  public static final String SERIALIZED_NAME_ICON_URL = "icon_url";
  @SerializedName(SERIALIZED_NAME_ICON_URL)
  private String iconUrl;

  public static final String SERIALIZED_NAME_PROVIDER = "provider";
  @SerializedName(SERIALIZED_NAME_PROVIDER)
  private String provider;


  public ConnectionDefinition id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the connection.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "stripe-card", value = "The ID of the connection.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ConnectionDefinition type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * &#x60;connection-definition&#x60;.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "connection-definition", value = "`connection-definition`.")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public ConnectionDefinition name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of this connection.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Stripe", value = "The name of this connection.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ConnectionDefinition count(BigDecimal count) {
    
    this.count = count;
    return this;
  }

   /**
   * The number of configured connections.
   * @return count
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The number of configured connections.")

  public BigDecimal getCount() {
    return count;
  }


  public void setCount(BigDecimal count) {
    this.count = count;
  }


  public ConnectionDefinition group(GroupEnum group) {
    
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "payment-service", value = "")

  public GroupEnum getGroup() {
    return group;
  }


  public void setGroup(GroupEnum group) {
    this.group = group;
  }


  public ConnectionDefinition category(CategoryEnum category) {
    
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "card", value = "")

  public CategoryEnum getCategory() {
    return category;
  }


  public void setCategory(CategoryEnum category) {
    this.category = category;
  }


  public ConnectionDefinition iconUrl(String iconUrl) {
    
    this.iconUrl = iconUrl;
    return this;
  }

   /**
   * An icon to display for the connection.
   * @return iconUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://cdn.gr4vy.app/stripe.svg", value = "An icon to display for the connection.")

  public String getIconUrl() {
    return iconUrl;
  }


  public void setIconUrl(String iconUrl) {
    this.iconUrl = iconUrl;
  }


  public ConnectionDefinition provider(String provider) {
    
    this.provider = provider;
    return this;
  }

   /**
   * The provider for this connection.
   * @return provider
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Stripe", value = "The provider for this connection.")

  public String getProvider() {
    return provider;
  }


  public void setProvider(String provider) {
    this.provider = provider;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectionDefinition connectionDefinition = (ConnectionDefinition) o;
    return Objects.equals(this.id, connectionDefinition.id) &&
        Objects.equals(this.type, connectionDefinition.type) &&
        Objects.equals(this.name, connectionDefinition.name) &&
        Objects.equals(this.count, connectionDefinition.count) &&
        Objects.equals(this.group, connectionDefinition.group) &&
        Objects.equals(this.category, connectionDefinition.category) &&
        Objects.equals(this.iconUrl, connectionDefinition.iconUrl) &&
        Objects.equals(this.provider, connectionDefinition.provider);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, name, count, group, category, iconUrl, provider);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectionDefinition {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    iconUrl: ").append(toIndentedString(iconUrl)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

