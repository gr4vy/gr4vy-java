/*
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gr4vy.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;


/**
 * Each of the separate trip segment, contains detailed itinerary information.
 */
@ApiModel(description = "Each of the separate trip segment, contains detailed itinerary information.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AirlineLeg {
  public static final String SERIALIZED_NAME_CARRIER_CODE = "carrier_code";
  @SerializedName(SERIALIZED_NAME_CARRIER_CODE)
  private String carrierCode;

  public static final String SERIALIZED_NAME_FLIGHT_NUMBER = "flight_number";
  @SerializedName(SERIALIZED_NAME_FLIGHT_NUMBER)
  private String flightNumber;

  public static final String SERIALIZED_NAME_DEPARTURE_AT = "departure_at";
  @SerializedName(SERIALIZED_NAME_DEPARTURE_AT)
  private String departureAt;

  public static final String SERIALIZED_NAME_DEPARTURE_COUNTRY = "departure_country";
  @SerializedName(SERIALIZED_NAME_DEPARTURE_COUNTRY)
  private String departureCountry;

  public static final String SERIALIZED_NAME_DEPARTURE_CITY = "departure_city";
  @SerializedName(SERIALIZED_NAME_DEPARTURE_CITY)
  private String departureCity;

  public static final String SERIALIZED_NAME_DEPARTURE_AIRPORT = "departure_airport";
  @SerializedName(SERIALIZED_NAME_DEPARTURE_AIRPORT)
  private String departureAirport;

  public static final String SERIALIZED_NAME_ARRIVAL_AT = "arrival_at";
  @SerializedName(SERIALIZED_NAME_ARRIVAL_AT)
  private String arrivalAt;

  public static final String SERIALIZED_NAME_ARRIVAL_COUNTRY = "arrival_country";
  @SerializedName(SERIALIZED_NAME_ARRIVAL_COUNTRY)
  private String arrivalCountry;

  public static final String SERIALIZED_NAME_ARRIVAL_CITY = "arrival_city";
  @SerializedName(SERIALIZED_NAME_ARRIVAL_CITY)
  private String arrivalCity;

  public static final String SERIALIZED_NAME_ARRIVAL_AIRPORT = "arrival_airport";
  @SerializedName(SERIALIZED_NAME_ARRIVAL_AIRPORT)
  private String arrivalAirport;

  public static final String SERIALIZED_NAME_FARE_BASIS_CODE = "fare_basis_code";
  @SerializedName(SERIALIZED_NAME_FARE_BASIS_CODE)
  private String fareBasisCode;

  public static final String SERIALIZED_NAME_FLIGHT_CLASS = "flight_class";
  @SerializedName(SERIALIZED_NAME_FLIGHT_CLASS)
  private String flightClass;

  public static final String SERIALIZED_NAME_STOP_OVER = "stop_over";
  @SerializedName(SERIALIZED_NAME_STOP_OVER)
  private Boolean stopOver;

  /**
   * The route type of the flight.
   */
  @JsonAdapter(RouteTypeEnum.Adapter.class)
  public enum RouteTypeEnum {
    ROUND_TRIP("round_trip"),
    
    ONE_WAY("one_way");

    private String value;

    RouteTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RouteTypeEnum fromValue(String value) {
      for (RouteTypeEnum b : RouteTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RouteTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RouteTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RouteTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RouteTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ROUTE_TYPE = "route_type";
  @SerializedName(SERIALIZED_NAME_ROUTE_TYPE)
  private RouteTypeEnum routeType;

  public static final String SERIALIZED_NAME_COUPON_NUMBER = "coupon_number";
  @SerializedName(SERIALIZED_NAME_COUPON_NUMBER)
  private String couponNumber;

  public static final String SERIALIZED_NAME_FARE_AMOUNT = "fare_amount";
  @SerializedName(SERIALIZED_NAME_FARE_AMOUNT)
  private Integer fareAmount;

  public static final String SERIALIZED_NAME_FEE_AMOUNT = "fee_amount";
  @SerializedName(SERIALIZED_NAME_FEE_AMOUNT)
  private Integer feeAmount;

  public static final String SERIALIZED_NAME_TAX_AMOUNT = "tax_amount";
  @SerializedName(SERIALIZED_NAME_TAX_AMOUNT)
  private Integer taxAmount;

  public static final String SERIALIZED_NAME_DEPARTURE_TAX_AMOUNT = "departure_tax_amount";
  @SerializedName(SERIALIZED_NAME_DEPARTURE_TAX_AMOUNT)
  private Integer departureTaxAmount;


  public AirlineLeg carrierCode(String carrierCode) {
    
    this.carrierCode = carrierCode;
    return this;
  }

   /**
   * 2 character airline code as set by IATA.
   * @return carrierCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "LY", value = "2 character airline code as set by IATA.")

  public String getCarrierCode() {
    return carrierCode;
  }


  public void setCarrierCode(String carrierCode) {
    this.carrierCode = carrierCode;
  }


  public AirlineLeg flightNumber(String flightNumber) {
    
    this.flightNumber = flightNumber;
    return this;
  }

   /**
   * Unique identifier of the flight number.
   * @return flightNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "BA98", value = "Unique identifier of the flight number.")

  public String getFlightNumber() {
    return flightNumber;
  }


  public void setFlightNumber(String flightNumber) {
    this.flightNumber = flightNumber;
  }


  public AirlineLeg departureAt(String departureAt) {
    
    this.departureAt = departureAt;
    return this;
  }

   /**
   * The date and time of travel in local time at the departure airport.
   * @return departureAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2013-07-16T19:23Z", value = "The date and time of travel in local time at the departure airport.")

  public String getDepartureAt() {
    return departureAt;
  }


  public void setDepartureAt(String departureAt) {
    this.departureAt = departureAt;
  }


  public AirlineLeg departureCountry(String departureCountry) {
    
    this.departureCountry = departureCountry;
    return this;
  }

   /**
   * Departure country code in ISO 3166 format.
   * @return departureCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "UK", value = "Departure country code in ISO 3166 format.")

  public String getDepartureCountry() {
    return departureCountry;
  }


  public void setDepartureCountry(String departureCountry) {
    this.departureCountry = departureCountry;
  }


  public AirlineLeg departureCity(String departureCity) {
    
    this.departureCity = departureCity;
    return this;
  }

   /**
   * Departure city name.
   * @return departureCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "London", value = "Departure city name.")

  public String getDepartureCity() {
    return departureCity;
  }


  public void setDepartureCity(String departureCity) {
    this.departureCity = departureCity;
  }


  public AirlineLeg departureAirport(String departureAirport) {
    
    this.departureAirport = departureAirport;
    return this;
  }

   /**
   * Departure airport code of leg. 3-letter ISO code according to IATA official directory.
   * @return departureAirport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "LHR", value = "Departure airport code of leg. 3-letter ISO code according to IATA official directory.")

  public String getDepartureAirport() {
    return departureAirport;
  }


  public void setDepartureAirport(String departureAirport) {
    this.departureAirport = departureAirport;
  }


  public AirlineLeg arrivalAt(String arrivalAt) {
    
    this.arrivalAt = arrivalAt;
    return this;
  }

   /**
   * The date and time of travel in local time at the arrival airport.
   * @return arrivalAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2013-07-16T19:23Z", value = "The date and time of travel in local time at the arrival airport.")

  public String getArrivalAt() {
    return arrivalAt;
  }


  public void setArrivalAt(String arrivalAt) {
    this.arrivalAt = arrivalAt;
  }


  public AirlineLeg arrivalCountry(String arrivalCountry) {
    
    this.arrivalCountry = arrivalCountry;
    return this;
  }

   /**
   * Arrival country code in ISO 3166 format.
   * @return arrivalCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "UK", value = "Arrival country code in ISO 3166 format.")

  public String getArrivalCountry() {
    return arrivalCountry;
  }


  public void setArrivalCountry(String arrivalCountry) {
    this.arrivalCountry = arrivalCountry;
  }


  public AirlineLeg arrivalCity(String arrivalCity) {
    
    this.arrivalCity = arrivalCity;
    return this;
  }

   /**
   * Arrival city name.
   * @return arrivalCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "London", value = "Arrival city name.")

  public String getArrivalCity() {
    return arrivalCity;
  }


  public void setArrivalCity(String arrivalCity) {
    this.arrivalCity = arrivalCity;
  }


  public AirlineLeg arrivalAirport(String arrivalAirport) {
    
    this.arrivalAirport = arrivalAirport;
    return this;
  }

   /**
   * Arrival airport code of leg. 3-letter ISO code according to IATA official directory.
   * @return arrivalAirport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "LHR", value = "Arrival airport code of leg. 3-letter ISO code according to IATA official directory.")

  public String getArrivalAirport() {
    return arrivalAirport;
  }


  public void setArrivalAirport(String arrivalAirport) {
    this.arrivalAirport = arrivalAirport;
  }


  public AirlineLeg fareBasisCode(String fareBasisCode) {
    
    this.fareBasisCode = fareBasisCode;
    return this;
  }

   /**
   * The alphanumeric code for the \&quot;booking class\&quot; of a ticket.
   * @return fareBasisCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "WH7LNR", value = "The alphanumeric code for the \"booking class\" of a ticket.")

  public String getFareBasisCode() {
    return fareBasisCode;
  }


  public void setFareBasisCode(String fareBasisCode) {
    this.fareBasisCode = fareBasisCode;
  }


  public AirlineLeg flightClass(String flightClass) {
    
    this.flightClass = flightClass;
    return this;
  }

   /**
   * Indicates service class (first class, business class, etc.).
   * @return flightClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "E", value = "Indicates service class (first class, business class, etc.).")

  public String getFlightClass() {
    return flightClass;
  }


  public void setFlightClass(String flightClass) {
    this.flightClass = flightClass;
  }


  public AirlineLeg stopOver(Boolean stopOver) {
    
    this.stopOver = stopOver;
    return this;
  }

   /**
   * Indicates whether a stopover is allowed on this ticket.
   * @return stopOver
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Indicates whether a stopover is allowed on this ticket.")

  public Boolean getStopOver() {
    return stopOver;
  }


  public void setStopOver(Boolean stopOver) {
    this.stopOver = stopOver;
  }


  public AirlineLeg routeType(RouteTypeEnum routeType) {
    
    this.routeType = routeType;
    return this;
  }

   /**
   * The route type of the flight.
   * @return routeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "round_trip", value = "The route type of the flight.")

  public RouteTypeEnum getRouteType() {
    return routeType;
  }


  public void setRouteType(RouteTypeEnum routeType) {
    this.routeType = routeType;
  }


  public AirlineLeg couponNumber(String couponNumber) {
    
    this.couponNumber = couponNumber;
    return this;
  }

   /**
   * Coupon number associated with the leg.
   * @return couponNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "15885566", value = "Coupon number associated with the leg.")

  public String getCouponNumber() {
    return couponNumber;
  }


  public void setCouponNumber(String couponNumber) {
    this.couponNumber = couponNumber;
  }


  public AirlineLeg fareAmount(Integer fareAmount) {
    
    this.fareAmount = fareAmount;
    return this;
  }

   /**
   * Amount of the ticket, for current leg of the trip, excluding taxes and fees.
   * minimum: 0
   * maximum: 99999999
   * @return fareAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100", value = "Amount of the ticket, for current leg of the trip, excluding taxes and fees.")

  public Integer getFareAmount() {
    return fareAmount;
  }


  public void setFareAmount(Integer fareAmount) {
    this.fareAmount = fareAmount;
  }


  public AirlineLeg feeAmount(Integer feeAmount) {
    
    this.feeAmount = feeAmount;
    return this;
  }

   /**
   * Fee amount for current leg of the trip.
   * minimum: 0
   * maximum: 99999999
   * @return feeAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100", value = "Fee amount for current leg of the trip.")

  public Integer getFeeAmount() {
    return feeAmount;
  }


  public void setFeeAmount(Integer feeAmount) {
    this.feeAmount = feeAmount;
  }


  public AirlineLeg taxAmount(Integer taxAmount) {
    
    this.taxAmount = taxAmount;
    return this;
  }

   /**
   * Amount of the taxes for current leg of the trip.
   * minimum: 0
   * maximum: 99999999
   * @return taxAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100", value = "Amount of the taxes for current leg of the trip.")

  public Integer getTaxAmount() {
    return taxAmount;
  }


  public void setTaxAmount(Integer taxAmount) {
    this.taxAmount = taxAmount;
  }


  public AirlineLeg departureTaxAmount(Integer departureTaxAmount) {
    
    this.departureTaxAmount = departureTaxAmount;
    return this;
  }

   /**
   * Departure tax amount charged by a country when a person is leaving the country.
   * minimum: 0
   * maximum: 99999999
   * @return departureTaxAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100", value = "Departure tax amount charged by a country when a person is leaving the country.")

  public Integer getDepartureTaxAmount() {
    return departureTaxAmount;
  }


  public void setDepartureTaxAmount(Integer departureTaxAmount) {
    this.departureTaxAmount = departureTaxAmount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AirlineLeg airlineLeg = (AirlineLeg) o;
    return Objects.equals(this.carrierCode, airlineLeg.carrierCode) &&
        Objects.equals(this.flightNumber, airlineLeg.flightNumber) &&
        Objects.equals(this.departureAt, airlineLeg.departureAt) &&
        Objects.equals(this.departureCountry, airlineLeg.departureCountry) &&
        Objects.equals(this.departureCity, airlineLeg.departureCity) &&
        Objects.equals(this.departureAirport, airlineLeg.departureAirport) &&
        Objects.equals(this.arrivalAt, airlineLeg.arrivalAt) &&
        Objects.equals(this.arrivalCountry, airlineLeg.arrivalCountry) &&
        Objects.equals(this.arrivalCity, airlineLeg.arrivalCity) &&
        Objects.equals(this.arrivalAirport, airlineLeg.arrivalAirport) &&
        Objects.equals(this.fareBasisCode, airlineLeg.fareBasisCode) &&
        Objects.equals(this.flightClass, airlineLeg.flightClass) &&
        Objects.equals(this.stopOver, airlineLeg.stopOver) &&
        Objects.equals(this.routeType, airlineLeg.routeType) &&
        Objects.equals(this.couponNumber, airlineLeg.couponNumber) &&
        Objects.equals(this.fareAmount, airlineLeg.fareAmount) &&
        Objects.equals(this.feeAmount, airlineLeg.feeAmount) &&
        Objects.equals(this.taxAmount, airlineLeg.taxAmount) &&
        Objects.equals(this.departureTaxAmount, airlineLeg.departureTaxAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(carrierCode, flightNumber, departureAt, departureCountry, departureCity, departureAirport, arrivalAt, arrivalCountry, arrivalCity, arrivalAirport, fareBasisCode, flightClass, stopOver, routeType, couponNumber, fareAmount, feeAmount, taxAmount, departureTaxAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AirlineLeg {\n");
    sb.append("    carrierCode: ").append(toIndentedString(carrierCode)).append("\n");
    sb.append("    flightNumber: ").append(toIndentedString(flightNumber)).append("\n");
    sb.append("    departureAt: ").append(toIndentedString(departureAt)).append("\n");
    sb.append("    departureCountry: ").append(toIndentedString(departureCountry)).append("\n");
    sb.append("    departureCity: ").append(toIndentedString(departureCity)).append("\n");
    sb.append("    departureAirport: ").append(toIndentedString(departureAirport)).append("\n");
    sb.append("    arrivalAt: ").append(toIndentedString(arrivalAt)).append("\n");
    sb.append("    arrivalCountry: ").append(toIndentedString(arrivalCountry)).append("\n");
    sb.append("    arrivalCity: ").append(toIndentedString(arrivalCity)).append("\n");
    sb.append("    arrivalAirport: ").append(toIndentedString(arrivalAirport)).append("\n");
    sb.append("    fareBasisCode: ").append(toIndentedString(fareBasisCode)).append("\n");
    sb.append("    flightClass: ").append(toIndentedString(flightClass)).append("\n");
    sb.append("    stopOver: ").append(toIndentedString(stopOver)).append("\n");
    sb.append("    routeType: ").append(toIndentedString(routeType)).append("\n");
    sb.append("    couponNumber: ").append(toIndentedString(couponNumber)).append("\n");
    sb.append("    fareAmount: ").append(toIndentedString(fareAmount)).append("\n");
    sb.append("    feeAmount: ").append(toIndentedString(feeAmount)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("    departureTaxAmount: ").append(toIndentedString(departureTaxAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

