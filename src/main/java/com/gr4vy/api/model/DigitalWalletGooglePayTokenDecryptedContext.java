/*
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gr4vy.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Google Pay decrypted token context.
 */
@ApiModel(description = "Google Pay decrypted token context.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DigitalWalletGooglePayTokenDecryptedContext {
  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  /**
   * The type of payment instrument.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    DPAN("dpan"),
    
    FPAN("fpan"),
    
    NULL("null");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_EXPIRATION_DATE = "expiration_date";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE)
  private String expirationDate;

  public static final String SERIALIZED_NAME_HAS_CRYPTOGRAM = "has_cryptogram";
  @SerializedName(SERIALIZED_NAME_HAS_CRYPTOGRAM)
  private Boolean hasCryptogram;

  public static final String SERIALIZED_NAME_ECI = "eci";
  @SerializedName(SERIALIZED_NAME_ECI)
  private String eci;

  public static final String SERIALIZED_NAME_MESSAGE_EXPIRATION = "message_expiration";
  @SerializedName(SERIALIZED_NAME_MESSAGE_EXPIRATION)
  private String messageExpiration;

  public static final String SERIALIZED_NAME_MESSAGE_ID = "message_id";
  @SerializedName(SERIALIZED_NAME_MESSAGE_ID)
  private String messageId;

  public static final String SERIALIZED_NAME_PAYMENT_METHOD = "payment_method";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD)
  private String paymentMethod;


  public DigitalWalletGooglePayTokenDecryptedContext version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * Version information about the payment token.
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ECv2", value = "Version information about the payment token.")

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  public DigitalWalletGooglePayTokenDecryptedContext type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of payment instrument.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "dpan", value = "The type of payment instrument.")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public DigitalWalletGooglePayTokenDecryptedContext expirationDate(String expirationDate) {
    
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Expiration of the decrypted data.
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Expiration of the decrypted data.")

  public String getExpirationDate() {
    return expirationDate;
  }


  public void setExpirationDate(String expirationDate) {
    this.expirationDate = expirationDate;
  }


  public DigitalWalletGooglePayTokenDecryptedContext hasCryptogram(Boolean hasCryptogram) {
    
    this.hasCryptogram = hasCryptogram;
    return this;
  }

   /**
   * Online payment cryptogram, as defined by 3D Secure.
   * @return hasCryptogram
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Online payment cryptogram, as defined by 3D Secure.")

  public Boolean getHasCryptogram() {
    return hasCryptogram;
  }


  public void setHasCryptogram(Boolean hasCryptogram) {
    this.hasCryptogram = hasCryptogram;
  }


  public DigitalWalletGooglePayTokenDecryptedContext eci(String eci) {
    
    this.eci = eci;
    return this;
  }

   /**
   * ECI indicator, as defined by 3D Secure.
   * @return eci
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ECI indicator, as defined by 3D Secure.")

  public String getEci() {
    return eci;
  }


  public void setEci(String eci) {
    this.eci = eci;
  }


  public DigitalWalletGooglePayTokenDecryptedContext messageExpiration(String messageExpiration) {
    
    this.messageExpiration = messageExpiration;
    return this;
  }

   /**
   * Date and time at which the message expires as UTC milliseconds since epoch.
   * @return messageExpiration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date and time at which the message expires as UTC milliseconds since epoch.")

  public String getMessageExpiration() {
    return messageExpiration;
  }


  public void setMessageExpiration(String messageExpiration) {
    this.messageExpiration = messageExpiration;
  }


  public DigitalWalletGooglePayTokenDecryptedContext messageId(String messageId) {
    
    this.messageId = messageId;
    return this;
  }

   /**
   * A unique ID that identifies the message in case it needs to be revoked or located at a later time.
   * @return messageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique ID that identifies the message in case it needs to be revoked or located at a later time.")

  public String getMessageId() {
    return messageId;
  }


  public void setMessageId(String messageId) {
    this.messageId = messageId;
  }


  public DigitalWalletGooglePayTokenDecryptedContext paymentMethod(String paymentMethod) {
    
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * The type of the payment credential.
   * @return paymentMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CARD", value = "The type of the payment credential.")

  public String getPaymentMethod() {
    return paymentMethod;
  }


  public void setPaymentMethod(String paymentMethod) {
    this.paymentMethod = paymentMethod;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DigitalWalletGooglePayTokenDecryptedContext digitalWalletGooglePayTokenDecryptedContext = (DigitalWalletGooglePayTokenDecryptedContext) o;
    return Objects.equals(this.version, digitalWalletGooglePayTokenDecryptedContext.version) &&
        Objects.equals(this.type, digitalWalletGooglePayTokenDecryptedContext.type) &&
        Objects.equals(this.expirationDate, digitalWalletGooglePayTokenDecryptedContext.expirationDate) &&
        Objects.equals(this.hasCryptogram, digitalWalletGooglePayTokenDecryptedContext.hasCryptogram) &&
        Objects.equals(this.eci, digitalWalletGooglePayTokenDecryptedContext.eci) &&
        Objects.equals(this.messageExpiration, digitalWalletGooglePayTokenDecryptedContext.messageExpiration) &&
        Objects.equals(this.messageId, digitalWalletGooglePayTokenDecryptedContext.messageId) &&
        Objects.equals(this.paymentMethod, digitalWalletGooglePayTokenDecryptedContext.paymentMethod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(version, type, expirationDate, hasCryptogram, eci, messageExpiration, messageId, paymentMethod);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DigitalWalletGooglePayTokenDecryptedContext {\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    hasCryptogram: ").append(toIndentedString(hasCryptogram)).append("\n");
    sb.append("    eci: ").append(toIndentedString(eci)).append("\n");
    sb.append("    messageExpiration: ").append(toIndentedString(messageExpiration)).append("\n");
    sb.append("    messageId: ").append(toIndentedString(messageId)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

