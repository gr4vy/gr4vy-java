/*
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gr4vy.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * A request to create a merchant account.
 */
@ApiModel(description = "A request to create a merchant account.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-19T17:27:23.170866Z[Etc/UTC]")
public class MerchantAccountCreate {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "display_name";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_OUTBOUND_WEBHOOK_URL = "outbound_webhook_url";
  @SerializedName(SERIALIZED_NAME_OUTBOUND_WEBHOOK_URL)
  private String outboundWebhookUrl;

  public static final String SERIALIZED_NAME_OUTBOUND_WEBHOOK_USERNAME = "outbound_webhook_username";
  @SerializedName(SERIALIZED_NAME_OUTBOUND_WEBHOOK_USERNAME)
  private String outboundWebhookUsername;

  public static final String SERIALIZED_NAME_OUTBOUND_WEBHOOK_PASSWORD = "outbound_webhook_password";
  @SerializedName(SERIALIZED_NAME_OUTBOUND_WEBHOOK_PASSWORD)
  private String outboundWebhookPassword;


  public MerchantAccountCreate id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The unique ID for the merchant account.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "plantly_uk", value = "The unique ID for the merchant account.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public MerchantAccountCreate displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * The human-readable name of the merchant account.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Plantly UK", value = "The human-readable name of the merchant account.")

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public MerchantAccountCreate outboundWebhookUrl(String outboundWebhookUrl) {
    
    this.outboundWebhookUrl = outboundWebhookUrl;
    return this;
  }

   /**
   * The optional URL where webhooks will be received.
   * @return outboundWebhookUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://www.example.com/webhook", value = "The optional URL where webhooks will be received.")

  public String getOutboundWebhookUrl() {
    return outboundWebhookUrl;
  }


  public void setOutboundWebhookUrl(String outboundWebhookUrl) {
    this.outboundWebhookUrl = outboundWebhookUrl;
  }


  public MerchantAccountCreate outboundWebhookUsername(String outboundWebhookUsername) {
    
    this.outboundWebhookUsername = outboundWebhookUsername;
    return this;
  }

   /**
   * The optional username to use when &#x60;outbound_webhook_url&#x60; is configured and requires basic authentication.
   * @return outboundWebhookUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "gr4vy", value = "The optional username to use when `outbound_webhook_url` is configured and requires basic authentication.")

  public String getOutboundWebhookUsername() {
    return outboundWebhookUsername;
  }


  public void setOutboundWebhookUsername(String outboundWebhookUsername) {
    this.outboundWebhookUsername = outboundWebhookUsername;
  }


  public MerchantAccountCreate outboundWebhookPassword(String outboundWebhookPassword) {
    
    this.outboundWebhookPassword = outboundWebhookPassword;
    return this;
  }

   /**
   * The optional password to use when &#x60;outbound_webhook_url&#x60; is configured and requires basic authentication.
   * @return outboundWebhookPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "super-secret-password", value = "The optional password to use when `outbound_webhook_url` is configured and requires basic authentication.")

  public String getOutboundWebhookPassword() {
    return outboundWebhookPassword;
  }


  public void setOutboundWebhookPassword(String outboundWebhookPassword) {
    this.outboundWebhookPassword = outboundWebhookPassword;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MerchantAccountCreate merchantAccountCreate = (MerchantAccountCreate) o;
    return Objects.equals(this.id, merchantAccountCreate.id) &&
        Objects.equals(this.displayName, merchantAccountCreate.displayName) &&
        Objects.equals(this.outboundWebhookUrl, merchantAccountCreate.outboundWebhookUrl) &&
        Objects.equals(this.outboundWebhookUsername, merchantAccountCreate.outboundWebhookUsername) &&
        Objects.equals(this.outboundWebhookPassword, merchantAccountCreate.outboundWebhookPassword);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, displayName, outboundWebhookUrl, outboundWebhookUsername, outboundWebhookPassword);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MerchantAccountCreate {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    outboundWebhookUrl: ").append(toIndentedString(outboundWebhookUrl)).append("\n");
    sb.append("    outboundWebhookUsername: ").append(toIndentedString(outboundWebhookUsername)).append("\n");
    sb.append("    outboundWebhookPassword: ").append(toIndentedString(outboundWebhookPassword)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

