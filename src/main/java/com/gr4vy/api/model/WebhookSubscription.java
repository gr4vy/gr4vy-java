/*
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gr4vy.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.gr4vy.api.model.WebhookSubscriptionAuthentication;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * WebhookSubscription
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class WebhookSubscription {
  /**
   * &#x60;webhook-subscription&#x60;.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    WEBHOOK_SUBSCRIPTION("webhook-subscription");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_MERCHANT_ACCOUNT_ID = "merchant_account_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ACCOUNT_ID)
  private String merchantAccountId;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_AUTHENTICATION = "authentication";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION)
  private WebhookSubscriptionAuthentication authentication;

  public static final String SERIALIZED_NAME_SECRET = "secret";
  @SerializedName(SERIALIZED_NAME_SECRET)
  private String secret;

  public static final String SERIALIZED_NAME_ROTATING = "rotating";
  @SerializedName(SERIALIZED_NAME_ROTATING)
  private Boolean rotating;


  public WebhookSubscription type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * &#x60;webhook-subscription&#x60;.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "webhook-subscription", value = "`webhook-subscription`.")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public WebhookSubscription id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The unique Gr4vy ID for this webhook subscription.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8fd77b13-a5e3-43de-bd54-26a8a714ac18", value = "The unique Gr4vy ID for this webhook subscription.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public WebhookSubscription merchantAccountId(String merchantAccountId) {
    
    this.merchantAccountId = merchantAccountId;
    return this;
  }

   /**
   * The unique ID for a merchant account.
   * @return merchantAccountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "default", value = "The unique ID for a merchant account.")

  public String getMerchantAccountId() {
    return merchantAccountId;
  }


  public void setMerchantAccountId(String merchantAccountId) {
    this.merchantAccountId = merchantAccountId;
  }


  public WebhookSubscription active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Defines if this subscription is currently active or not. When deactivated, webhook events are not sent to the endpoint configured for this subscription.
   * @return active
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Defines if this subscription is currently active or not. When deactivated, webhook events are not sent to the endpoint configured for this subscription.")

  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    this.active = active;
  }


  public WebhookSubscription url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * The URL of the endpoint to deliver webhook events to.
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://example.com/webhooks", value = "The URL of the endpoint to deliver webhook events to.")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public WebhookSubscription authentication(WebhookSubscriptionAuthentication authentication) {
    
    this.authentication = authentication;
    return this;
  }

   /**
   * Get authentication
   * @return authentication
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WebhookSubscriptionAuthentication getAuthentication() {
    return authentication;
  }


  public void setAuthentication(WebhookSubscriptionAuthentication authentication) {
    this.authentication = authentication;
  }


  public WebhookSubscription secret(String secret) {
    
    this.secret = secret;
    return this;
  }

   /**
   * The active secret value.
   * @return secret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "234567890abcdef1234567890abcdef", value = "The active secret value.")

  public String getSecret() {
    return secret;
  }


  public void setSecret(String secret) {
    this.secret = secret;
  }


  public WebhookSubscription rotating(Boolean rotating) {
    
    this.rotating = rotating;
    return this;
  }

   /**
   * Flag to determine whether the subscription has a secret rotation in progress or not.
   * @return rotating
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Flag to determine whether the subscription has a secret rotation in progress or not.")

  public Boolean getRotating() {
    return rotating;
  }


  public void setRotating(Boolean rotating) {
    this.rotating = rotating;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookSubscription webhookSubscription = (WebhookSubscription) o;
    return Objects.equals(this.type, webhookSubscription.type) &&
        Objects.equals(this.id, webhookSubscription.id) &&
        Objects.equals(this.merchantAccountId, webhookSubscription.merchantAccountId) &&
        Objects.equals(this.active, webhookSubscription.active) &&
        Objects.equals(this.url, webhookSubscription.url) &&
        Objects.equals(this.authentication, webhookSubscription.authentication) &&
        Objects.equals(this.secret, webhookSubscription.secret) &&
        Objects.equals(this.rotating, webhookSubscription.rotating);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, id, merchantAccountId, active, url, authentication, secret, rotating);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookSubscription {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    merchantAccountId: ").append(toIndentedString(merchantAccountId)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    authentication: ").append(toIndentedString(authentication)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    rotating: ").append(toIndentedString(rotating)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

