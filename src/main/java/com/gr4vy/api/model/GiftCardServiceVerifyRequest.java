/*
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gr4vy.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.gr4vy.api.model.GiftCardServiceVerifyRequestFields;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * Request body for verifying credentials against a gift card service.
 */
@ApiModel(description = "Request body for verifying credentials against a gift card service.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GiftCardServiceVerifyRequest {
  public static final String SERIALIZED_NAME_GIFT_CARD_SERVICE_DEFINITION_ID = "gift_card_service_definition_id";
  @SerializedName(SERIALIZED_NAME_GIFT_CARD_SERVICE_DEFINITION_ID)
  private String giftCardServiceDefinitionId;

  public static final String SERIALIZED_NAME_GIFT_CARD_SERVICE_ID = "gift_card_service_id";
  @SerializedName(SERIALIZED_NAME_GIFT_CARD_SERVICE_ID)
  private UUID giftCardServiceId;

  public static final String SERIALIZED_NAME_FIELDS = "fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  private List<GiftCardServiceVerifyRequestFields> fields = new ArrayList<GiftCardServiceVerifyRequestFields>();


  public GiftCardServiceVerifyRequest giftCardServiceDefinitionId(String giftCardServiceDefinitionId) {
    
    this.giftCardServiceDefinitionId = giftCardServiceDefinitionId;
    return this;
  }

   /**
   * The ID of the gift card service to use.
   * @return giftCardServiceDefinitionId
  **/
  @ApiModelProperty(example = "qwikcilver-gift-card", required = true, value = "The ID of the gift card service to use.")

  public String getGiftCardServiceDefinitionId() {
    return giftCardServiceDefinitionId;
  }


  public void setGiftCardServiceDefinitionId(String giftCardServiceDefinitionId) {
    this.giftCardServiceDefinitionId = giftCardServiceDefinitionId;
  }


  public GiftCardServiceVerifyRequest giftCardServiceId(UUID giftCardServiceId) {
    
    this.giftCardServiceId = giftCardServiceId;
    return this;
  }

   /**
   * The ID of the gift card service. Required if sending a partial set of credentials in the &#x60;fields&#x60; property. This will merge the provided fields with those already on the service.
   * @return giftCardServiceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "46973e9d-88a7-44a6-abfe-be4ff0134ff4", value = "The ID of the gift card service. Required if sending a partial set of credentials in the `fields` property. This will merge the provided fields with those already on the service.")

  public UUID getGiftCardServiceId() {
    return giftCardServiceId;
  }


  public void setGiftCardServiceId(UUID giftCardServiceId) {
    this.giftCardServiceId = giftCardServiceId;
  }


  public GiftCardServiceVerifyRequest fields(List<GiftCardServiceVerifyRequestFields> fields) {
    
    this.fields = fields;
    return this;
  }

  public GiftCardServiceVerifyRequest addFieldsItem(GiftCardServiceVerifyRequestFields fieldsItem) {
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * A list of fields where each field is a key-value pair that represents a defined field in the definition of the service. You are not required to send the full list of fields if the credentials for the service are already stored. For example, if your credentials for &#x60;qwikcilver-gift-card&#x60; are stored and you only provide a &#x60;secret_key&#x60; in the request, it will override the stored &#x60;secret_key&#x60; and verify the resulting set of credentials against the service.
   * @return fields
  **/
  @ApiModelProperty(required = true, value = "A list of fields where each field is a key-value pair that represents a defined field in the definition of the service. You are not required to send the full list of fields if the credentials for the service are already stored. For example, if your credentials for `qwikcilver-gift-card` are stored and you only provide a `secret_key` in the request, it will override the stored `secret_key` and verify the resulting set of credentials against the service.")

  public List<GiftCardServiceVerifyRequestFields> getFields() {
    return fields;
  }


  public void setFields(List<GiftCardServiceVerifyRequestFields> fields) {
    this.fields = fields;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GiftCardServiceVerifyRequest giftCardServiceVerifyRequest = (GiftCardServiceVerifyRequest) o;
    return Objects.equals(this.giftCardServiceDefinitionId, giftCardServiceVerifyRequest.giftCardServiceDefinitionId) &&
        Objects.equals(this.giftCardServiceId, giftCardServiceVerifyRequest.giftCardServiceId) &&
        Objects.equals(this.fields, giftCardServiceVerifyRequest.fields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(giftCardServiceDefinitionId, giftCardServiceId, fields);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GiftCardServiceVerifyRequest {\n");
    sb.append("    giftCardServiceDefinitionId: ").append(toIndentedString(giftCardServiceDefinitionId)).append("\n");
    sb.append("    giftCardServiceId: ").append(toIndentedString(giftCardServiceId)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

