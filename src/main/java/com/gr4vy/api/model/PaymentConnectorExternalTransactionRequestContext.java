/*
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gr4vy.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Additional context for the transaction.
 */
@ApiModel(description = "Additional context for the transaction.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PaymentConnectorExternalTransactionRequestContext {
  public static final String SERIALIZED_NAME_CONNECTOR_REQUEST_ID = "connector_request_id";
  @SerializedName(SERIALIZED_NAME_CONNECTOR_REQUEST_ID)
  private String connectorRequestId;

  public static final String SERIALIZED_NAME_REQUEST = "request";
  @SerializedName(SERIALIZED_NAME_REQUEST)
  private String request;

  public static final String SERIALIZED_NAME_RESPONSE = "response";
  @SerializedName(SERIALIZED_NAME_RESPONSE)
  private String response;

  public static final String SERIALIZED_NAME_PAYMENT_SERVICE_DEFINITION_ID = "payment_service_definition_id";
  @SerializedName(SERIALIZED_NAME_PAYMENT_SERVICE_DEFINITION_ID)
  private String paymentServiceDefinitionId;

  public static final String SERIALIZED_NAME_SUCCESS = "success";
  @SerializedName(SERIALIZED_NAME_SUCCESS)
  private Boolean success;

  public static final String SERIALIZED_NAME_PAYMENT_SERVICE_ID = "payment_service_id";
  @SerializedName(SERIALIZED_NAME_PAYMENT_SERVICE_ID)
  private String paymentServiceId;

  public static final String SERIALIZED_NAME_RESPONSE_STATUS_CODE = "response_status_code";
  @SerializedName(SERIALIZED_NAME_RESPONSE_STATUS_CODE)
  private String responseStatusCode;

  public static final String SERIALIZED_NAME_PAYMENT_SERVICE_DISPLAY_NAME = "payment_service_display_name";
  @SerializedName(SERIALIZED_NAME_PAYMENT_SERVICE_DISPLAY_NAME)
  private String paymentServiceDisplayName;

  public static final String SERIALIZED_NAME_METHOD = "method";
  @SerializedName(SERIALIZED_NAME_METHOD)
  private String method;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_REFUND_ID = "refund_id";
  @SerializedName(SERIALIZED_NAME_REFUND_ID)
  private String refundId;

  public static final String SERIALIZED_NAME_REFUND_XID = "refund_xid";
  @SerializedName(SERIALIZED_NAME_REFUND_XID)
  private String refundXid;


  public PaymentConnectorExternalTransactionRequestContext connectorRequestId(String connectorRequestId) {
    
    this.connectorRequestId = connectorRequestId;
    return this;
  }

   /**
   * The connector request id.
   * @return connectorRequestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "76f5ed52-8675-491f-b52d-731ca894ed80", value = "The connector request id.")

  public String getConnectorRequestId() {
    return connectorRequestId;
  }


  public void setConnectorRequestId(String connectorRequestId) {
    this.connectorRequestId = connectorRequestId;
  }


  public PaymentConnectorExternalTransactionRequestContext request(String request) {
    
    this.request = request;
    return this;
  }

   /**
   * The request.
   * @return request
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "", value = "The request.")

  public String getRequest() {
    return request;
  }


  public void setRequest(String request) {
    this.request = request;
  }


  public PaymentConnectorExternalTransactionRequestContext response(String response) {
    
    this.response = response;
    return this;
  }

   /**
   * The response.
   * @return response
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The response.")

  public String getResponse() {
    return response;
  }


  public void setResponse(String response) {
    this.response = response;
  }


  public PaymentConnectorExternalTransactionRequestContext paymentServiceDefinitionId(String paymentServiceDefinitionId) {
    
    this.paymentServiceDefinitionId = paymentServiceDefinitionId;
    return this;
  }

   /**
   * The payment service definition id.
   * @return paymentServiceDefinitionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The payment service definition id.")

  public String getPaymentServiceDefinitionId() {
    return paymentServiceDefinitionId;
  }


  public void setPaymentServiceDefinitionId(String paymentServiceDefinitionId) {
    this.paymentServiceDefinitionId = paymentServiceDefinitionId;
  }


  public PaymentConnectorExternalTransactionRequestContext success(Boolean success) {
    
    this.success = success;
    return this;
  }

   /**
   * Whether the transaction was successful.
   * @return success
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the transaction was successful.")

  public Boolean getSuccess() {
    return success;
  }


  public void setSuccess(Boolean success) {
    this.success = success;
  }


  public PaymentConnectorExternalTransactionRequestContext paymentServiceId(String paymentServiceId) {
    
    this.paymentServiceId = paymentServiceId;
    return this;
  }

   /**
   * The payment service id.
   * @return paymentServiceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The payment service id.")

  public String getPaymentServiceId() {
    return paymentServiceId;
  }


  public void setPaymentServiceId(String paymentServiceId) {
    this.paymentServiceId = paymentServiceId;
  }


  public PaymentConnectorExternalTransactionRequestContext responseStatusCode(String responseStatusCode) {
    
    this.responseStatusCode = responseStatusCode;
    return this;
  }

   /**
   * The response status code.
   * @return responseStatusCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The response status code.")

  public String getResponseStatusCode() {
    return responseStatusCode;
  }


  public void setResponseStatusCode(String responseStatusCode) {
    this.responseStatusCode = responseStatusCode;
  }


  public PaymentConnectorExternalTransactionRequestContext paymentServiceDisplayName(String paymentServiceDisplayName) {
    
    this.paymentServiceDisplayName = paymentServiceDisplayName;
    return this;
  }

   /**
   * The payment service display name.
   * @return paymentServiceDisplayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The payment service display name.")

  public String getPaymentServiceDisplayName() {
    return paymentServiceDisplayName;
  }


  public void setPaymentServiceDisplayName(String paymentServiceDisplayName) {
    this.paymentServiceDisplayName = paymentServiceDisplayName;
  }


  public PaymentConnectorExternalTransactionRequestContext method(String method) {
    
    this.method = method;
    return this;
  }

   /**
   * The HTTP method.
   * @return method
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The HTTP method.")

  public String getMethod() {
    return method;
  }


  public void setMethod(String method) {
    this.method = method;
  }


  public PaymentConnectorExternalTransactionRequestContext url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * The endpoint for the request.
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The endpoint for the request.")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public PaymentConnectorExternalTransactionRequestContext refundId(String refundId) {
    
    this.refundId = refundId;
    return this;
  }

   /**
   * The ID of the refund, in case this links to a refund.
   * @return refundId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the refund, in case this links to a refund.")

  public String getRefundId() {
    return refundId;
  }


  public void setRefundId(String refundId) {
    this.refundId = refundId;
  }


  public PaymentConnectorExternalTransactionRequestContext refundXid(String refundXid) {
    
    this.refundXid = refundXid;
    return this;
  }

   /**
   * The external ID of the refund.
   * @return refundXid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The external ID of the refund.")

  public String getRefundXid() {
    return refundXid;
  }


  public void setRefundXid(String refundXid) {
    this.refundXid = refundXid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentConnectorExternalTransactionRequestContext paymentConnectorExternalTransactionRequestContext = (PaymentConnectorExternalTransactionRequestContext) o;
    return Objects.equals(this.connectorRequestId, paymentConnectorExternalTransactionRequestContext.connectorRequestId) &&
        Objects.equals(this.request, paymentConnectorExternalTransactionRequestContext.request) &&
        Objects.equals(this.response, paymentConnectorExternalTransactionRequestContext.response) &&
        Objects.equals(this.paymentServiceDefinitionId, paymentConnectorExternalTransactionRequestContext.paymentServiceDefinitionId) &&
        Objects.equals(this.success, paymentConnectorExternalTransactionRequestContext.success) &&
        Objects.equals(this.paymentServiceId, paymentConnectorExternalTransactionRequestContext.paymentServiceId) &&
        Objects.equals(this.responseStatusCode, paymentConnectorExternalTransactionRequestContext.responseStatusCode) &&
        Objects.equals(this.paymentServiceDisplayName, paymentConnectorExternalTransactionRequestContext.paymentServiceDisplayName) &&
        Objects.equals(this.method, paymentConnectorExternalTransactionRequestContext.method) &&
        Objects.equals(this.url, paymentConnectorExternalTransactionRequestContext.url) &&
        Objects.equals(this.refundId, paymentConnectorExternalTransactionRequestContext.refundId) &&
        Objects.equals(this.refundXid, paymentConnectorExternalTransactionRequestContext.refundXid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectorRequestId, request, response, paymentServiceDefinitionId, success, paymentServiceId, responseStatusCode, paymentServiceDisplayName, method, url, refundId, refundXid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentConnectorExternalTransactionRequestContext {\n");
    sb.append("    connectorRequestId: ").append(toIndentedString(connectorRequestId)).append("\n");
    sb.append("    request: ").append(toIndentedString(request)).append("\n");
    sb.append("    response: ").append(toIndentedString(response)).append("\n");
    sb.append("    paymentServiceDefinitionId: ").append(toIndentedString(paymentServiceDefinitionId)).append("\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    paymentServiceId: ").append(toIndentedString(paymentServiceId)).append("\n");
    sb.append("    responseStatusCode: ").append(toIndentedString(responseStatusCode)).append("\n");
    sb.append("    paymentServiceDisplayName: ").append(toIndentedString(paymentServiceDisplayName)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    refundId: ").append(toIndentedString(refundId)).append("\n");
    sb.append("    refundXid: ").append(toIndentedString(refundXid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

