/*
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gr4vy.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.gr4vy.api.model.WebhookSubscriptionAuthentication;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * WebhookSubscriptionUpdateRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class WebhookSubscriptionUpdateRequest {
  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_AUTHENTICATION = "authentication";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION)
  private WebhookSubscriptionAuthentication authentication;


  public WebhookSubscriptionUpdateRequest active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Defines if this subscription is currently active or not. When deactivated, webhook events are not sent to the endpoint configured for this subscription.
   * @return active
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Defines if this subscription is currently active or not. When deactivated, webhook events are not sent to the endpoint configured for this subscription.")

  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    this.active = active;
  }


  public WebhookSubscriptionUpdateRequest url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * The URL of the endpoint to deliver webhook events to.
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://example.com/webhooks", value = "The URL of the endpoint to deliver webhook events to.")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public WebhookSubscriptionUpdateRequest authentication(WebhookSubscriptionAuthentication authentication) {
    
    this.authentication = authentication;
    return this;
  }

   /**
   * Get authentication
   * @return authentication
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WebhookSubscriptionAuthentication getAuthentication() {
    return authentication;
  }


  public void setAuthentication(WebhookSubscriptionAuthentication authentication) {
    this.authentication = authentication;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookSubscriptionUpdateRequest webhookSubscriptionUpdateRequest = (WebhookSubscriptionUpdateRequest) o;
    return Objects.equals(this.active, webhookSubscriptionUpdateRequest.active) &&
        Objects.equals(this.url, webhookSubscriptionUpdateRequest.url) &&
        Objects.equals(this.authentication, webhookSubscriptionUpdateRequest.authentication);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, url, authentication);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookSubscriptionUpdateRequest {\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    authentication: ").append(toIndentedString(authentication)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

