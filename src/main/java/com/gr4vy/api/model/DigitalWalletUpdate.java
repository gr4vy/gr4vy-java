/*
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gr4vy.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Request body to update a registered digital wallet&#39;s details.
 */
@ApiModel(description = "Request body to update a registered digital wallet's details.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DigitalWalletUpdate {
  public static final String SERIALIZED_NAME_MERCHANT_NAME = "merchant_name";
  @SerializedName(SERIALIZED_NAME_MERCHANT_NAME)
  private String merchantName;

  public static final String SERIALIZED_NAME_DOMAIN_NAMES = "domain_names";
  @SerializedName(SERIALIZED_NAME_DOMAIN_NAMES)
  private List<String> domainNames = null;

  public static final String SERIALIZED_NAME_MERCHANT_DISPLAY_NAME = "merchant_display_name";
  @SerializedName(SERIALIZED_NAME_MERCHANT_DISPLAY_NAME)
  private String merchantDisplayName;

  public static final String SERIALIZED_NAME_MERCHANT_COUNTRY_CODE = "merchant_country_code";
  @SerializedName(SERIALIZED_NAME_MERCHANT_COUNTRY_CODE)
  private String merchantCountryCode;

  public static final String SERIALIZED_NAME_MERCHANT_URL = "merchant_url";
  @SerializedName(SERIALIZED_NAME_MERCHANT_URL)
  private String merchantUrl;


  public DigitalWalletUpdate merchantName(String merchantName) {
    
    this.merchantName = merchantName;
    return this;
  }

   /**
   * The name of the merchant. This is used to update the value initially used to register with a digital wallet provider and this name is not displayed to the buyer.
   * @return merchantName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Gr4vy", value = "The name of the merchant. This is used to update the value initially used to register with a digital wallet provider and this name is not displayed to the buyer.")

  public String getMerchantName() {
    return merchantName;
  }


  public void setMerchantName(String merchantName) {
    this.merchantName = merchantName;
  }


  public DigitalWalletUpdate domainNames(List<String> domainNames) {
    
    this.domainNames = domainNames;
    return this;
  }

  public DigitalWalletUpdate addDomainNamesItem(String domainNamesItem) {
    if (this.domainNames == null) {
      this.domainNames = new ArrayList<String>();
    }
    this.domainNames.add(domainNamesItem);
    return this;
  }

   /**
   * The list of domain names that a digital wallet can be used on. To use a digital wallet on a website, the domain of the site is required to be in this list.
   * @return domainNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"example.com\"]", value = "The list of domain names that a digital wallet can be used on. To use a digital wallet on a website, the domain of the site is required to be in this list.")

  public List<String> getDomainNames() {
    return domainNames;
  }


  public void setDomainNames(List<String> domainNames) {
    this.domainNames = domainNames;
  }


  public DigitalWalletUpdate merchantDisplayName(String merchantDisplayName) {
    
    this.merchantDisplayName = merchantDisplayName;
    return this;
  }

   /**
   * The consumer facing name of the merchant.
   * @return merchantDisplayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Gr4vy", value = "The consumer facing name of the merchant.")

  public String getMerchantDisplayName() {
    return merchantDisplayName;
  }


  public void setMerchantDisplayName(String merchantDisplayName) {
    this.merchantDisplayName = merchantDisplayName;
  }


  public DigitalWalletUpdate merchantCountryCode(String merchantCountryCode) {
    
    this.merchantCountryCode = merchantCountryCode;
    return this;
  }

   /**
   * The country code where the merchant is registered.
   * @return merchantCountryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "US", value = "The country code where the merchant is registered.")

  public String getMerchantCountryCode() {
    return merchantCountryCode;
  }


  public void setMerchantCountryCode(String merchantCountryCode) {
    this.merchantCountryCode = merchantCountryCode;
  }


  public DigitalWalletUpdate merchantUrl(String merchantUrl) {
    
    this.merchantUrl = merchantUrl;
    return this;
  }

   /**
   * The main URL of the merchant.
   * @return merchantUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://example.com", value = "The main URL of the merchant.")

  public String getMerchantUrl() {
    return merchantUrl;
  }


  public void setMerchantUrl(String merchantUrl) {
    this.merchantUrl = merchantUrl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DigitalWalletUpdate digitalWalletUpdate = (DigitalWalletUpdate) o;
    return Objects.equals(this.merchantName, digitalWalletUpdate.merchantName) &&
        Objects.equals(this.domainNames, digitalWalletUpdate.domainNames) &&
        Objects.equals(this.merchantDisplayName, digitalWalletUpdate.merchantDisplayName) &&
        Objects.equals(this.merchantCountryCode, digitalWalletUpdate.merchantCountryCode) &&
        Objects.equals(this.merchantUrl, digitalWalletUpdate.merchantUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantName, domainNames, merchantDisplayName, merchantCountryCode, merchantUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DigitalWalletUpdate {\n");
    sb.append("    merchantName: ").append(toIndentedString(merchantName)).append("\n");
    sb.append("    domainNames: ").append(toIndentedString(domainNames)).append("\n");
    sb.append("    merchantDisplayName: ").append(toIndentedString(merchantDisplayName)).append("\n");
    sb.append("    merchantCountryCode: ").append(toIndentedString(merchantCountryCode)).append("\n");
    sb.append("    merchantUrl: ").append(toIndentedString(merchantUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

