/*
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gr4vy.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.gr4vy.api.model.ReportSpecParamsFilters;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Parameters used to configure the report. Acceptable values for this property depend on the value specified for &#x60;model&#x60;.
 */
@ApiModel(description = "Parameters used to configure the report. Acceptable values for this property depend on the value specified for `model`.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ReportSpecParams {
  /**
   * Gets or Sets fields
   */
  @JsonAdapter(FieldsEnum.Adapter.class)
  public enum FieldsEnum {
    ID("id"),
    
    EXTERNAL_IDENTIFIER("external_identifier"),
    
    STATUS("status"),
    
    CREATED_AT("created_at"),
    
    UPDATED_AT("updated_at"),
    
    AUTHORIZED_AT("authorized_at"),
    
    CAPTURED_AT("captured_at"),
    
    VOIDED_AT("voided_at"),
    
    AMOUNT("amount"),
    
    CURRENCY("currency"),
    
    CAPTURED_AMOUNT("captured_amount"),
    
    REFUNDED_AMOUNT("refunded_amount"),
    
    METHOD("method"),
    
    SCHEME("scheme"),
    
    PAYMENT_SERVICE_TRANSACTION_ID("payment_service_transaction_id"),
    
    PAYMENT_SERVICE_ID("payment_service_id"),
    
    PAYMENT_SERVICE_DEFINITION_ID("payment_service_definition_id"),
    
    PAYMENT_SERVICE_DISPLAY_NAME("payment_service_display_name"),
    
    AUTH_RESPONSE_CODE("auth_response_code"),
    
    RAW_RESPONSE_CODE("raw_response_code"),
    
    RAW_RESPONSE_DESCRIPTION("raw_response_description"),
    
    METADATA("metadata"),
    
    IS_SUBSEQUENT_PAYMENT("is_subsequent_payment"),
    
    MERCHANT_INITIATED("merchant_initiated"),
    
    PAYMENT_SOURCE("payment_source"),
    
    THREE_D_SECURE_STATUS("three_d_secure_status"),
    
    THREE_D_SECURE_ECI("three_d_secure_eci"),
    
    THREE_D_SECURE_AUTH_RESP("three_d_secure_auth_resp"),
    
    THREE_D_SECURE_METHOD("three_d_secure_method"),
    
    BUYER_EXTERNAL_IDENTIFIER("buyer_external_identifier"),
    
    BILLING_DETAILS_FIRST_NAME("billing_details_first_name"),
    
    BILLING_DETAILS_LAST_NAME("billing_details_last_name"),
    
    BILLING_DETAILS_EMAIL_ADDRESS("billing_details_email_address"),
    
    BILLING_DETAILS_PHONE_NUMBER("billing_details_phone_number"),
    
    BILLING_DETAILS_ADDRESS_CITY("billing_details_address_city"),
    
    BILLING_DETAILS_ADDRESS_COUNTRY("billing_details_address_country"),
    
    BILLING_DETAILS_ADDRESS_POSTAL_CODE("billing_details_address_postal_code"),
    
    BILLING_DETAILS_ADDRESS_STATE("billing_details_address_state"),
    
    BILLING_DETAILS_ADDRESS_STATE_CODE("billing_details_address_state_code"),
    
    BILLING_DETAILS_ADDRESS_HOUSE_NUMBER_OR_NAME("billing_details_address_house_number_or_name"),
    
    BILLING_DETAILS_ADDRESS_LINE1("billing_details_address_line1"),
    
    BILLING_DETAILS_ADDRESS_LINE2("billing_details_address_line2"),
    
    BILLING_DETAILS_ADDRESS_ORGANIZATION("billing_details_address_organization"),
    
    BILLING_DETAILS_TAX_ID("billing_details_tax_id"),
    
    BILLING_DETAILS_TAX_ID_KIND("billing_details_tax_id_kind");

    private String value;

    FieldsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FieldsEnum fromValue(String value) {
      for (FieldsEnum b : FieldsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FieldsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FieldsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FieldsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FieldsEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_FIELDS = "fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  private List<FieldsEnum> fields = null;

  public static final String SERIALIZED_NAME_FILTERS = "filters";
  @SerializedName(SERIALIZED_NAME_FILTERS)
  private ReportSpecParamsFilters filters;

  public static final String SERIALIZED_NAME_SORT = "sort";
  @SerializedName(SERIALIZED_NAME_SORT)
  private List<Object> sort = null;


  public ReportSpecParams fields(List<FieldsEnum> fields) {
    
    this.fields = fields;
    return this;
  }

  public ReportSpecParams addFieldsItem(FieldsEnum fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<FieldsEnum>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * A list of fields for the report.
   * @return fields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"id\",\"external_identifier\"]", value = "A list of fields for the report.")

  public List<FieldsEnum> getFields() {
    return fields;
  }


  public void setFields(List<FieldsEnum> fields) {
    this.fields = fields;
  }


  public ReportSpecParams filters(ReportSpecParamsFilters filters) {
    
    this.filters = filters;
    return this;
  }

   /**
   * Get filters
   * @return filters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ReportSpecParamsFilters getFilters() {
    return filters;
  }


  public void setFilters(ReportSpecParamsFilters filters) {
    this.filters = filters;
  }


  public ReportSpecParams sort(List<Object> sort) {
    
    this.sort = sort;
    return this;
  }

  public ReportSpecParams addSortItem(Object sortItem) {
    if (this.sort == null) {
      this.sort = new ArrayList<Object>();
    }
    this.sort.add(sortItem);
    return this;
  }

   /**
   * A list of fields to sort the report.
   * @return sort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[{\"field\":\"captured_at\",\"order\":\"desc\"}]", value = "A list of fields to sort the report.")

  public List<Object> getSort() {
    return sort;
  }


  public void setSort(List<Object> sort) {
    this.sort = sort;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportSpecParams reportSpecParams = (ReportSpecParams) o;
    return Objects.equals(this.fields, reportSpecParams.fields) &&
        Objects.equals(this.filters, reportSpecParams.filters) &&
        Objects.equals(this.sort, reportSpecParams.sort);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fields, filters, sort);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportSpecParams {\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

