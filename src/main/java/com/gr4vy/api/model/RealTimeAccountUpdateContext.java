/*
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gr4vy.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.UUID;

/**
 * Real time account updater request context.
 */
@ApiModel(description = "Real time account updater request context.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RealTimeAccountUpdateContext {
  public static final String SERIALIZED_NAME_PAYMENT_METHOD_ID = "payment_method_id";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD_ID)
  private UUID paymentMethodId;

  public static final String SERIALIZED_NAME_CARD_BIN = "card_bin";
  @SerializedName(SERIALIZED_NAME_CARD_BIN)
  private String cardBin;

  public static final String SERIALIZED_NAME_CARD_SUFFIX = "card_suffix";
  @SerializedName(SERIALIZED_NAME_CARD_SUFFIX)
  private String cardSuffix;

  public static final String SERIALIZED_NAME_CARD_EXPIRATION_DATE = "card_expiration_date";
  @SerializedName(SERIALIZED_NAME_CARD_EXPIRATION_DATE)
  private String cardExpirationDate;

  public static final String SERIALIZED_NAME_NEW_CARD_BIN = "new_card_bin";
  @SerializedName(SERIALIZED_NAME_NEW_CARD_BIN)
  private String newCardBin;

  public static final String SERIALIZED_NAME_NEW_CARD_SUFFIX = "new_card_suffix";
  @SerializedName(SERIALIZED_NAME_NEW_CARD_SUFFIX)
  private String newCardSuffix;

  public static final String SERIALIZED_NAME_NEW_CARD_EXPIRATION_DATE = "new_card_expiration_date";
  @SerializedName(SERIALIZED_NAME_NEW_CARD_EXPIRATION_DATE)
  private String newCardExpirationDate;

  public static final String SERIALIZED_NAME_LATENCY = "latency";
  @SerializedName(SERIALIZED_NAME_LATENCY)
  private BigDecimal latency;

  /**
   * The response code/result for the update request.
   */
  @JsonAdapter(ResponseCodeEnum.Adapter.class)
  public enum ResponseCodeEnum {
    ACCOUNT_CLOSED("account_closed"),
    
    CONTACT_CARDHOLDER("contact_cardholder"),
    
    UNCHANGED("unchanged"),
    
    UPDATED("updated");

    private String value;

    ResponseCodeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ResponseCodeEnum fromValue(String value) {
      for (ResponseCodeEnum b : ResponseCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ResponseCodeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResponseCodeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ResponseCodeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ResponseCodeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_RESPONSE_CODE = "response_code";
  @SerializedName(SERIALIZED_NAME_RESPONSE_CODE)
  private ResponseCodeEnum responseCode;

  /**
   * The reason code for a failed request.
   */
  @JsonAdapter(ErrorCodeEnum.Adapter.class)
  public enum ErrorCodeEnum {
    CLIENT_ERROR("client_error"),
    
    ISSUER_ERROR("issuer_error"),
    
    REQUEST_TIMEOUT("request_timeout");

    private String value;

    ErrorCodeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ErrorCodeEnum fromValue(String value) {
      for (ErrorCodeEnum b : ErrorCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ErrorCodeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ErrorCodeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ErrorCodeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ErrorCodeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ERROR_CODE = "error_code";
  @SerializedName(SERIALIZED_NAME_ERROR_CODE)
  private ErrorCodeEnum errorCode;


  public RealTimeAccountUpdateContext paymentMethodId(UUID paymentMethodId) {
    
    this.paymentMethodId = paymentMethodId;
    return this;
  }

   /**
   * The unique identifier for the payment method.
   * @return paymentMethodId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8724fd24-5489-4a5d-90fd-0604df7d3b83", value = "The unique identifier for the payment method.")

  public UUID getPaymentMethodId() {
    return paymentMethodId;
  }


  public void setPaymentMethodId(UUID paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
  }


  public RealTimeAccountUpdateContext cardBin(String cardBin) {
    
    this.cardBin = cardBin;
    return this;
  }

   /**
   * The existing card BIN.
   * @return cardBin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "424242", value = "The existing card BIN.")

  public String getCardBin() {
    return cardBin;
  }


  public void setCardBin(String cardBin) {
    this.cardBin = cardBin;
  }


  public RealTimeAccountUpdateContext cardSuffix(String cardSuffix) {
    
    this.cardSuffix = cardSuffix;
    return this;
  }

   /**
   * The existing last 4 digits for the card.
   * @return cardSuffix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4242", value = "The existing last 4 digits for the card.")

  public String getCardSuffix() {
    return cardSuffix;
  }


  public void setCardSuffix(String cardSuffix) {
    this.cardSuffix = cardSuffix;
  }


  public RealTimeAccountUpdateContext cardExpirationDate(String cardExpirationDate) {
    
    this.cardExpirationDate = cardExpirationDate;
    return this;
  }

   /**
   * The existing expiration date for the card.
   * @return cardExpirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "01/30", value = "The existing expiration date for the card.")

  public String getCardExpirationDate() {
    return cardExpirationDate;
  }


  public void setCardExpirationDate(String cardExpirationDate) {
    this.cardExpirationDate = cardExpirationDate;
  }


  public RealTimeAccountUpdateContext newCardBin(String newCardBin) {
    
    this.newCardBin = newCardBin;
    return this;
  }

   /**
   * The new card BIN.
   * @return newCardBin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "424242", value = "The new card BIN.")

  public String getNewCardBin() {
    return newCardBin;
  }


  public void setNewCardBin(String newCardBin) {
    this.newCardBin = newCardBin;
  }


  public RealTimeAccountUpdateContext newCardSuffix(String newCardSuffix) {
    
    this.newCardSuffix = newCardSuffix;
    return this;
  }

   /**
   * The new last 4 digits for the card.
   * @return newCardSuffix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4242", value = "The new last 4 digits for the card.")

  public String getNewCardSuffix() {
    return newCardSuffix;
  }


  public void setNewCardSuffix(String newCardSuffix) {
    this.newCardSuffix = newCardSuffix;
  }


  public RealTimeAccountUpdateContext newCardExpirationDate(String newCardExpirationDate) {
    
    this.newCardExpirationDate = newCardExpirationDate;
    return this;
  }

   /**
   * The new expiration date for the card.
   * @return newCardExpirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "01/30", value = "The new expiration date for the card.")

  public String getNewCardExpirationDate() {
    return newCardExpirationDate;
  }


  public void setNewCardExpirationDate(String newCardExpirationDate) {
    this.newCardExpirationDate = newCardExpirationDate;
  }


  public RealTimeAccountUpdateContext latency(BigDecimal latency) {
    
    this.latency = latency;
    return this;
  }

   /**
   * The latency in milliseconds of the request.
   * @return latency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "123", value = "The latency in milliseconds of the request.")

  public BigDecimal getLatency() {
    return latency;
  }


  public void setLatency(BigDecimal latency) {
    this.latency = latency;
  }


  public RealTimeAccountUpdateContext responseCode(ResponseCodeEnum responseCode) {
    
    this.responseCode = responseCode;
    return this;
  }

   /**
   * The response code/result for the update request.
   * @return responseCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "updated", value = "The response code/result for the update request.")

  public ResponseCodeEnum getResponseCode() {
    return responseCode;
  }


  public void setResponseCode(ResponseCodeEnum responseCode) {
    this.responseCode = responseCode;
  }


  public RealTimeAccountUpdateContext errorCode(ErrorCodeEnum errorCode) {
    
    this.errorCode = errorCode;
    return this;
  }

   /**
   * The reason code for a failed request.
   * @return errorCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "client_error", value = "The reason code for a failed request.")

  public ErrorCodeEnum getErrorCode() {
    return errorCode;
  }


  public void setErrorCode(ErrorCodeEnum errorCode) {
    this.errorCode = errorCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RealTimeAccountUpdateContext realTimeAccountUpdateContext = (RealTimeAccountUpdateContext) o;
    return Objects.equals(this.paymentMethodId, realTimeAccountUpdateContext.paymentMethodId) &&
        Objects.equals(this.cardBin, realTimeAccountUpdateContext.cardBin) &&
        Objects.equals(this.cardSuffix, realTimeAccountUpdateContext.cardSuffix) &&
        Objects.equals(this.cardExpirationDate, realTimeAccountUpdateContext.cardExpirationDate) &&
        Objects.equals(this.newCardBin, realTimeAccountUpdateContext.newCardBin) &&
        Objects.equals(this.newCardSuffix, realTimeAccountUpdateContext.newCardSuffix) &&
        Objects.equals(this.newCardExpirationDate, realTimeAccountUpdateContext.newCardExpirationDate) &&
        Objects.equals(this.latency, realTimeAccountUpdateContext.latency) &&
        Objects.equals(this.responseCode, realTimeAccountUpdateContext.responseCode) &&
        Objects.equals(this.errorCode, realTimeAccountUpdateContext.errorCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentMethodId, cardBin, cardSuffix, cardExpirationDate, newCardBin, newCardSuffix, newCardExpirationDate, latency, responseCode, errorCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RealTimeAccountUpdateContext {\n");
    sb.append("    paymentMethodId: ").append(toIndentedString(paymentMethodId)).append("\n");
    sb.append("    cardBin: ").append(toIndentedString(cardBin)).append("\n");
    sb.append("    cardSuffix: ").append(toIndentedString(cardSuffix)).append("\n");
    sb.append("    cardExpirationDate: ").append(toIndentedString(cardExpirationDate)).append("\n");
    sb.append("    newCardBin: ").append(toIndentedString(newCardBin)).append("\n");
    sb.append("    newCardSuffix: ").append(toIndentedString(newCardSuffix)).append("\n");
    sb.append("    newCardExpirationDate: ").append(toIndentedString(newCardExpirationDate)).append("\n");
    sb.append("    latency: ").append(toIndentedString(latency)).append("\n");
    sb.append("    responseCode: ").append(toIndentedString(responseCode)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

