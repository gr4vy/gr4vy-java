/*
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gr4vy.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * A request to create an API key-pair.
 */
@ApiModel(description = "A request to create an API key-pair.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class APIKeyPairCreate {
  public static final String SERIALIZED_NAME_DISPLAY_NAME = "display_name";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  /**
   * The algorithm to use for the API Key Pair. The recommended value is &#x60;ECDSA&#x60;. You should only use the &#x60;RSA&#x60; algorithm in environments that do not support &#x60;ECDSA&#x60;.
   */
  @JsonAdapter(AlgorithmEnum.Adapter.class)
  public enum AlgorithmEnum {
    ECDSA("ECDSA"),
    
    RSA("RSA");

    private String value;

    AlgorithmEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AlgorithmEnum fromValue(String value) {
      for (AlgorithmEnum b : AlgorithmEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AlgorithmEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AlgorithmEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AlgorithmEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AlgorithmEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ALGORITHM = "algorithm";
  @SerializedName(SERIALIZED_NAME_ALGORITHM)
  private AlgorithmEnum algorithm = AlgorithmEnum.ECDSA;

  public static final String SERIALIZED_NAME_ROLE_IDS = "role_ids";
  @SerializedName(SERIALIZED_NAME_ROLE_IDS)
  private List<UUID> roleIds = null;

  public static final String SERIALIZED_NAME_MERCHANT_ACCOUNT_ID = "merchant_account_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ACCOUNT_ID)
  private String merchantAccountId;


  public APIKeyPairCreate displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * A name for this key-pair which is used in the Gr4vy admin panel to give the key-pair a human readable name.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Sandbox", value = "A name for this key-pair which is used in the Gr4vy admin panel to give the key-pair a human readable name.")

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public APIKeyPairCreate algorithm(AlgorithmEnum algorithm) {
    
    this.algorithm = algorithm;
    return this;
  }

   /**
   * The algorithm to use for the API Key Pair. The recommended value is &#x60;ECDSA&#x60;. You should only use the &#x60;RSA&#x60; algorithm in environments that do not support &#x60;ECDSA&#x60;.
   * @return algorithm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ECDSA", value = "The algorithm to use for the API Key Pair. The recommended value is `ECDSA`. You should only use the `RSA` algorithm in environments that do not support `ECDSA`.")

  public AlgorithmEnum getAlgorithm() {
    return algorithm;
  }


  public void setAlgorithm(AlgorithmEnum algorithm) {
    this.algorithm = algorithm;
  }


  public APIKeyPairCreate roleIds(List<UUID> roleIds) {
    
    this.roleIds = roleIds;
    return this;
  }

  public APIKeyPairCreate addRoleIdsItem(UUID roleIdsItem) {
    if (this.roleIds == null) {
      this.roleIds = new ArrayList<UUID>();
    }
    this.roleIds.add(roleIdsItem);
    return this;
  }

   /**
   * A list of role IDs that will be assigned to the API Key Pair being created. Only the \&quot;Administrator\&quot; and \&quot;Integration\&quot; roles are supported.
   * @return roleIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"8d3fe99b-1422-42e6-bbb3-932d95ae5f79\"]", value = "A list of role IDs that will be assigned to the API Key Pair being created. Only the \"Administrator\" and \"Integration\" roles are supported.")

  public List<UUID> getRoleIds() {
    return roleIds;
  }


  public void setRoleIds(List<UUID> roleIds) {
    this.roleIds = roleIds;
  }


  public APIKeyPairCreate merchantAccountId(String merchantAccountId) {
    
    this.merchantAccountId = merchantAccountId;
    return this;
  }

   /**
   * The optional ID of the merchant account this API Key Pair should be assigned to. Leave this unset to create an API key that works across all merchant accounts.
   * @return merchantAccountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "plantly-uk", value = "The optional ID of the merchant account this API Key Pair should be assigned to. Leave this unset to create an API key that works across all merchant accounts.")

  public String getMerchantAccountId() {
    return merchantAccountId;
  }


  public void setMerchantAccountId(String merchantAccountId) {
    this.merchantAccountId = merchantAccountId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIKeyPairCreate apIKeyPairCreate = (APIKeyPairCreate) o;
    return Objects.equals(this.displayName, apIKeyPairCreate.displayName) &&
        Objects.equals(this.algorithm, apIKeyPairCreate.algorithm) &&
        Objects.equals(this.roleIds, apIKeyPairCreate.roleIds) &&
        Objects.equals(this.merchantAccountId, apIKeyPairCreate.merchantAccountId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, algorithm, roleIds, merchantAccountId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIKeyPairCreate {\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    algorithm: ").append(toIndentedString(algorithm)).append("\n");
    sb.append("    roleIds: ").append(toIndentedString(roleIds)).append("\n");
    sb.append("    merchantAccountId: ").append(toIndentedString(merchantAccountId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

