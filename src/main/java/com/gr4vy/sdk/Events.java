/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk;

import static com.gr4vy.sdk.operations.Operations.RequestOperation;

import com.gr4vy.sdk.models.operations.ListTransactionEventsRequest;
import com.gr4vy.sdk.models.operations.ListTransactionEventsRequestBuilder;
import com.gr4vy.sdk.models.operations.ListTransactionEventsResponse;
import com.gr4vy.sdk.operations.ListTransactionEvents;
import com.gr4vy.sdk.utils.Headers;
import com.gr4vy.sdk.utils.Options;
import java.lang.Exception;
import java.lang.Long;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class Events {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncEvents asyncSDK;

    Events(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncEvents(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncEvents async() {
        return asyncSDK;
    }

    /**
     * List transaction events
     * 
     * <p>Retrieve a paginated list of events related to processing a transaction, including status changes,
     * API requests, and webhook delivery attempts. Events are listed in chronological order, with the most
     * recent events first.
     * 
     * @return The call builder
     */
    public ListTransactionEventsRequestBuilder list() {
        return new ListTransactionEventsRequestBuilder(sdkConfiguration);
    }

    /**
     * List transaction events
     * 
     * <p>Retrieve a paginated list of events related to processing a transaction, including status changes,
     * API requests, and webhook delivery attempts. Events are listed in chronological order, with the most
     * recent events first.
     * 
     * @param transactionId The ID of the transaction
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListTransactionEventsResponse list(String transactionId) throws Exception {
        return list(transactionId, JsonNullable.undefined(), Optional.empty(),
            JsonNullable.undefined(), Optional.empty());
    }

    /**
     * List transaction events
     * 
     * <p>Retrieve a paginated list of events related to processing a transaction, including status changes,
     * API requests, and webhook delivery attempts. Events are listed in chronological order, with the most
     * recent events first.
     * 
     * @param transactionId The ID of the transaction
     * @param cursor A pointer to the page of results to return.
     * @param limit The maximum number of items that are at returned.
     * @param merchantAccountId 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListTransactionEventsResponse list(
            String transactionId, JsonNullable<String> cursor,
            Optional<Long> limit, JsonNullable<String> merchantAccountId,
            Optional<Options> options) throws Exception {
        ListTransactionEventsRequest request =
            ListTransactionEventsRequest
                .builder()
                .transactionId(transactionId)
                .cursor(cursor)
                .limit(limit)
                .merchantAccountId(merchantAccountId)
                .build();
        RequestOperation<ListTransactionEventsRequest, ListTransactionEventsResponse> operation
              = new ListTransactionEvents.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
