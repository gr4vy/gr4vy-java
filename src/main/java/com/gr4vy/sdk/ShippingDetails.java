/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk;

import static com.gr4vy.sdk.operations.Operations.RequestOperation;

import com.gr4vy.sdk.models.components.ShippingDetailsCreate;
import com.gr4vy.sdk.models.components.ShippingDetailsUpdate;
import com.gr4vy.sdk.models.operations.AddBuyerShippingDetailsRequest;
import com.gr4vy.sdk.models.operations.AddBuyerShippingDetailsRequestBuilder;
import com.gr4vy.sdk.models.operations.AddBuyerShippingDetailsResponse;
import com.gr4vy.sdk.models.operations.DeleteBuyerShippingDetailsRequest;
import com.gr4vy.sdk.models.operations.DeleteBuyerShippingDetailsRequestBuilder;
import com.gr4vy.sdk.models.operations.DeleteBuyerShippingDetailsResponse;
import com.gr4vy.sdk.models.operations.GetBuyerShippingDetailsRequest;
import com.gr4vy.sdk.models.operations.GetBuyerShippingDetailsRequestBuilder;
import com.gr4vy.sdk.models.operations.GetBuyerShippingDetailsResponse;
import com.gr4vy.sdk.models.operations.ListBuyerShippingDetailsRequest;
import com.gr4vy.sdk.models.operations.ListBuyerShippingDetailsRequestBuilder;
import com.gr4vy.sdk.models.operations.ListBuyerShippingDetailsResponse;
import com.gr4vy.sdk.models.operations.UpdateBuyerShippingDetailsRequest;
import com.gr4vy.sdk.models.operations.UpdateBuyerShippingDetailsRequestBuilder;
import com.gr4vy.sdk.models.operations.UpdateBuyerShippingDetailsResponse;
import com.gr4vy.sdk.operations.AddBuyerShippingDetailsOperation;
import com.gr4vy.sdk.operations.DeleteBuyerShippingDetailsOperation;
import com.gr4vy.sdk.operations.GetBuyerShippingDetailsOperation;
import com.gr4vy.sdk.operations.ListBuyerShippingDetailsOperation;
import com.gr4vy.sdk.operations.UpdateBuyerShippingDetailsOperation;
import com.gr4vy.sdk.utils.Options;
import java.lang.Exception;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class ShippingDetails {
    private final SDKConfiguration sdkConfiguration;

    ShippingDetails(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * Add buyer shipping details
     * 
     * <p>Associate shipping details to a buyer.
     * 
     * @return The call builder
     */
    public AddBuyerShippingDetailsRequestBuilder create() {
        return new AddBuyerShippingDetailsRequestBuilder(sdkConfiguration);
    }

    /**
     * Add buyer shipping details
     * 
     * <p>Associate shipping details to a buyer.
     * 
     * @param buyerId The ID of the buyer to add shipping details to.
     * @param shippingDetailsCreate 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AddBuyerShippingDetailsResponse create(
            String buyerId,
            ShippingDetailsCreate shippingDetailsCreate) throws Exception {
        return create(buyerId, JsonNullable.undefined(), shippingDetailsCreate);
    }

    /**
     * Add buyer shipping details
     * 
     * <p>Associate shipping details to a buyer.
     * 
     * @param buyerId The ID of the buyer to add shipping details to.
     * @param merchantAccountId 
     * @param shippingDetailsCreate 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AddBuyerShippingDetailsResponse create(
            String buyerId,
            JsonNullable<String> merchantAccountId,
            ShippingDetailsCreate shippingDetailsCreate) throws Exception {
        AddBuyerShippingDetailsRequest request =
            AddBuyerShippingDetailsRequest
                .builder()
                .buyerId(buyerId)
                .merchantAccountId(merchantAccountId)
                .shippingDetailsCreate(shippingDetailsCreate)
                .build();
        RequestOperation<AddBuyerShippingDetailsRequest, AddBuyerShippingDetailsResponse> operation
              = new AddBuyerShippingDetailsOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List a buyer's shipping details
     * 
     * <p>List all the shipping details associated to a specific buyer.
     * 
     * @return The call builder
     */
    public ListBuyerShippingDetailsRequestBuilder list() {
        return new ListBuyerShippingDetailsRequestBuilder(sdkConfiguration);
    }

    /**
     * List a buyer's shipping details
     * 
     * <p>List all the shipping details associated to a specific buyer.
     * 
     * @param buyerId The ID of the buyer to retrieve shipping details for.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListBuyerShippingDetailsResponse list(String buyerId) throws Exception {
        return list(buyerId, JsonNullable.undefined(), Optional.empty());
    }

    /**
     * List a buyer's shipping details
     * 
     * <p>List all the shipping details associated to a specific buyer.
     * 
     * @param buyerId The ID of the buyer to retrieve shipping details for.
     * @param merchantAccountId 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListBuyerShippingDetailsResponse list(
            String buyerId,
            JsonNullable<String> merchantAccountId,
            Optional<Options> options) throws Exception {
        ListBuyerShippingDetailsRequest request =
            ListBuyerShippingDetailsRequest
                .builder()
                .buyerId(buyerId)
                .merchantAccountId(merchantAccountId)
                .build();
        RequestOperation<ListBuyerShippingDetailsRequest, ListBuyerShippingDetailsResponse> operation
              = new ListBuyerShippingDetailsOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get buyer shipping details
     * 
     * <p>Get a buyer's shipping details.
     * 
     * @return The call builder
     */
    public GetBuyerShippingDetailsRequestBuilder get() {
        return new GetBuyerShippingDetailsRequestBuilder(sdkConfiguration);
    }

    /**
     * Get buyer shipping details
     * 
     * <p>Get a buyer's shipping details.
     * 
     * @param buyerId The ID of the buyer to retrieve shipping details for.
     * @param shippingDetailsId The ID of the shipping details to retrieve.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetBuyerShippingDetailsResponse get(
            String buyerId,
            String shippingDetailsId) throws Exception {
        return get(buyerId, shippingDetailsId, JsonNullable.undefined(),
            Optional.empty());
    }

    /**
     * Get buyer shipping details
     * 
     * <p>Get a buyer's shipping details.
     * 
     * @param buyerId The ID of the buyer to retrieve shipping details for.
     * @param shippingDetailsId The ID of the shipping details to retrieve.
     * @param merchantAccountId 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetBuyerShippingDetailsResponse get(
            String buyerId,
            String shippingDetailsId,
            JsonNullable<String> merchantAccountId,
            Optional<Options> options) throws Exception {
        GetBuyerShippingDetailsRequest request =
            GetBuyerShippingDetailsRequest
                .builder()
                .buyerId(buyerId)
                .shippingDetailsId(shippingDetailsId)
                .merchantAccountId(merchantAccountId)
                .build();
        RequestOperation<GetBuyerShippingDetailsRequest, GetBuyerShippingDetailsResponse> operation
              = new GetBuyerShippingDetailsOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a buyer's shipping details
     * 
     * <p>Update the shipping details associated to a specific buyer.
     * 
     * @return The call builder
     */
    public UpdateBuyerShippingDetailsRequestBuilder update() {
        return new UpdateBuyerShippingDetailsRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a buyer's shipping details
     * 
     * <p>Update the shipping details associated to a specific buyer.
     * 
     * @param buyerId The ID of the buyer to update shipping details for.
     * @param shippingDetailsId The ID of the shipping details to update.
     * @param shippingDetailsUpdate 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateBuyerShippingDetailsResponse update(
            String buyerId,
            String shippingDetailsId,
            ShippingDetailsUpdate shippingDetailsUpdate) throws Exception {
        return update(buyerId, shippingDetailsId, JsonNullable.undefined(),
            shippingDetailsUpdate);
    }

    /**
     * Update a buyer's shipping details
     * 
     * <p>Update the shipping details associated to a specific buyer.
     * 
     * @param buyerId The ID of the buyer to update shipping details for.
     * @param shippingDetailsId The ID of the shipping details to update.
     * @param merchantAccountId 
     * @param shippingDetailsUpdate 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateBuyerShippingDetailsResponse update(
            String buyerId,
            String shippingDetailsId,
            JsonNullable<String> merchantAccountId,
            ShippingDetailsUpdate shippingDetailsUpdate) throws Exception {
        UpdateBuyerShippingDetailsRequest request =
            UpdateBuyerShippingDetailsRequest
                .builder()
                .buyerId(buyerId)
                .shippingDetailsId(shippingDetailsId)
                .merchantAccountId(merchantAccountId)
                .shippingDetailsUpdate(shippingDetailsUpdate)
                .build();
        RequestOperation<UpdateBuyerShippingDetailsRequest, UpdateBuyerShippingDetailsResponse> operation
              = new UpdateBuyerShippingDetailsOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Delete a buyer's shipping details
     * 
     * <p>Delete the shipping details associated to a specific buyer.
     * 
     * @return The call builder
     */
    public DeleteBuyerShippingDetailsRequestBuilder delete() {
        return new DeleteBuyerShippingDetailsRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete a buyer's shipping details
     * 
     * <p>Delete the shipping details associated to a specific buyer.
     * 
     * @param buyerId The ID of the buyer to delete shipping details for.
     * @param shippingDetailsId The ID of the shipping details to delete.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public DeleteBuyerShippingDetailsResponse delete(
            String buyerId,
            String shippingDetailsId) throws Exception {
        return delete(buyerId, shippingDetailsId, JsonNullable.undefined());
    }

    /**
     * Delete a buyer's shipping details
     * 
     * <p>Delete the shipping details associated to a specific buyer.
     * 
     * @param buyerId The ID of the buyer to delete shipping details for.
     * @param shippingDetailsId The ID of the shipping details to delete.
     * @param merchantAccountId 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public DeleteBuyerShippingDetailsResponse delete(
            String buyerId,
            String shippingDetailsId,
            JsonNullable<String> merchantAccountId) throws Exception {
        DeleteBuyerShippingDetailsRequest request =
            DeleteBuyerShippingDetailsRequest
                .builder()
                .buyerId(buyerId)
                .shippingDetailsId(shippingDetailsId)
                .merchantAccountId(merchantAccountId)
                .build();
        RequestOperation<DeleteBuyerShippingDetailsRequest, DeleteBuyerShippingDetailsResponse> operation
              = new DeleteBuyerShippingDetailsOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
