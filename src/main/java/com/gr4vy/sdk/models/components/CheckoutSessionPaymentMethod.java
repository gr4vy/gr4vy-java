/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.gr4vy.sdk.utils.LazySingletonValue;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class CheckoutSessionPaymentMethod {

    /**
     * Always `payment-method`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    private Optional<String> type;

    /**
     * The ID of the payment method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private JsonNullable<String> id;

    /**
     * Details for credit or debit card payment method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("details")
    private JsonNullable<? extends CheckoutSessionPaymentMethodDetails> details;

    /**
     * The last 4 digits of the the card.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    private JsonNullable<String> label;

    /**
     * Always `card`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("method")
    private Optional<String> method;

    /**
     * The scheme of the card.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scheme")
    private JsonNullable<? extends CardScheme> scheme;

    /**
     * The unique hash derived from the card number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fingerprint")
    private JsonNullable<String> fingerprint;

    @JsonCreator
    public CheckoutSessionPaymentMethod(
            @JsonProperty("id") JsonNullable<String> id,
            @JsonProperty("details") JsonNullable<? extends CheckoutSessionPaymentMethodDetails> details,
            @JsonProperty("label") JsonNullable<String> label,
            @JsonProperty("scheme") JsonNullable<? extends CardScheme> scheme,
            @JsonProperty("fingerprint") JsonNullable<String> fingerprint) {
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(details, "details");
        Utils.checkNotNull(label, "label");
        Utils.checkNotNull(scheme, "scheme");
        Utils.checkNotNull(fingerprint, "fingerprint");
        this.type = Builder._SINGLETON_VALUE_Type.value();
        this.id = id;
        this.details = details;
        this.label = label;
        this.method = Builder._SINGLETON_VALUE_Method.value();
        this.scheme = scheme;
        this.fingerprint = fingerprint;
    }
    
    public CheckoutSessionPaymentMethod() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * Always `payment-method`
     */
    @JsonIgnore
    public Optional<String> type() {
        return type;
    }

    /**
     * The ID of the payment method.
     */
    @JsonIgnore
    public JsonNullable<String> id() {
        return id;
    }

    /**
     * Details for credit or debit card payment method.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<CheckoutSessionPaymentMethodDetails> details() {
        return (JsonNullable<CheckoutSessionPaymentMethodDetails>) details;
    }

    /**
     * The last 4 digits of the the card.
     */
    @JsonIgnore
    public JsonNullable<String> label() {
        return label;
    }

    /**
     * Always `card`
     */
    @JsonIgnore
    public Optional<String> method() {
        return method;
    }

    /**
     * The scheme of the card.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<CardScheme> scheme() {
        return (JsonNullable<CardScheme>) scheme;
    }

    /**
     * The unique hash derived from the card number.
     */
    @JsonIgnore
    public JsonNullable<String> fingerprint() {
        return fingerprint;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The ID of the payment method.
     */
    public CheckoutSessionPaymentMethod withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = JsonNullable.of(id);
        return this;
    }

    /**
     * The ID of the payment method.
     */
    public CheckoutSessionPaymentMethod withId(JsonNullable<String> id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    /**
     * Details for credit or debit card payment method.
     */
    public CheckoutSessionPaymentMethod withDetails(CheckoutSessionPaymentMethodDetails details) {
        Utils.checkNotNull(details, "details");
        this.details = JsonNullable.of(details);
        return this;
    }

    /**
     * Details for credit or debit card payment method.
     */
    public CheckoutSessionPaymentMethod withDetails(JsonNullable<? extends CheckoutSessionPaymentMethodDetails> details) {
        Utils.checkNotNull(details, "details");
        this.details = details;
        return this;
    }

    /**
     * The last 4 digits of the the card.
     */
    public CheckoutSessionPaymentMethod withLabel(String label) {
        Utils.checkNotNull(label, "label");
        this.label = JsonNullable.of(label);
        return this;
    }

    /**
     * The last 4 digits of the the card.
     */
    public CheckoutSessionPaymentMethod withLabel(JsonNullable<String> label) {
        Utils.checkNotNull(label, "label");
        this.label = label;
        return this;
    }

    /**
     * The scheme of the card.
     */
    public CheckoutSessionPaymentMethod withScheme(CardScheme scheme) {
        Utils.checkNotNull(scheme, "scheme");
        this.scheme = JsonNullable.of(scheme);
        return this;
    }

    /**
     * The scheme of the card.
     */
    public CheckoutSessionPaymentMethod withScheme(JsonNullable<? extends CardScheme> scheme) {
        Utils.checkNotNull(scheme, "scheme");
        this.scheme = scheme;
        return this;
    }

    /**
     * The unique hash derived from the card number.
     */
    public CheckoutSessionPaymentMethod withFingerprint(String fingerprint) {
        Utils.checkNotNull(fingerprint, "fingerprint");
        this.fingerprint = JsonNullable.of(fingerprint);
        return this;
    }

    /**
     * The unique hash derived from the card number.
     */
    public CheckoutSessionPaymentMethod withFingerprint(JsonNullable<String> fingerprint) {
        Utils.checkNotNull(fingerprint, "fingerprint");
        this.fingerprint = fingerprint;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CheckoutSessionPaymentMethod other = (CheckoutSessionPaymentMethod) o;
        return 
            Utils.enhancedDeepEquals(this.type, other.type) &&
            Utils.enhancedDeepEquals(this.id, other.id) &&
            Utils.enhancedDeepEquals(this.details, other.details) &&
            Utils.enhancedDeepEquals(this.label, other.label) &&
            Utils.enhancedDeepEquals(this.method, other.method) &&
            Utils.enhancedDeepEquals(this.scheme, other.scheme) &&
            Utils.enhancedDeepEquals(this.fingerprint, other.fingerprint);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            type,
            id,
            details,
            label,
            method,
            scheme,
            fingerprint);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CheckoutSessionPaymentMethod.class,
                "type", type,
                "id", id,
                "details", details,
                "label", label,
                "method", method,
                "scheme", scheme,
                "fingerprint", fingerprint);
    }
    
    public final static class Builder {
 
        private JsonNullable<String> id = JsonNullable.undefined();
 
        private JsonNullable<? extends CheckoutSessionPaymentMethodDetails> details = JsonNullable.undefined();
 
        private JsonNullable<String> label = JsonNullable.undefined();
 
        private JsonNullable<? extends CardScheme> scheme = JsonNullable.undefined();
 
        private JsonNullable<String> fingerprint = JsonNullable.undefined();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The ID of the payment method.
         */
        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = JsonNullable.of(id);
            return this;
        }

        /**
         * The ID of the payment method.
         */
        public Builder id(JsonNullable<String> id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }

        /**
         * Details for credit or debit card payment method.
         */
        public Builder details(CheckoutSessionPaymentMethodDetails details) {
            Utils.checkNotNull(details, "details");
            this.details = JsonNullable.of(details);
            return this;
        }

        /**
         * Details for credit or debit card payment method.
         */
        public Builder details(JsonNullable<? extends CheckoutSessionPaymentMethodDetails> details) {
            Utils.checkNotNull(details, "details");
            this.details = details;
            return this;
        }

        /**
         * The last 4 digits of the the card.
         */
        public Builder label(String label) {
            Utils.checkNotNull(label, "label");
            this.label = JsonNullable.of(label);
            return this;
        }

        /**
         * The last 4 digits of the the card.
         */
        public Builder label(JsonNullable<String> label) {
            Utils.checkNotNull(label, "label");
            this.label = label;
            return this;
        }

        /**
         * The scheme of the card.
         */
        public Builder scheme(CardScheme scheme) {
            Utils.checkNotNull(scheme, "scheme");
            this.scheme = JsonNullable.of(scheme);
            return this;
        }

        /**
         * The scheme of the card.
         */
        public Builder scheme(JsonNullable<? extends CardScheme> scheme) {
            Utils.checkNotNull(scheme, "scheme");
            this.scheme = scheme;
            return this;
        }

        /**
         * The unique hash derived from the card number.
         */
        public Builder fingerprint(String fingerprint) {
            Utils.checkNotNull(fingerprint, "fingerprint");
            this.fingerprint = JsonNullable.of(fingerprint);
            return this;
        }

        /**
         * The unique hash derived from the card number.
         */
        public Builder fingerprint(JsonNullable<String> fingerprint) {
            Utils.checkNotNull(fingerprint, "fingerprint");
            this.fingerprint = fingerprint;
            return this;
        }
        
        public CheckoutSessionPaymentMethod build() {
            return new CheckoutSessionPaymentMethod(
                id,
                details,
                label,
                scheme,
                fingerprint);
        }

        private static final LazySingletonValue<Optional<String>> _SINGLETON_VALUE_Type =
                new LazySingletonValue<>(
                        "type",
                        "\"payment-method\"",
                        new TypeReference<Optional<String>>() {});

        private static final LazySingletonValue<Optional<String>> _SINGLETON_VALUE_Method =
                new LazySingletonValue<>(
                        "method",
                        "\"card\"",
                        new TypeReference<Optional<String>>() {});
    }
}
