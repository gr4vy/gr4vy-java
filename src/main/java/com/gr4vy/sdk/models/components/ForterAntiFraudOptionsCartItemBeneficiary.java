/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;


public class ForterAntiFraudOptionsCartItemBeneficiary {

    @JsonProperty("personal_details")
    private ForterAntiFraudOptionsCartItemBeneficiaryPersonalDetails personalDetails;

    /**
     * Address information of the beneficiary.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    private JsonNullable<? extends ForterAntiFraudOptionsCartItemBeneficiaryAddress> address;

    /**
     * Phone numbers associated with the beneficiary.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone")
    private JsonNullable<? extends List<ForterAntiFraudOptionsCartItemBeneficiaryPhone>> phone;

    /**
     * Comments related to the beneficiary.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comments")
    private JsonNullable<? extends ForterAntiFraudOptionsCartItemBeneficiaryComments> comments;

    @JsonCreator
    public ForterAntiFraudOptionsCartItemBeneficiary(
            @JsonProperty("personal_details") ForterAntiFraudOptionsCartItemBeneficiaryPersonalDetails personalDetails,
            @JsonProperty("address") JsonNullable<? extends ForterAntiFraudOptionsCartItemBeneficiaryAddress> address,
            @JsonProperty("phone") JsonNullable<? extends List<ForterAntiFraudOptionsCartItemBeneficiaryPhone>> phone,
            @JsonProperty("comments") JsonNullable<? extends ForterAntiFraudOptionsCartItemBeneficiaryComments> comments) {
        Utils.checkNotNull(personalDetails, "personalDetails");
        Utils.checkNotNull(address, "address");
        Utils.checkNotNull(phone, "phone");
        Utils.checkNotNull(comments, "comments");
        this.personalDetails = personalDetails;
        this.address = address;
        this.phone = phone;
        this.comments = comments;
    }
    
    public ForterAntiFraudOptionsCartItemBeneficiary(
            ForterAntiFraudOptionsCartItemBeneficiaryPersonalDetails personalDetails) {
        this(personalDetails, JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined());
    }

    @JsonIgnore
    public ForterAntiFraudOptionsCartItemBeneficiaryPersonalDetails personalDetails() {
        return personalDetails;
    }

    /**
     * Address information of the beneficiary.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<ForterAntiFraudOptionsCartItemBeneficiaryAddress> address() {
        return (JsonNullable<ForterAntiFraudOptionsCartItemBeneficiaryAddress>) address;
    }

    /**
     * Phone numbers associated with the beneficiary.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<ForterAntiFraudOptionsCartItemBeneficiaryPhone>> phone() {
        return (JsonNullable<List<ForterAntiFraudOptionsCartItemBeneficiaryPhone>>) phone;
    }

    /**
     * Comments related to the beneficiary.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<ForterAntiFraudOptionsCartItemBeneficiaryComments> comments() {
        return (JsonNullable<ForterAntiFraudOptionsCartItemBeneficiaryComments>) comments;
    }

    public static Builder builder() {
        return new Builder();
    }


    public ForterAntiFraudOptionsCartItemBeneficiary withPersonalDetails(ForterAntiFraudOptionsCartItemBeneficiaryPersonalDetails personalDetails) {
        Utils.checkNotNull(personalDetails, "personalDetails");
        this.personalDetails = personalDetails;
        return this;
    }

    /**
     * Address information of the beneficiary.
     */
    public ForterAntiFraudOptionsCartItemBeneficiary withAddress(ForterAntiFraudOptionsCartItemBeneficiaryAddress address) {
        Utils.checkNotNull(address, "address");
        this.address = JsonNullable.of(address);
        return this;
    }

    /**
     * Address information of the beneficiary.
     */
    public ForterAntiFraudOptionsCartItemBeneficiary withAddress(JsonNullable<? extends ForterAntiFraudOptionsCartItemBeneficiaryAddress> address) {
        Utils.checkNotNull(address, "address");
        this.address = address;
        return this;
    }

    /**
     * Phone numbers associated with the beneficiary.
     */
    public ForterAntiFraudOptionsCartItemBeneficiary withPhone(List<ForterAntiFraudOptionsCartItemBeneficiaryPhone> phone) {
        Utils.checkNotNull(phone, "phone");
        this.phone = JsonNullable.of(phone);
        return this;
    }

    /**
     * Phone numbers associated with the beneficiary.
     */
    public ForterAntiFraudOptionsCartItemBeneficiary withPhone(JsonNullable<? extends List<ForterAntiFraudOptionsCartItemBeneficiaryPhone>> phone) {
        Utils.checkNotNull(phone, "phone");
        this.phone = phone;
        return this;
    }

    /**
     * Comments related to the beneficiary.
     */
    public ForterAntiFraudOptionsCartItemBeneficiary withComments(ForterAntiFraudOptionsCartItemBeneficiaryComments comments) {
        Utils.checkNotNull(comments, "comments");
        this.comments = JsonNullable.of(comments);
        return this;
    }

    /**
     * Comments related to the beneficiary.
     */
    public ForterAntiFraudOptionsCartItemBeneficiary withComments(JsonNullable<? extends ForterAntiFraudOptionsCartItemBeneficiaryComments> comments) {
        Utils.checkNotNull(comments, "comments");
        this.comments = comments;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ForterAntiFraudOptionsCartItemBeneficiary other = (ForterAntiFraudOptionsCartItemBeneficiary) o;
        return 
            Utils.enhancedDeepEquals(this.personalDetails, other.personalDetails) &&
            Utils.enhancedDeepEquals(this.address, other.address) &&
            Utils.enhancedDeepEquals(this.phone, other.phone) &&
            Utils.enhancedDeepEquals(this.comments, other.comments);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            personalDetails, address, phone,
            comments);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ForterAntiFraudOptionsCartItemBeneficiary.class,
                "personalDetails", personalDetails,
                "address", address,
                "phone", phone,
                "comments", comments);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private ForterAntiFraudOptionsCartItemBeneficiaryPersonalDetails personalDetails;

        private JsonNullable<? extends ForterAntiFraudOptionsCartItemBeneficiaryAddress> address = JsonNullable.undefined();

        private JsonNullable<? extends List<ForterAntiFraudOptionsCartItemBeneficiaryPhone>> phone = JsonNullable.undefined();

        private JsonNullable<? extends ForterAntiFraudOptionsCartItemBeneficiaryComments> comments = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        public Builder personalDetails(ForterAntiFraudOptionsCartItemBeneficiaryPersonalDetails personalDetails) {
            Utils.checkNotNull(personalDetails, "personalDetails");
            this.personalDetails = personalDetails;
            return this;
        }


        /**
         * Address information of the beneficiary.
         */
        public Builder address(ForterAntiFraudOptionsCartItemBeneficiaryAddress address) {
            Utils.checkNotNull(address, "address");
            this.address = JsonNullable.of(address);
            return this;
        }

        /**
         * Address information of the beneficiary.
         */
        public Builder address(JsonNullable<? extends ForterAntiFraudOptionsCartItemBeneficiaryAddress> address) {
            Utils.checkNotNull(address, "address");
            this.address = address;
            return this;
        }


        /**
         * Phone numbers associated with the beneficiary.
         */
        public Builder phone(List<ForterAntiFraudOptionsCartItemBeneficiaryPhone> phone) {
            Utils.checkNotNull(phone, "phone");
            this.phone = JsonNullable.of(phone);
            return this;
        }

        /**
         * Phone numbers associated with the beneficiary.
         */
        public Builder phone(JsonNullable<? extends List<ForterAntiFraudOptionsCartItemBeneficiaryPhone>> phone) {
            Utils.checkNotNull(phone, "phone");
            this.phone = phone;
            return this;
        }


        /**
         * Comments related to the beneficiary.
         */
        public Builder comments(ForterAntiFraudOptionsCartItemBeneficiaryComments comments) {
            Utils.checkNotNull(comments, "comments");
            this.comments = JsonNullable.of(comments);
            return this;
        }

        /**
         * Comments related to the beneficiary.
         */
        public Builder comments(JsonNullable<? extends ForterAntiFraudOptionsCartItemBeneficiaryComments> comments) {
            Utils.checkNotNull(comments, "comments");
            this.comments = comments;
            return this;
        }

        public ForterAntiFraudOptionsCartItemBeneficiary build() {

            return new ForterAntiFraudOptionsCartItemBeneficiary(
                personalDetails, address, phone,
                comments);
        }

    }
}
