/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import org.openapitools.jackson.nullable.JsonNullable;


public class PayoutConnectionOptions {
    /**
     * Custom options for `checkout-card` payment service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("checkout-card")
    private JsonNullable<? extends CheckoutPayoutOptions> checkoutCard;

    @JsonCreator
    public PayoutConnectionOptions(
            @JsonProperty("checkout-card") JsonNullable<? extends CheckoutPayoutOptions> checkoutCard) {
        Utils.checkNotNull(checkoutCard, "checkoutCard");
        this.checkoutCard = checkoutCard;
    }
    
    public PayoutConnectionOptions() {
        this(JsonNullable.undefined());
    }

    /**
     * Custom options for `checkout-card` payment service.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<CheckoutPayoutOptions> checkoutCard() {
        return (JsonNullable<CheckoutPayoutOptions>) checkoutCard;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Custom options for `checkout-card` payment service.
     */
    public PayoutConnectionOptions withCheckoutCard(CheckoutPayoutOptions checkoutCard) {
        Utils.checkNotNull(checkoutCard, "checkoutCard");
        this.checkoutCard = JsonNullable.of(checkoutCard);
        return this;
    }

    /**
     * Custom options for `checkout-card` payment service.
     */
    public PayoutConnectionOptions withCheckoutCard(JsonNullable<? extends CheckoutPayoutOptions> checkoutCard) {
        Utils.checkNotNull(checkoutCard, "checkoutCard");
        this.checkoutCard = checkoutCard;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PayoutConnectionOptions other = (PayoutConnectionOptions) o;
        return 
            Utils.enhancedDeepEquals(this.checkoutCard, other.checkoutCard);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            checkoutCard);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PayoutConnectionOptions.class,
                "checkoutCard", checkoutCard);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<? extends CheckoutPayoutOptions> checkoutCard = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Custom options for `checkout-card` payment service.
         */
        public Builder checkoutCard(CheckoutPayoutOptions checkoutCard) {
            Utils.checkNotNull(checkoutCard, "checkoutCard");
            this.checkoutCard = JsonNullable.of(checkoutCard);
            return this;
        }

        /**
         * Custom options for `checkout-card` payment service.
         */
        public Builder checkoutCard(JsonNullable<? extends CheckoutPayoutOptions> checkoutCard) {
            Utils.checkNotNull(checkoutCard, "checkoutCard");
            this.checkoutCard = checkoutCard;
            return this;
        }

        public PayoutConnectionOptions build() {

            return new PayoutConnectionOptions(
                checkoutCard);
        }

    }
}
