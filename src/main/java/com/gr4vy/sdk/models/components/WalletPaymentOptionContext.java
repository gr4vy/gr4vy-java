/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.List;


public class WalletPaymentOptionContext {

    @JsonProperty("merchant_name")
    private String merchantName;


    @JsonProperty("supported_schemes")
    private List<String> supportedSchemes;

    @JsonCreator
    public WalletPaymentOptionContext(
            @JsonProperty("merchant_name") String merchantName,
            @JsonProperty("supported_schemes") List<String> supportedSchemes) {
        Utils.checkNotNull(merchantName, "merchantName");
        Utils.checkNotNull(supportedSchemes, "supportedSchemes");
        this.merchantName = merchantName;
        this.supportedSchemes = supportedSchemes;
    }

    @JsonIgnore
    public String merchantName() {
        return merchantName;
    }

    @JsonIgnore
    public List<String> supportedSchemes() {
        return supportedSchemes;
    }

    public static Builder builder() {
        return new Builder();
    }


    public WalletPaymentOptionContext withMerchantName(String merchantName) {
        Utils.checkNotNull(merchantName, "merchantName");
        this.merchantName = merchantName;
        return this;
    }

    public WalletPaymentOptionContext withSupportedSchemes(List<String> supportedSchemes) {
        Utils.checkNotNull(supportedSchemes, "supportedSchemes");
        this.supportedSchemes = supportedSchemes;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        WalletPaymentOptionContext other = (WalletPaymentOptionContext) o;
        return 
            Utils.enhancedDeepEquals(this.merchantName, other.merchantName) &&
            Utils.enhancedDeepEquals(this.supportedSchemes, other.supportedSchemes);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            merchantName, supportedSchemes);
    }
    
    @Override
    public String toString() {
        return Utils.toString(WalletPaymentOptionContext.class,
                "merchantName", merchantName,
                "supportedSchemes", supportedSchemes);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String merchantName;

        private List<String> supportedSchemes;

        private Builder() {
          // force use of static builder() method
        }


        public Builder merchantName(String merchantName) {
            Utils.checkNotNull(merchantName, "merchantName");
            this.merchantName = merchantName;
            return this;
        }


        public Builder supportedSchemes(List<String> supportedSchemes) {
            Utils.checkNotNull(supportedSchemes, "supportedSchemes");
            this.supportedSchemes = supportedSchemes;
            return this;
        }

        public WalletPaymentOptionContext build() {

            return new WalletPaymentOptionContext(
                merchantName, supportedSchemes);
        }

    }
}
