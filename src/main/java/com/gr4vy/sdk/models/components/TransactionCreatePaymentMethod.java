/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.gr4vy.sdk.utils.OneOfDeserializer;
import com.gr4vy.sdk.utils.TypedObject;
import com.gr4vy.sdk.utils.Utils.JsonShape;
import com.gr4vy.sdk.utils.Utils.TypeReferenceWithShape;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;

/**
 * TransactionCreatePaymentMethod
 * 
 * <p>The optional payment method to use for this transaction. This field is required if no `gift_cards` have been added.
 */
@JsonDeserialize(using = TransactionCreatePaymentMethod._Deserializer.class)
public class TransactionCreatePaymentMethod {

    @JsonValue
    private TypedObject value;
    
    private TransactionCreatePaymentMethod(TypedObject value) {
        this.value = value;
    }

    public static TransactionCreatePaymentMethod of(CardWithUrlPaymentMethodCreate value) {
        Utils.checkNotNull(value, "value");
        return new TransactionCreatePaymentMethod(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<CardWithUrlPaymentMethodCreate>(){}));
    }

    public static TransactionCreatePaymentMethod of(RedirectPaymentMethodCreate value) {
        Utils.checkNotNull(value, "value");
        return new TransactionCreatePaymentMethod(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<RedirectPaymentMethodCreate>(){}));
    }

    public static TransactionCreatePaymentMethod of(TokenPaymentMethodCreate value) {
        Utils.checkNotNull(value, "value");
        return new TransactionCreatePaymentMethod(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<TokenPaymentMethodCreate>(){}));
    }

    public static TransactionCreatePaymentMethod of(ApplePayPaymentMethodCreate value) {
        Utils.checkNotNull(value, "value");
        return new TransactionCreatePaymentMethod(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<ApplePayPaymentMethodCreate>(){}));
    }

    public static TransactionCreatePaymentMethod of(ClickToPayPaymentMethodCreate value) {
        Utils.checkNotNull(value, "value");
        return new TransactionCreatePaymentMethod(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<ClickToPayPaymentMethodCreate>(){}));
    }

    public static TransactionCreatePaymentMethod of(ClickToPayFPANPaymentMethodCreate value) {
        Utils.checkNotNull(value, "value");
        return new TransactionCreatePaymentMethod(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<ClickToPayFPANPaymentMethodCreate>(){}));
    }

    public static TransactionCreatePaymentMethod of(GooglePayPaymentMethodCreate value) {
        Utils.checkNotNull(value, "value");
        return new TransactionCreatePaymentMethod(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<GooglePayPaymentMethodCreate>(){}));
    }

    public static TransactionCreatePaymentMethod of(GooglePayFPANPaymentMethodCreate value) {
        Utils.checkNotNull(value, "value");
        return new TransactionCreatePaymentMethod(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<GooglePayFPANPaymentMethodCreate>(){}));
    }

    public static TransactionCreatePaymentMethod of(NetworkTokenPaymentMethodCreate value) {
        Utils.checkNotNull(value, "value");
        return new TransactionCreatePaymentMethod(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<NetworkTokenPaymentMethodCreate>(){}));
    }

    public static TransactionCreatePaymentMethod of(CheckoutSessionWithUrlPaymentMethodCreate value) {
        Utils.checkNotNull(value, "value");
        return new TransactionCreatePaymentMethod(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<CheckoutSessionWithUrlPaymentMethodCreate>(){}));
    }
    
    /**
     * Returns an instance of one of these types:
     * <ul>
     * <li>{@code com.gr4vy.sdk.models.components.CardWithUrlPaymentMethodCreate}</li>
     * <li>{@code com.gr4vy.sdk.models.components.RedirectPaymentMethodCreate}</li>
     * <li>{@code com.gr4vy.sdk.models.components.TokenPaymentMethodCreate}</li>
     * <li>{@code com.gr4vy.sdk.models.components.ApplePayPaymentMethodCreate}</li>
     * <li>{@code com.gr4vy.sdk.models.components.ClickToPayPaymentMethodCreate}</li>
     * <li>{@code com.gr4vy.sdk.models.components.ClickToPayFPANPaymentMethodCreate}</li>
     * <li>{@code com.gr4vy.sdk.models.components.GooglePayPaymentMethodCreate}</li>
     * <li>{@code com.gr4vy.sdk.models.components.GooglePayFPANPaymentMethodCreate}</li>
     * <li>{@code com.gr4vy.sdk.models.components.NetworkTokenPaymentMethodCreate}</li>
     * <li>{@code com.gr4vy.sdk.models.components.CheckoutSessionWithUrlPaymentMethodCreate}</li>
     * </ul>
     * 
     * <p>Use {@code instanceof} to determine what type is returned. For example:
     * 
     * <pre>
     * if (obj.value() instanceof String) {
     *     String answer = (String) obj.value();
     *     System.out.println("answer=" + answer);
     * }
     * </pre>
     * 
     * @return value of oneOf type
     **/ 
    public java.lang.Object value() {
        return value.value();
    }    
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TransactionCreatePaymentMethod other = (TransactionCreatePaymentMethod) o;
        return Objects.deepEquals(this.value.value(), other.value.value()); 
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(value.value());
    }
    
    @SuppressWarnings("serial")
    public static final class _Deserializer extends OneOfDeserializer<TransactionCreatePaymentMethod> {

        public _Deserializer() {
            super(TransactionCreatePaymentMethod.class, false,
                  TypeReferenceWithShape.of(new TypeReference<NetworkTokenPaymentMethodCreate>() {}, JsonShape.DEFAULT),
                  TypeReferenceWithShape.of(new TypeReference<GooglePayPaymentMethodCreate>() {}, JsonShape.DEFAULT),
                  TypeReferenceWithShape.of(new TypeReference<GooglePayFPANPaymentMethodCreate>() {}, JsonShape.DEFAULT),
                  TypeReferenceWithShape.of(new TypeReference<ClickToPayFPANPaymentMethodCreate>() {}, JsonShape.DEFAULT),
                  TypeReferenceWithShape.of(new TypeReference<ApplePayPaymentMethodCreate>() {}, JsonShape.DEFAULT),
                  TypeReferenceWithShape.of(new TypeReference<CardWithUrlPaymentMethodCreate>() {}, JsonShape.DEFAULT),
                  TypeReferenceWithShape.of(new TypeReference<ClickToPayPaymentMethodCreate>() {}, JsonShape.DEFAULT),
                  TypeReferenceWithShape.of(new TypeReference<RedirectPaymentMethodCreate>() {}, JsonShape.DEFAULT),
                  TypeReferenceWithShape.of(new TypeReference<CheckoutSessionWithUrlPaymentMethodCreate>() {}, JsonShape.DEFAULT),
                  TypeReferenceWithShape.of(new TypeReference<TokenPaymentMethodCreate>() {}, JsonShape.DEFAULT));
        }
    }
    
    @Override
    public String toString() {
        return Utils.toString(TransactionCreatePaymentMethod.class,
                "value", value);
    }
 
}

