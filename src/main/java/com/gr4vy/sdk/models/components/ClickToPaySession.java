/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

public class ClickToPaySession {

    /**
     * The ID of the Click to Pay application.
     */
    @JsonProperty("digital_payment_application_id")
    private String digitalPaymentApplicationId;

    /**
     * The merchant name as configured ont he the Click to Pay wallet.
     */
    @JsonProperty("digital_payment_application_name")
    private String digitalPaymentApplicationName;

    @JsonCreator
    public ClickToPaySession(
            @JsonProperty("digital_payment_application_id") String digitalPaymentApplicationId,
            @JsonProperty("digital_payment_application_name") String digitalPaymentApplicationName) {
        Utils.checkNotNull(digitalPaymentApplicationId, "digitalPaymentApplicationId");
        Utils.checkNotNull(digitalPaymentApplicationName, "digitalPaymentApplicationName");
        this.digitalPaymentApplicationId = digitalPaymentApplicationId;
        this.digitalPaymentApplicationName = digitalPaymentApplicationName;
    }

    /**
     * The ID of the Click to Pay application.
     */
    @JsonIgnore
    public String digitalPaymentApplicationId() {
        return digitalPaymentApplicationId;
    }

    /**
     * The merchant name as configured ont he the Click to Pay wallet.
     */
    @JsonIgnore
    public String digitalPaymentApplicationName() {
        return digitalPaymentApplicationName;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The ID of the Click to Pay application.
     */
    public ClickToPaySession withDigitalPaymentApplicationId(String digitalPaymentApplicationId) {
        Utils.checkNotNull(digitalPaymentApplicationId, "digitalPaymentApplicationId");
        this.digitalPaymentApplicationId = digitalPaymentApplicationId;
        return this;
    }

    /**
     * The merchant name as configured ont he the Click to Pay wallet.
     */
    public ClickToPaySession withDigitalPaymentApplicationName(String digitalPaymentApplicationName) {
        Utils.checkNotNull(digitalPaymentApplicationName, "digitalPaymentApplicationName");
        this.digitalPaymentApplicationName = digitalPaymentApplicationName;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ClickToPaySession other = (ClickToPaySession) o;
        return 
            Objects.deepEquals(this.digitalPaymentApplicationId, other.digitalPaymentApplicationId) &&
            Objects.deepEquals(this.digitalPaymentApplicationName, other.digitalPaymentApplicationName);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            digitalPaymentApplicationId,
            digitalPaymentApplicationName);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ClickToPaySession.class,
                "digitalPaymentApplicationId", digitalPaymentApplicationId,
                "digitalPaymentApplicationName", digitalPaymentApplicationName);
    }
    
    public final static class Builder {
 
        private String digitalPaymentApplicationId;
 
        private String digitalPaymentApplicationName;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The ID of the Click to Pay application.
         */
        public Builder digitalPaymentApplicationId(String digitalPaymentApplicationId) {
            Utils.checkNotNull(digitalPaymentApplicationId, "digitalPaymentApplicationId");
            this.digitalPaymentApplicationId = digitalPaymentApplicationId;
            return this;
        }

        /**
         * The merchant name as configured ont he the Click to Pay wallet.
         */
        public Builder digitalPaymentApplicationName(String digitalPaymentApplicationName) {
            Utils.checkNotNull(digitalPaymentApplicationName, "digitalPaymentApplicationName");
            this.digitalPaymentApplicationName = digitalPaymentApplicationName;
            return this;
        }
        
        public ClickToPaySession build() {
            return new ClickToPaySession(
                digitalPaymentApplicationId,
                digitalPaymentApplicationName);
        }
    }
}
