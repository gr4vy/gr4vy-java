/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Boolean;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import org.openapitools.jackson.nullable.JsonNullable;


public class FiservInstallmentOptions {
    /**
     * Passes the `order.installmentOptions.numberOfInstallments` field to the Fiserv API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numberOfInstallments")
    private JsonNullable<Long> numberOfInstallments;

    /**
     * Passes the `order.installmentOptions.installmentsInterest` field to the Fiserv API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("installmentsInterest")
    private JsonNullable<Boolean> installmentsInterest;

    /**
     * Passes the `order.installmentOptions.installmentDelayMonths` field to the Fiserv API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("installmentDelayMonths")
    private JsonNullable<Long> installmentDelayMonths;

    /**
     * Passes the `order.installmentOptions.merchantAdviceCodeSupported` field to the Fiserv API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantAdviceCodeSupported")
    private JsonNullable<Boolean> merchantAdviceCodeSupported;

    @JsonCreator
    public FiservInstallmentOptions(
            @JsonProperty("numberOfInstallments") JsonNullable<Long> numberOfInstallments,
            @JsonProperty("installmentsInterest") JsonNullable<Boolean> installmentsInterest,
            @JsonProperty("installmentDelayMonths") JsonNullable<Long> installmentDelayMonths,
            @JsonProperty("merchantAdviceCodeSupported") JsonNullable<Boolean> merchantAdviceCodeSupported) {
        Utils.checkNotNull(numberOfInstallments, "numberOfInstallments");
        Utils.checkNotNull(installmentsInterest, "installmentsInterest");
        Utils.checkNotNull(installmentDelayMonths, "installmentDelayMonths");
        Utils.checkNotNull(merchantAdviceCodeSupported, "merchantAdviceCodeSupported");
        this.numberOfInstallments = numberOfInstallments;
        this.installmentsInterest = installmentsInterest;
        this.installmentDelayMonths = installmentDelayMonths;
        this.merchantAdviceCodeSupported = merchantAdviceCodeSupported;
    }
    
    public FiservInstallmentOptions() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined());
    }

    /**
     * Passes the `order.installmentOptions.numberOfInstallments` field to the Fiserv API.
     */
    @JsonIgnore
    public JsonNullable<Long> numberOfInstallments() {
        return numberOfInstallments;
    }

    /**
     * Passes the `order.installmentOptions.installmentsInterest` field to the Fiserv API.
     */
    @JsonIgnore
    public JsonNullable<Boolean> installmentsInterest() {
        return installmentsInterest;
    }

    /**
     * Passes the `order.installmentOptions.installmentDelayMonths` field to the Fiserv API.
     */
    @JsonIgnore
    public JsonNullable<Long> installmentDelayMonths() {
        return installmentDelayMonths;
    }

    /**
     * Passes the `order.installmentOptions.merchantAdviceCodeSupported` field to the Fiserv API.
     */
    @JsonIgnore
    public JsonNullable<Boolean> merchantAdviceCodeSupported() {
        return merchantAdviceCodeSupported;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Passes the `order.installmentOptions.numberOfInstallments` field to the Fiserv API.
     */
    public FiservInstallmentOptions withNumberOfInstallments(long numberOfInstallments) {
        Utils.checkNotNull(numberOfInstallments, "numberOfInstallments");
        this.numberOfInstallments = JsonNullable.of(numberOfInstallments);
        return this;
    }

    /**
     * Passes the `order.installmentOptions.numberOfInstallments` field to the Fiserv API.
     */
    public FiservInstallmentOptions withNumberOfInstallments(JsonNullable<Long> numberOfInstallments) {
        Utils.checkNotNull(numberOfInstallments, "numberOfInstallments");
        this.numberOfInstallments = numberOfInstallments;
        return this;
    }

    /**
     * Passes the `order.installmentOptions.installmentsInterest` field to the Fiserv API.
     */
    public FiservInstallmentOptions withInstallmentsInterest(boolean installmentsInterest) {
        Utils.checkNotNull(installmentsInterest, "installmentsInterest");
        this.installmentsInterest = JsonNullable.of(installmentsInterest);
        return this;
    }

    /**
     * Passes the `order.installmentOptions.installmentsInterest` field to the Fiserv API.
     */
    public FiservInstallmentOptions withInstallmentsInterest(JsonNullable<Boolean> installmentsInterest) {
        Utils.checkNotNull(installmentsInterest, "installmentsInterest");
        this.installmentsInterest = installmentsInterest;
        return this;
    }

    /**
     * Passes the `order.installmentOptions.installmentDelayMonths` field to the Fiserv API.
     */
    public FiservInstallmentOptions withInstallmentDelayMonths(long installmentDelayMonths) {
        Utils.checkNotNull(installmentDelayMonths, "installmentDelayMonths");
        this.installmentDelayMonths = JsonNullable.of(installmentDelayMonths);
        return this;
    }

    /**
     * Passes the `order.installmentOptions.installmentDelayMonths` field to the Fiserv API.
     */
    public FiservInstallmentOptions withInstallmentDelayMonths(JsonNullable<Long> installmentDelayMonths) {
        Utils.checkNotNull(installmentDelayMonths, "installmentDelayMonths");
        this.installmentDelayMonths = installmentDelayMonths;
        return this;
    }

    /**
     * Passes the `order.installmentOptions.merchantAdviceCodeSupported` field to the Fiserv API.
     */
    public FiservInstallmentOptions withMerchantAdviceCodeSupported(boolean merchantAdviceCodeSupported) {
        Utils.checkNotNull(merchantAdviceCodeSupported, "merchantAdviceCodeSupported");
        this.merchantAdviceCodeSupported = JsonNullable.of(merchantAdviceCodeSupported);
        return this;
    }

    /**
     * Passes the `order.installmentOptions.merchantAdviceCodeSupported` field to the Fiserv API.
     */
    public FiservInstallmentOptions withMerchantAdviceCodeSupported(JsonNullable<Boolean> merchantAdviceCodeSupported) {
        Utils.checkNotNull(merchantAdviceCodeSupported, "merchantAdviceCodeSupported");
        this.merchantAdviceCodeSupported = merchantAdviceCodeSupported;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FiservInstallmentOptions other = (FiservInstallmentOptions) o;
        return 
            Utils.enhancedDeepEquals(this.numberOfInstallments, other.numberOfInstallments) &&
            Utils.enhancedDeepEquals(this.installmentsInterest, other.installmentsInterest) &&
            Utils.enhancedDeepEquals(this.installmentDelayMonths, other.installmentDelayMonths) &&
            Utils.enhancedDeepEquals(this.merchantAdviceCodeSupported, other.merchantAdviceCodeSupported);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            numberOfInstallments, installmentsInterest, installmentDelayMonths,
            merchantAdviceCodeSupported);
    }
    
    @Override
    public String toString() {
        return Utils.toString(FiservInstallmentOptions.class,
                "numberOfInstallments", numberOfInstallments,
                "installmentsInterest", installmentsInterest,
                "installmentDelayMonths", installmentDelayMonths,
                "merchantAdviceCodeSupported", merchantAdviceCodeSupported);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<Long> numberOfInstallments = JsonNullable.undefined();

        private JsonNullable<Boolean> installmentsInterest = JsonNullable.undefined();

        private JsonNullable<Long> installmentDelayMonths = JsonNullable.undefined();

        private JsonNullable<Boolean> merchantAdviceCodeSupported = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Passes the `order.installmentOptions.numberOfInstallments` field to the Fiserv API.
         */
        public Builder numberOfInstallments(long numberOfInstallments) {
            Utils.checkNotNull(numberOfInstallments, "numberOfInstallments");
            this.numberOfInstallments = JsonNullable.of(numberOfInstallments);
            return this;
        }

        /**
         * Passes the `order.installmentOptions.numberOfInstallments` field to the Fiserv API.
         */
        public Builder numberOfInstallments(JsonNullable<Long> numberOfInstallments) {
            Utils.checkNotNull(numberOfInstallments, "numberOfInstallments");
            this.numberOfInstallments = numberOfInstallments;
            return this;
        }


        /**
         * Passes the `order.installmentOptions.installmentsInterest` field to the Fiserv API.
         */
        public Builder installmentsInterest(boolean installmentsInterest) {
            Utils.checkNotNull(installmentsInterest, "installmentsInterest");
            this.installmentsInterest = JsonNullable.of(installmentsInterest);
            return this;
        }

        /**
         * Passes the `order.installmentOptions.installmentsInterest` field to the Fiserv API.
         */
        public Builder installmentsInterest(JsonNullable<Boolean> installmentsInterest) {
            Utils.checkNotNull(installmentsInterest, "installmentsInterest");
            this.installmentsInterest = installmentsInterest;
            return this;
        }


        /**
         * Passes the `order.installmentOptions.installmentDelayMonths` field to the Fiserv API.
         */
        public Builder installmentDelayMonths(long installmentDelayMonths) {
            Utils.checkNotNull(installmentDelayMonths, "installmentDelayMonths");
            this.installmentDelayMonths = JsonNullable.of(installmentDelayMonths);
            return this;
        }

        /**
         * Passes the `order.installmentOptions.installmentDelayMonths` field to the Fiserv API.
         */
        public Builder installmentDelayMonths(JsonNullable<Long> installmentDelayMonths) {
            Utils.checkNotNull(installmentDelayMonths, "installmentDelayMonths");
            this.installmentDelayMonths = installmentDelayMonths;
            return this;
        }


        /**
         * Passes the `order.installmentOptions.merchantAdviceCodeSupported` field to the Fiserv API.
         */
        public Builder merchantAdviceCodeSupported(boolean merchantAdviceCodeSupported) {
            Utils.checkNotNull(merchantAdviceCodeSupported, "merchantAdviceCodeSupported");
            this.merchantAdviceCodeSupported = JsonNullable.of(merchantAdviceCodeSupported);
            return this;
        }

        /**
         * Passes the `order.installmentOptions.merchantAdviceCodeSupported` field to the Fiserv API.
         */
        public Builder merchantAdviceCodeSupported(JsonNullable<Boolean> merchantAdviceCodeSupported) {
            Utils.checkNotNull(merchantAdviceCodeSupported, "merchantAdviceCodeSupported");
            this.merchantAdviceCodeSupported = merchantAdviceCodeSupported;
            return this;
        }

        public FiservInstallmentOptions build() {

            return new FiservInstallmentOptions(
                numberOfInstallments, installmentsInterest, installmentDelayMonths,
                merchantAdviceCodeSupported);
        }

    }
}
