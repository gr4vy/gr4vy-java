/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import org.openapitools.jackson.nullable.JsonNullable;


public class DlocalOptions {
    /**
     * Passes `wallet` data to the dLocal API for those connectors that need it.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wallet")
    private JsonNullable<? extends DlocalWalletOptions> wallet;

    @JsonCreator
    public DlocalOptions(
            @JsonProperty("wallet") JsonNullable<? extends DlocalWalletOptions> wallet) {
        Utils.checkNotNull(wallet, "wallet");
        this.wallet = wallet;
    }
    
    public DlocalOptions() {
        this(JsonNullable.undefined());
    }

    /**
     * Passes `wallet` data to the dLocal API for those connectors that need it.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<DlocalWalletOptions> wallet() {
        return (JsonNullable<DlocalWalletOptions>) wallet;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Passes `wallet` data to the dLocal API for those connectors that need it.
     */
    public DlocalOptions withWallet(DlocalWalletOptions wallet) {
        Utils.checkNotNull(wallet, "wallet");
        this.wallet = JsonNullable.of(wallet);
        return this;
    }

    /**
     * Passes `wallet` data to the dLocal API for those connectors that need it.
     */
    public DlocalOptions withWallet(JsonNullable<? extends DlocalWalletOptions> wallet) {
        Utils.checkNotNull(wallet, "wallet");
        this.wallet = wallet;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DlocalOptions other = (DlocalOptions) o;
        return 
            Utils.enhancedDeepEquals(this.wallet, other.wallet);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            wallet);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DlocalOptions.class,
                "wallet", wallet);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<? extends DlocalWalletOptions> wallet = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Passes `wallet` data to the dLocal API for those connectors that need it.
         */
        public Builder wallet(DlocalWalletOptions wallet) {
            Utils.checkNotNull(wallet, "wallet");
            this.wallet = JsonNullable.of(wallet);
            return this;
        }

        /**
         * Passes `wallet` data to the dLocal API for those connectors that need it.
         */
        public Builder wallet(JsonNullable<? extends DlocalWalletOptions> wallet) {
            Utils.checkNotNull(wallet, "wallet");
            this.wallet = wallet;
            return this;
        }

        public DlocalOptions build() {

            return new DlocalOptions(
                wallet);
        }

    }
}
