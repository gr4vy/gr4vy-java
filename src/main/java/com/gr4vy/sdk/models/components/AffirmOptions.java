/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;


public class AffirmOptions {
    /**
     * Passes additional discounts to the Affirm widget.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("discounts")
    private JsonNullable<? extends Map<String, Map<String, Object>>> discounts;

    /**
     * Passes itinerary data to the Affirm API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itinerary")
    private JsonNullable<? extends AffirmItineraryOptions> itinerary;

    @JsonCreator
    public AffirmOptions(
            @JsonProperty("discounts") JsonNullable<? extends Map<String, Map<String, Object>>> discounts,
            @JsonProperty("itinerary") JsonNullable<? extends AffirmItineraryOptions> itinerary) {
        Utils.checkNotNull(discounts, "discounts");
        Utils.checkNotNull(itinerary, "itinerary");
        this.discounts = discounts;
        this.itinerary = itinerary;
    }
    
    public AffirmOptions() {
        this(JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * Passes additional discounts to the Affirm widget.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Map<String, Map<String, Object>>> discounts() {
        return (JsonNullable<Map<String, Map<String, Object>>>) discounts;
    }

    /**
     * Passes itinerary data to the Affirm API.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AffirmItineraryOptions> itinerary() {
        return (JsonNullable<AffirmItineraryOptions>) itinerary;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Passes additional discounts to the Affirm widget.
     */
    public AffirmOptions withDiscounts(Map<String, Map<String, Object>> discounts) {
        Utils.checkNotNull(discounts, "discounts");
        this.discounts = JsonNullable.of(discounts);
        return this;
    }

    /**
     * Passes additional discounts to the Affirm widget.
     */
    public AffirmOptions withDiscounts(JsonNullable<? extends Map<String, Map<String, Object>>> discounts) {
        Utils.checkNotNull(discounts, "discounts");
        this.discounts = discounts;
        return this;
    }

    /**
     * Passes itinerary data to the Affirm API.
     */
    public AffirmOptions withItinerary(AffirmItineraryOptions itinerary) {
        Utils.checkNotNull(itinerary, "itinerary");
        this.itinerary = JsonNullable.of(itinerary);
        return this;
    }

    /**
     * Passes itinerary data to the Affirm API.
     */
    public AffirmOptions withItinerary(JsonNullable<? extends AffirmItineraryOptions> itinerary) {
        Utils.checkNotNull(itinerary, "itinerary");
        this.itinerary = itinerary;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AffirmOptions other = (AffirmOptions) o;
        return 
            Utils.enhancedDeepEquals(this.discounts, other.discounts) &&
            Utils.enhancedDeepEquals(this.itinerary, other.itinerary);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            discounts, itinerary);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AffirmOptions.class,
                "discounts", discounts,
                "itinerary", itinerary);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<? extends Map<String, Map<String, Object>>> discounts = JsonNullable.undefined();

        private JsonNullable<? extends AffirmItineraryOptions> itinerary = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Passes additional discounts to the Affirm widget.
         */
        public Builder discounts(Map<String, Map<String, Object>> discounts) {
            Utils.checkNotNull(discounts, "discounts");
            this.discounts = JsonNullable.of(discounts);
            return this;
        }

        /**
         * Passes additional discounts to the Affirm widget.
         */
        public Builder discounts(JsonNullable<? extends Map<String, Map<String, Object>>> discounts) {
            Utils.checkNotNull(discounts, "discounts");
            this.discounts = discounts;
            return this;
        }


        /**
         * Passes itinerary data to the Affirm API.
         */
        public Builder itinerary(AffirmItineraryOptions itinerary) {
            Utils.checkNotNull(itinerary, "itinerary");
            this.itinerary = JsonNullable.of(itinerary);
            return this;
        }

        /**
         * Passes itinerary data to the Affirm API.
         */
        public Builder itinerary(JsonNullable<? extends AffirmItineraryOptions> itinerary) {
            Utils.checkNotNull(itinerary, "itinerary");
            this.itinerary = itinerary;
            return this;
        }

        public AffirmOptions build() {

            return new AffirmOptions(
                discounts, itinerary);
        }

    }
}
