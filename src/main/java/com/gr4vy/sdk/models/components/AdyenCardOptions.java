/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Boolean;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;


public class AdyenCardOptions {
    /**
     * Set to `true` to enable Auto Rescue for a transaction. Use the `maxDaysToRescue` to specify a rescue
     * window.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoRescue")
    private JsonNullable<Boolean> autoRescue;

    /**
     * The rescue window for a transaction, in days, when `autoRescue` is set to `true`. You can specify a
     * value between 1 and 48. For cards, the default is one calendar month.
     * 
     * <p>For SEPA, the default is 42 days.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxDaysToRescue")
    private JsonNullable<Long> maxDaysToRescue;

    /**
     * Passes additional data to the Adyen API when creating a transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalData")
    private JsonNullable<? extends Map<String, String>> additionalData;

    /**
     * The rescue scenario to simulate for a transaction, when `autoRescue` is set to `true`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoRescueScenario")
    private JsonNullable<? extends AdyenCardAutoRescueScenariosEnum> autoRescueScenario;

    /**
     * The origin of the window where the payment is initiated, used for 3D Secure authentication.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("window_origin")
    private JsonNullable<String> windowOrigin;

    /**
     * Passes information of splitting payment amounts to the Adyen API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("splits")
    private JsonNullable<? extends AdyenSplitsOptions> splits;

    @JsonCreator
    public AdyenCardOptions(
            @JsonProperty("autoRescue") JsonNullable<Boolean> autoRescue,
            @JsonProperty("maxDaysToRescue") JsonNullable<Long> maxDaysToRescue,
            @JsonProperty("additionalData") JsonNullable<? extends Map<String, String>> additionalData,
            @JsonProperty("autoRescueScenario") JsonNullable<? extends AdyenCardAutoRescueScenariosEnum> autoRescueScenario,
            @JsonProperty("window_origin") JsonNullable<String> windowOrigin,
            @JsonProperty("splits") JsonNullable<? extends AdyenSplitsOptions> splits) {
        Utils.checkNotNull(autoRescue, "autoRescue");
        Utils.checkNotNull(maxDaysToRescue, "maxDaysToRescue");
        Utils.checkNotNull(additionalData, "additionalData");
        Utils.checkNotNull(autoRescueScenario, "autoRescueScenario");
        Utils.checkNotNull(windowOrigin, "windowOrigin");
        Utils.checkNotNull(splits, "splits");
        this.autoRescue = autoRescue;
        this.maxDaysToRescue = maxDaysToRescue;
        this.additionalData = additionalData;
        this.autoRescueScenario = autoRescueScenario;
        this.windowOrigin = windowOrigin;
        this.splits = splits;
    }
    
    public AdyenCardOptions() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * Set to `true` to enable Auto Rescue for a transaction. Use the `maxDaysToRescue` to specify a rescue
     * window.
     */
    @JsonIgnore
    public JsonNullable<Boolean> autoRescue() {
        return autoRescue;
    }

    /**
     * The rescue window for a transaction, in days, when `autoRescue` is set to `true`. You can specify a
     * value between 1 and 48. For cards, the default is one calendar month.
     * 
     * <p>For SEPA, the default is 42 days.
     */
    @JsonIgnore
    public JsonNullable<Long> maxDaysToRescue() {
        return maxDaysToRescue;
    }

    /**
     * Passes additional data to the Adyen API when creating a transaction.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Map<String, String>> additionalData() {
        return (JsonNullable<Map<String, String>>) additionalData;
    }

    /**
     * The rescue scenario to simulate for a transaction, when `autoRescue` is set to `true`.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AdyenCardAutoRescueScenariosEnum> autoRescueScenario() {
        return (JsonNullable<AdyenCardAutoRescueScenariosEnum>) autoRescueScenario;
    }

    /**
     * The origin of the window where the payment is initiated, used for 3D Secure authentication.
     */
    @JsonIgnore
    public JsonNullable<String> windowOrigin() {
        return windowOrigin;
    }

    /**
     * Passes information of splitting payment amounts to the Adyen API.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AdyenSplitsOptions> splits() {
        return (JsonNullable<AdyenSplitsOptions>) splits;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Set to `true` to enable Auto Rescue for a transaction. Use the `maxDaysToRescue` to specify a rescue
     * window.
     */
    public AdyenCardOptions withAutoRescue(boolean autoRescue) {
        Utils.checkNotNull(autoRescue, "autoRescue");
        this.autoRescue = JsonNullable.of(autoRescue);
        return this;
    }

    /**
     * Set to `true` to enable Auto Rescue for a transaction. Use the `maxDaysToRescue` to specify a rescue
     * window.
     */
    public AdyenCardOptions withAutoRescue(JsonNullable<Boolean> autoRescue) {
        Utils.checkNotNull(autoRescue, "autoRescue");
        this.autoRescue = autoRescue;
        return this;
    }

    /**
     * The rescue window for a transaction, in days, when `autoRescue` is set to `true`. You can specify a
     * value between 1 and 48. For cards, the default is one calendar month.
     * 
     * <p>For SEPA, the default is 42 days.
     */
    public AdyenCardOptions withMaxDaysToRescue(long maxDaysToRescue) {
        Utils.checkNotNull(maxDaysToRescue, "maxDaysToRescue");
        this.maxDaysToRescue = JsonNullable.of(maxDaysToRescue);
        return this;
    }

    /**
     * The rescue window for a transaction, in days, when `autoRescue` is set to `true`. You can specify a
     * value between 1 and 48. For cards, the default is one calendar month.
     * 
     * <p>For SEPA, the default is 42 days.
     */
    public AdyenCardOptions withMaxDaysToRescue(JsonNullable<Long> maxDaysToRescue) {
        Utils.checkNotNull(maxDaysToRescue, "maxDaysToRescue");
        this.maxDaysToRescue = maxDaysToRescue;
        return this;
    }

    /**
     * Passes additional data to the Adyen API when creating a transaction.
     */
    public AdyenCardOptions withAdditionalData(Map<String, String> additionalData) {
        Utils.checkNotNull(additionalData, "additionalData");
        this.additionalData = JsonNullable.of(additionalData);
        return this;
    }

    /**
     * Passes additional data to the Adyen API when creating a transaction.
     */
    public AdyenCardOptions withAdditionalData(JsonNullable<? extends Map<String, String>> additionalData) {
        Utils.checkNotNull(additionalData, "additionalData");
        this.additionalData = additionalData;
        return this;
    }

    /**
     * The rescue scenario to simulate for a transaction, when `autoRescue` is set to `true`.
     */
    public AdyenCardOptions withAutoRescueScenario(AdyenCardAutoRescueScenariosEnum autoRescueScenario) {
        Utils.checkNotNull(autoRescueScenario, "autoRescueScenario");
        this.autoRescueScenario = JsonNullable.of(autoRescueScenario);
        return this;
    }

    /**
     * The rescue scenario to simulate for a transaction, when `autoRescue` is set to `true`.
     */
    public AdyenCardOptions withAutoRescueScenario(JsonNullable<? extends AdyenCardAutoRescueScenariosEnum> autoRescueScenario) {
        Utils.checkNotNull(autoRescueScenario, "autoRescueScenario");
        this.autoRescueScenario = autoRescueScenario;
        return this;
    }

    /**
     * The origin of the window where the payment is initiated, used for 3D Secure authentication.
     */
    public AdyenCardOptions withWindowOrigin(String windowOrigin) {
        Utils.checkNotNull(windowOrigin, "windowOrigin");
        this.windowOrigin = JsonNullable.of(windowOrigin);
        return this;
    }

    /**
     * The origin of the window where the payment is initiated, used for 3D Secure authentication.
     */
    public AdyenCardOptions withWindowOrigin(JsonNullable<String> windowOrigin) {
        Utils.checkNotNull(windowOrigin, "windowOrigin");
        this.windowOrigin = windowOrigin;
        return this;
    }

    /**
     * Passes information of splitting payment amounts to the Adyen API.
     */
    public AdyenCardOptions withSplits(AdyenSplitsOptions splits) {
        Utils.checkNotNull(splits, "splits");
        this.splits = JsonNullable.of(splits);
        return this;
    }

    /**
     * Passes information of splitting payment amounts to the Adyen API.
     */
    public AdyenCardOptions withSplits(JsonNullable<? extends AdyenSplitsOptions> splits) {
        Utils.checkNotNull(splits, "splits");
        this.splits = splits;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AdyenCardOptions other = (AdyenCardOptions) o;
        return 
            Utils.enhancedDeepEquals(this.autoRescue, other.autoRescue) &&
            Utils.enhancedDeepEquals(this.maxDaysToRescue, other.maxDaysToRescue) &&
            Utils.enhancedDeepEquals(this.additionalData, other.additionalData) &&
            Utils.enhancedDeepEquals(this.autoRescueScenario, other.autoRescueScenario) &&
            Utils.enhancedDeepEquals(this.windowOrigin, other.windowOrigin) &&
            Utils.enhancedDeepEquals(this.splits, other.splits);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            autoRescue, maxDaysToRescue, additionalData,
            autoRescueScenario, windowOrigin, splits);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AdyenCardOptions.class,
                "autoRescue", autoRescue,
                "maxDaysToRescue", maxDaysToRescue,
                "additionalData", additionalData,
                "autoRescueScenario", autoRescueScenario,
                "windowOrigin", windowOrigin,
                "splits", splits);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<Boolean> autoRescue = JsonNullable.undefined();

        private JsonNullable<Long> maxDaysToRescue = JsonNullable.undefined();

        private JsonNullable<? extends Map<String, String>> additionalData = JsonNullable.undefined();

        private JsonNullable<? extends AdyenCardAutoRescueScenariosEnum> autoRescueScenario = JsonNullable.undefined();

        private JsonNullable<String> windowOrigin = JsonNullable.undefined();

        private JsonNullable<? extends AdyenSplitsOptions> splits = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Set to `true` to enable Auto Rescue for a transaction. Use the `maxDaysToRescue` to specify a rescue
         * window.
         */
        public Builder autoRescue(boolean autoRescue) {
            Utils.checkNotNull(autoRescue, "autoRescue");
            this.autoRescue = JsonNullable.of(autoRescue);
            return this;
        }

        /**
         * Set to `true` to enable Auto Rescue for a transaction. Use the `maxDaysToRescue` to specify a rescue
         * window.
         */
        public Builder autoRescue(JsonNullable<Boolean> autoRescue) {
            Utils.checkNotNull(autoRescue, "autoRescue");
            this.autoRescue = autoRescue;
            return this;
        }


        /**
         * The rescue window for a transaction, in days, when `autoRescue` is set to `true`. You can specify a
         * value between 1 and 48. For cards, the default is one calendar month.
         * 
         * <p>For SEPA, the default is 42 days.
         */
        public Builder maxDaysToRescue(long maxDaysToRescue) {
            Utils.checkNotNull(maxDaysToRescue, "maxDaysToRescue");
            this.maxDaysToRescue = JsonNullable.of(maxDaysToRescue);
            return this;
        }

        /**
         * The rescue window for a transaction, in days, when `autoRescue` is set to `true`. You can specify a
         * value between 1 and 48. For cards, the default is one calendar month.
         * 
         * <p>For SEPA, the default is 42 days.
         */
        public Builder maxDaysToRescue(JsonNullable<Long> maxDaysToRescue) {
            Utils.checkNotNull(maxDaysToRescue, "maxDaysToRescue");
            this.maxDaysToRescue = maxDaysToRescue;
            return this;
        }


        /**
         * Passes additional data to the Adyen API when creating a transaction.
         */
        public Builder additionalData(Map<String, String> additionalData) {
            Utils.checkNotNull(additionalData, "additionalData");
            this.additionalData = JsonNullable.of(additionalData);
            return this;
        }

        /**
         * Passes additional data to the Adyen API when creating a transaction.
         */
        public Builder additionalData(JsonNullable<? extends Map<String, String>> additionalData) {
            Utils.checkNotNull(additionalData, "additionalData");
            this.additionalData = additionalData;
            return this;
        }


        /**
         * The rescue scenario to simulate for a transaction, when `autoRescue` is set to `true`.
         */
        public Builder autoRescueScenario(AdyenCardAutoRescueScenariosEnum autoRescueScenario) {
            Utils.checkNotNull(autoRescueScenario, "autoRescueScenario");
            this.autoRescueScenario = JsonNullable.of(autoRescueScenario);
            return this;
        }

        /**
         * The rescue scenario to simulate for a transaction, when `autoRescue` is set to `true`.
         */
        public Builder autoRescueScenario(JsonNullable<? extends AdyenCardAutoRescueScenariosEnum> autoRescueScenario) {
            Utils.checkNotNull(autoRescueScenario, "autoRescueScenario");
            this.autoRescueScenario = autoRescueScenario;
            return this;
        }


        /**
         * The origin of the window where the payment is initiated, used for 3D Secure authentication.
         */
        public Builder windowOrigin(String windowOrigin) {
            Utils.checkNotNull(windowOrigin, "windowOrigin");
            this.windowOrigin = JsonNullable.of(windowOrigin);
            return this;
        }

        /**
         * The origin of the window where the payment is initiated, used for 3D Secure authentication.
         */
        public Builder windowOrigin(JsonNullable<String> windowOrigin) {
            Utils.checkNotNull(windowOrigin, "windowOrigin");
            this.windowOrigin = windowOrigin;
            return this;
        }


        /**
         * Passes information of splitting payment amounts to the Adyen API.
         */
        public Builder splits(AdyenSplitsOptions splits) {
            Utils.checkNotNull(splits, "splits");
            this.splits = JsonNullable.of(splits);
            return this;
        }

        /**
         * Passes information of splitting payment amounts to the Adyen API.
         */
        public Builder splits(JsonNullable<? extends AdyenSplitsOptions> splits) {
            Utils.checkNotNull(splits, "splits");
            this.splits = splits;
            return this;
        }

        public AdyenCardOptions build() {

            return new AdyenCardOptions(
                autoRescue, maxDaysToRescue, additionalData,
                autoRescueScenario, windowOrigin, splits);
        }

    }
}
