/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import org.openapitools.jackson.nullable.JsonNullable;


public class OxxoOptions {
    /**
     * Defines a custom expiration time (unix time) after which Oxxo payment requests are cancelled
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payment_method_expires_at")
    private JsonNullable<Long> paymentMethodExpiresAt;

    /**
     * Approval URL that will receive a charge payment method reference.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("approval_url")
    private JsonNullable<String> approvalUrl;

    @JsonCreator
    public OxxoOptions(
            @JsonProperty("payment_method_expires_at") JsonNullable<Long> paymentMethodExpiresAt,
            @JsonProperty("approval_url") JsonNullable<String> approvalUrl) {
        Utils.checkNotNull(paymentMethodExpiresAt, "paymentMethodExpiresAt");
        Utils.checkNotNull(approvalUrl, "approvalUrl");
        this.paymentMethodExpiresAt = paymentMethodExpiresAt;
        this.approvalUrl = approvalUrl;
    }
    
    public OxxoOptions() {
        this(JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * Defines a custom expiration time (unix time) after which Oxxo payment requests are cancelled
     */
    @JsonIgnore
    public JsonNullable<Long> paymentMethodExpiresAt() {
        return paymentMethodExpiresAt;
    }

    /**
     * Approval URL that will receive a charge payment method reference.
     */
    @JsonIgnore
    public JsonNullable<String> approvalUrl() {
        return approvalUrl;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Defines a custom expiration time (unix time) after which Oxxo payment requests are cancelled
     */
    public OxxoOptions withPaymentMethodExpiresAt(long paymentMethodExpiresAt) {
        Utils.checkNotNull(paymentMethodExpiresAt, "paymentMethodExpiresAt");
        this.paymentMethodExpiresAt = JsonNullable.of(paymentMethodExpiresAt);
        return this;
    }

    /**
     * Defines a custom expiration time (unix time) after which Oxxo payment requests are cancelled
     */
    public OxxoOptions withPaymentMethodExpiresAt(JsonNullable<Long> paymentMethodExpiresAt) {
        Utils.checkNotNull(paymentMethodExpiresAt, "paymentMethodExpiresAt");
        this.paymentMethodExpiresAt = paymentMethodExpiresAt;
        return this;
    }

    /**
     * Approval URL that will receive a charge payment method reference.
     */
    public OxxoOptions withApprovalUrl(String approvalUrl) {
        Utils.checkNotNull(approvalUrl, "approvalUrl");
        this.approvalUrl = JsonNullable.of(approvalUrl);
        return this;
    }

    /**
     * Approval URL that will receive a charge payment method reference.
     */
    public OxxoOptions withApprovalUrl(JsonNullable<String> approvalUrl) {
        Utils.checkNotNull(approvalUrl, "approvalUrl");
        this.approvalUrl = approvalUrl;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OxxoOptions other = (OxxoOptions) o;
        return 
            Utils.enhancedDeepEquals(this.paymentMethodExpiresAt, other.paymentMethodExpiresAt) &&
            Utils.enhancedDeepEquals(this.approvalUrl, other.approvalUrl);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            paymentMethodExpiresAt, approvalUrl);
    }
    
    @Override
    public String toString() {
        return Utils.toString(OxxoOptions.class,
                "paymentMethodExpiresAt", paymentMethodExpiresAt,
                "approvalUrl", approvalUrl);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<Long> paymentMethodExpiresAt = JsonNullable.undefined();

        private JsonNullable<String> approvalUrl = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Defines a custom expiration time (unix time) after which Oxxo payment requests are cancelled
         */
        public Builder paymentMethodExpiresAt(long paymentMethodExpiresAt) {
            Utils.checkNotNull(paymentMethodExpiresAt, "paymentMethodExpiresAt");
            this.paymentMethodExpiresAt = JsonNullable.of(paymentMethodExpiresAt);
            return this;
        }

        /**
         * Defines a custom expiration time (unix time) after which Oxxo payment requests are cancelled
         */
        public Builder paymentMethodExpiresAt(JsonNullable<Long> paymentMethodExpiresAt) {
            Utils.checkNotNull(paymentMethodExpiresAt, "paymentMethodExpiresAt");
            this.paymentMethodExpiresAt = paymentMethodExpiresAt;
            return this;
        }


        /**
         * Approval URL that will receive a charge payment method reference.
         */
        public Builder approvalUrl(String approvalUrl) {
            Utils.checkNotNull(approvalUrl, "approvalUrl");
            this.approvalUrl = JsonNullable.of(approvalUrl);
            return this;
        }

        /**
         * Approval URL that will receive a charge payment method reference.
         */
        public Builder approvalUrl(JsonNullable<String> approvalUrl) {
            Utils.checkNotNull(approvalUrl, "approvalUrl");
            this.approvalUrl = approvalUrl;
            return this;
        }

        public OxxoOptions build() {

            return new OxxoOptions(
                paymentMethodExpiresAt, approvalUrl);
        }

    }
}
