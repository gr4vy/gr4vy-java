/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import org.openapitools.jackson.nullable.JsonNullable;


public class BraintreeDynamicDataFieldsOptions {
    /**
     * Passes the 3DS status to the Braintree API using `customFields` with the key set to the value of
     * `three_ds_auth_status`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("three_ds_auth_status")
    private JsonNullable<String> threeDsAuthStatus;

    /**
     * Passes the `transaction.purchaseOrderNumber` field when creating a new transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purchase_order_number")
    private JsonNullable<String> purchaseOrderNumber;

    /**
     * Passes the `vaultPaymentMethodCriteria` field when creating a new transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vault_payment_method_criteria")
    private JsonNullable<? extends VaultPaymentMethodCriteria> vaultPaymentMethodCriteria;

    @JsonCreator
    public BraintreeDynamicDataFieldsOptions(
            @JsonProperty("three_ds_auth_status") JsonNullable<String> threeDsAuthStatus,
            @JsonProperty("purchase_order_number") JsonNullable<String> purchaseOrderNumber,
            @JsonProperty("vault_payment_method_criteria") JsonNullable<? extends VaultPaymentMethodCriteria> vaultPaymentMethodCriteria) {
        Utils.checkNotNull(threeDsAuthStatus, "threeDsAuthStatus");
        Utils.checkNotNull(purchaseOrderNumber, "purchaseOrderNumber");
        Utils.checkNotNull(vaultPaymentMethodCriteria, "vaultPaymentMethodCriteria");
        this.threeDsAuthStatus = threeDsAuthStatus;
        this.purchaseOrderNumber = purchaseOrderNumber;
        this.vaultPaymentMethodCriteria = vaultPaymentMethodCriteria;
    }
    
    public BraintreeDynamicDataFieldsOptions() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * Passes the 3DS status to the Braintree API using `customFields` with the key set to the value of
     * `three_ds_auth_status`
     */
    @JsonIgnore
    public JsonNullable<String> threeDsAuthStatus() {
        return threeDsAuthStatus;
    }

    /**
     * Passes the `transaction.purchaseOrderNumber` field when creating a new transaction.
     */
    @JsonIgnore
    public JsonNullable<String> purchaseOrderNumber() {
        return purchaseOrderNumber;
    }

    /**
     * Passes the `vaultPaymentMethodCriteria` field when creating a new transaction.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<VaultPaymentMethodCriteria> vaultPaymentMethodCriteria() {
        return (JsonNullable<VaultPaymentMethodCriteria>) vaultPaymentMethodCriteria;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Passes the 3DS status to the Braintree API using `customFields` with the key set to the value of
     * `three_ds_auth_status`
     */
    public BraintreeDynamicDataFieldsOptions withThreeDsAuthStatus(String threeDsAuthStatus) {
        Utils.checkNotNull(threeDsAuthStatus, "threeDsAuthStatus");
        this.threeDsAuthStatus = JsonNullable.of(threeDsAuthStatus);
        return this;
    }

    /**
     * Passes the 3DS status to the Braintree API using `customFields` with the key set to the value of
     * `three_ds_auth_status`
     */
    public BraintreeDynamicDataFieldsOptions withThreeDsAuthStatus(JsonNullable<String> threeDsAuthStatus) {
        Utils.checkNotNull(threeDsAuthStatus, "threeDsAuthStatus");
        this.threeDsAuthStatus = threeDsAuthStatus;
        return this;
    }

    /**
     * Passes the `transaction.purchaseOrderNumber` field when creating a new transaction.
     */
    public BraintreeDynamicDataFieldsOptions withPurchaseOrderNumber(String purchaseOrderNumber) {
        Utils.checkNotNull(purchaseOrderNumber, "purchaseOrderNumber");
        this.purchaseOrderNumber = JsonNullable.of(purchaseOrderNumber);
        return this;
    }

    /**
     * Passes the `transaction.purchaseOrderNumber` field when creating a new transaction.
     */
    public BraintreeDynamicDataFieldsOptions withPurchaseOrderNumber(JsonNullable<String> purchaseOrderNumber) {
        Utils.checkNotNull(purchaseOrderNumber, "purchaseOrderNumber");
        this.purchaseOrderNumber = purchaseOrderNumber;
        return this;
    }

    /**
     * Passes the `vaultPaymentMethodCriteria` field when creating a new transaction.
     */
    public BraintreeDynamicDataFieldsOptions withVaultPaymentMethodCriteria(VaultPaymentMethodCriteria vaultPaymentMethodCriteria) {
        Utils.checkNotNull(vaultPaymentMethodCriteria, "vaultPaymentMethodCriteria");
        this.vaultPaymentMethodCriteria = JsonNullable.of(vaultPaymentMethodCriteria);
        return this;
    }

    /**
     * Passes the `vaultPaymentMethodCriteria` field when creating a new transaction.
     */
    public BraintreeDynamicDataFieldsOptions withVaultPaymentMethodCriteria(JsonNullable<? extends VaultPaymentMethodCriteria> vaultPaymentMethodCriteria) {
        Utils.checkNotNull(vaultPaymentMethodCriteria, "vaultPaymentMethodCriteria");
        this.vaultPaymentMethodCriteria = vaultPaymentMethodCriteria;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BraintreeDynamicDataFieldsOptions other = (BraintreeDynamicDataFieldsOptions) o;
        return 
            Utils.enhancedDeepEquals(this.threeDsAuthStatus, other.threeDsAuthStatus) &&
            Utils.enhancedDeepEquals(this.purchaseOrderNumber, other.purchaseOrderNumber) &&
            Utils.enhancedDeepEquals(this.vaultPaymentMethodCriteria, other.vaultPaymentMethodCriteria);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            threeDsAuthStatus, purchaseOrderNumber, vaultPaymentMethodCriteria);
    }
    
    @Override
    public String toString() {
        return Utils.toString(BraintreeDynamicDataFieldsOptions.class,
                "threeDsAuthStatus", threeDsAuthStatus,
                "purchaseOrderNumber", purchaseOrderNumber,
                "vaultPaymentMethodCriteria", vaultPaymentMethodCriteria);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<String> threeDsAuthStatus = JsonNullable.undefined();

        private JsonNullable<String> purchaseOrderNumber = JsonNullable.undefined();

        private JsonNullable<? extends VaultPaymentMethodCriteria> vaultPaymentMethodCriteria = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Passes the 3DS status to the Braintree API using `customFields` with the key set to the value of
         * `three_ds_auth_status`
         */
        public Builder threeDsAuthStatus(String threeDsAuthStatus) {
            Utils.checkNotNull(threeDsAuthStatus, "threeDsAuthStatus");
            this.threeDsAuthStatus = JsonNullable.of(threeDsAuthStatus);
            return this;
        }

        /**
         * Passes the 3DS status to the Braintree API using `customFields` with the key set to the value of
         * `three_ds_auth_status`
         */
        public Builder threeDsAuthStatus(JsonNullable<String> threeDsAuthStatus) {
            Utils.checkNotNull(threeDsAuthStatus, "threeDsAuthStatus");
            this.threeDsAuthStatus = threeDsAuthStatus;
            return this;
        }


        /**
         * Passes the `transaction.purchaseOrderNumber` field when creating a new transaction.
         */
        public Builder purchaseOrderNumber(String purchaseOrderNumber) {
            Utils.checkNotNull(purchaseOrderNumber, "purchaseOrderNumber");
            this.purchaseOrderNumber = JsonNullable.of(purchaseOrderNumber);
            return this;
        }

        /**
         * Passes the `transaction.purchaseOrderNumber` field when creating a new transaction.
         */
        public Builder purchaseOrderNumber(JsonNullable<String> purchaseOrderNumber) {
            Utils.checkNotNull(purchaseOrderNumber, "purchaseOrderNumber");
            this.purchaseOrderNumber = purchaseOrderNumber;
            return this;
        }


        /**
         * Passes the `vaultPaymentMethodCriteria` field when creating a new transaction.
         */
        public Builder vaultPaymentMethodCriteria(VaultPaymentMethodCriteria vaultPaymentMethodCriteria) {
            Utils.checkNotNull(vaultPaymentMethodCriteria, "vaultPaymentMethodCriteria");
            this.vaultPaymentMethodCriteria = JsonNullable.of(vaultPaymentMethodCriteria);
            return this;
        }

        /**
         * Passes the `vaultPaymentMethodCriteria` field when creating a new transaction.
         */
        public Builder vaultPaymentMethodCriteria(JsonNullable<? extends VaultPaymentMethodCriteria> vaultPaymentMethodCriteria) {
            Utils.checkNotNull(vaultPaymentMethodCriteria, "vaultPaymentMethodCriteria");
            this.vaultPaymentMethodCriteria = vaultPaymentMethodCriteria;
            return this;
        }

        public BraintreeDynamicDataFieldsOptions build() {

            return new BraintreeDynamicDataFieldsOptions(
                threeDsAuthStatus, purchaseOrderNumber, vaultPaymentMethodCriteria);
        }

    }
}
