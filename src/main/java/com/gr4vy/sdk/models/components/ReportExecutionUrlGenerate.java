/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.gr4vy.sdk.utils.LazySingletonValue;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;


public class ReportExecutionUrlGenerate {
    /**
     * The URL expiration time, in minutes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expires_in")
    private Optional<Long> expiresIn;

    @JsonCreator
    public ReportExecutionUrlGenerate(
            @JsonProperty("expires_in") Optional<Long> expiresIn) {
        Utils.checkNotNull(expiresIn, "expiresIn");
        this.expiresIn = expiresIn;
    }
    
    public ReportExecutionUrlGenerate() {
        this(Optional.empty());
    }

    /**
     * The URL expiration time, in minutes.
     */
    @JsonIgnore
    public Optional<Long> expiresIn() {
        return expiresIn;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The URL expiration time, in minutes.
     */
    public ReportExecutionUrlGenerate withExpiresIn(long expiresIn) {
        Utils.checkNotNull(expiresIn, "expiresIn");
        this.expiresIn = Optional.ofNullable(expiresIn);
        return this;
    }


    /**
     * The URL expiration time, in minutes.
     */
    public ReportExecutionUrlGenerate withExpiresIn(Optional<Long> expiresIn) {
        Utils.checkNotNull(expiresIn, "expiresIn");
        this.expiresIn = expiresIn;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ReportExecutionUrlGenerate other = (ReportExecutionUrlGenerate) o;
        return 
            Utils.enhancedDeepEquals(this.expiresIn, other.expiresIn);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            expiresIn);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ReportExecutionUrlGenerate.class,
                "expiresIn", expiresIn);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Optional<Long> expiresIn;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The URL expiration time, in minutes.
         */
        public Builder expiresIn(long expiresIn) {
            Utils.checkNotNull(expiresIn, "expiresIn");
            this.expiresIn = Optional.ofNullable(expiresIn);
            return this;
        }

        /**
         * The URL expiration time, in minutes.
         */
        public Builder expiresIn(Optional<Long> expiresIn) {
            Utils.checkNotNull(expiresIn, "expiresIn");
            this.expiresIn = expiresIn;
            return this;
        }

        public ReportExecutionUrlGenerate build() {
            if (expiresIn == null) {
                expiresIn = _SINGLETON_VALUE_ExpiresIn.value();
            }

            return new ReportExecutionUrlGenerate(
                expiresIn);
        }


        private static final LazySingletonValue<Optional<Long>> _SINGLETON_VALUE_ExpiresIn =
                new LazySingletonValue<>(
                        "expires_in",
                        "5",
                        new TypeReference<Optional<Long>>() {});
    }
}
