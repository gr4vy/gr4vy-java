/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import org.openapitools.jackson.nullable.JsonNullable;


public class TransactionConnectionOptions {
    /**
     * Custom options to be passed to the `account-updater` connector, allowing for simulating different
     * account updater responses.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account-updater")
    private JsonNullable<? extends AccountUpdaterOptions> accountUpdater;

    /**
     * Custom options to be passed to the `adyen-afterpay` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adyen-afterpay")
    private JsonNullable<? extends AdyenOptions> adyenAfterpay;

    /**
     * Custom options to be passed to the `adyen-alipay` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adyen-alipay")
    private JsonNullable<? extends AdyenOptions> adyenAlipay;

    /**
     * Custom options to be passed to the `adyen-card` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adyen-card")
    private JsonNullable<? extends AdyenCardOptions> adyenCard;

    /**
     * Custom options to be passed to the `adyen-cashapp` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adyen-cashapp")
    private JsonNullable<? extends AdyenOptions> adyenCashapp;

    /**
     * Custom options to be passed to the `adyen-giropay` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adyen-giropay")
    private JsonNullable<? extends AdyenOptions> adyenGiropay;

    /**
     * Custom options to be passed to the `adyen-ideal` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adyen-ideal")
    private JsonNullable<? extends AdyenOptions> adyenIdeal;

    /**
     * Custom options to be passed to the `adyen-sepa` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adyen-sepa")
    private JsonNullable<? extends AdyenSepaOptions> adyenSepa;

    /**
     * Custom options to be passed to the `adyen-sofort` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adyen-sofort")
    private JsonNullable<? extends AdyenOptions> adyenSofort;

    /**
     * Custom options to be passed to the `adyen-vipps` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adyen-vipps")
    private JsonNullable<? extends AdyenOptions> adyenVipps;

    /**
     * Custom options to be passed to the `affirm-affirm` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("affirm-affirm")
    private JsonNullable<? extends AffirmOptions> affirmAffirm;

    /**
     * Custom options to be passed to the `braintree-card` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("braintree-card")
    private JsonNullable<? extends BraintreeOptions> braintreeCard;

    /**
     * Custom options to be passed to the `cybersource-anti-fraud` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cybersource-anti-fraud")
    private JsonNullable<? extends CybersourceAntiFraudOptions> cybersourceAntiFraud;

    /**
     * Custom options to be passed to the `cybersource-card` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cybersource-card")
    private JsonNullable<? extends CybersourceOptions> cybersourceCard;

    /**
     * Custom options to be passed to the `cybersource-ideal` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cybersource-ideal")
    private JsonNullable<? extends CybersourceOptions> cybersourceIdeal;

    /**
     * Custom options to be passed to the `cybersource-kcp` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cybersource-kcp")
    private JsonNullable<? extends CybersourceOptions> cybersourceKcp;

    /**
     * Custom options to be passed to the `dlocal-nequi` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dlocal-nequi")
    private JsonNullable<? extends DlocalOptions> dlocalNequi;

    /**
     * Custom options to be passed to the `fiserv-card` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fiserv-card")
    private JsonNullable<? extends FiservOptions> fiservCard;

    /**
     * Custom options to be passed to the `forter-anti-fraud` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("forter-anti-fraud")
    private JsonNullable<? extends ForterAntiFraudOptions> forterAntiFraud;

    /**
     * Custom options to be passed to the `gem-gem` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gem-gem")
    private JsonNullable<? extends LatitudeOptions> gemGem;

    /**
     * Custom options to be passed to the `gem-gemds` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gem-gemds")
    private JsonNullable<? extends LatitudeOptions> gemGemds;

    /**
     * Custom options to be passed to the `givingblock-givingblock` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("givingblock-givingblock")
    private JsonNullable<? extends GivingBlockOptions> givingblockGivingblock;

    /**
     * Custom options to be passed to the `latitude-latitude` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("latitude-latitude")
    private JsonNullable<? extends LatitudeOptions> latitudeLatitude;

    /**
     * Custom options to be passed to the `latitude-latitudeds` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("latitude-latitudeds")
    private JsonNullable<? extends LatitudeOptions> latitudeLatitudeds;

    /**
     * Custom options to be passed to the `mattilda-tapi` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mattilda-tapi")
    private JsonNullable<? extends MattildaTapiOptions> mattildaTapi;

    /**
     * Custom options to be passed to the `mattilda-tapifintechs` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mattilda-tapifintechs")
    private JsonNullable<? extends MattildaTapiOptions> mattildaTapifintechs;

    /**
     * Custom options to be passed to the `mock-card` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mock-card")
    private JsonNullable<? extends MockCardOptions> mockCard;

    /**
     * Custom options to be passed to the `nuvei-card` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nuvei-card")
    private JsonNullable<? extends NuveiOptions> nuveiCard;

    /**
     * Custom options to be passed to the `nuvei-pse` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nuvei-pse")
    private JsonNullable<? extends NuveiPSEOptions> nuveiPse;

    /**
     * Custom options to be passed to the `oxxo-oxxo` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oxxo-oxxo")
    private JsonNullable<? extends OxxoOptions> oxxoOxxo;

    /**
     * Custom options to be passed to the `paypal-paypal` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paypal-paypal")
    private JsonNullable<? extends PaypalOptions> paypalPaypal;

    /**
     * Custom options to be passed to the `paypal-paypalpaylater` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paypal-paypalpaylater")
    private JsonNullable<? extends PaypalOptions> paypalPaypalpaylater;

    /**
     * Custom options to be passed to the `powertranz-card` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("powertranz-card")
    private JsonNullable<? extends PowertranzOptions> powertranzCard;

    /**
     * Custom options to be passed to the `stripe-card` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stripe-card")
    private JsonNullable<? extends StripeOptions> stripeCard;

    /**
     * Custom options to be passed to the `travelhub-card` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("travelhub-card")
    private JsonNullable<? extends TravelhubOptions> travelhubCard;

    /**
     * Custom options to be passed to the `trustly-trustly` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trustly-trustly")
    private JsonNullable<? extends TrustlyOptions> trustlyTrustly;

    /**
     * Custom options to be passed to the `wpay-everydaypay` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wpay-everydaypay")
    private JsonNullable<? extends WpayEverdaypayOptions> wpayEverydaypay;

    /**
     * Custom options to be passed to the `wpay-payto` connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wpay-payto")
    private JsonNullable<? extends WpayPaytoOptions> wpayPayto;

    @JsonCreator
    public TransactionConnectionOptions(
            @JsonProperty("account-updater") JsonNullable<? extends AccountUpdaterOptions> accountUpdater,
            @JsonProperty("adyen-afterpay") JsonNullable<? extends AdyenOptions> adyenAfterpay,
            @JsonProperty("adyen-alipay") JsonNullable<? extends AdyenOptions> adyenAlipay,
            @JsonProperty("adyen-card") JsonNullable<? extends AdyenCardOptions> adyenCard,
            @JsonProperty("adyen-cashapp") JsonNullable<? extends AdyenOptions> adyenCashapp,
            @JsonProperty("adyen-giropay") JsonNullable<? extends AdyenOptions> adyenGiropay,
            @JsonProperty("adyen-ideal") JsonNullable<? extends AdyenOptions> adyenIdeal,
            @JsonProperty("adyen-sepa") JsonNullable<? extends AdyenSepaOptions> adyenSepa,
            @JsonProperty("adyen-sofort") JsonNullable<? extends AdyenOptions> adyenSofort,
            @JsonProperty("adyen-vipps") JsonNullable<? extends AdyenOptions> adyenVipps,
            @JsonProperty("affirm-affirm") JsonNullable<? extends AffirmOptions> affirmAffirm,
            @JsonProperty("braintree-card") JsonNullable<? extends BraintreeOptions> braintreeCard,
            @JsonProperty("cybersource-anti-fraud") JsonNullable<? extends CybersourceAntiFraudOptions> cybersourceAntiFraud,
            @JsonProperty("cybersource-card") JsonNullable<? extends CybersourceOptions> cybersourceCard,
            @JsonProperty("cybersource-ideal") JsonNullable<? extends CybersourceOptions> cybersourceIdeal,
            @JsonProperty("cybersource-kcp") JsonNullable<? extends CybersourceOptions> cybersourceKcp,
            @JsonProperty("dlocal-nequi") JsonNullable<? extends DlocalOptions> dlocalNequi,
            @JsonProperty("fiserv-card") JsonNullable<? extends FiservOptions> fiservCard,
            @JsonProperty("forter-anti-fraud") JsonNullable<? extends ForterAntiFraudOptions> forterAntiFraud,
            @JsonProperty("gem-gem") JsonNullable<? extends LatitudeOptions> gemGem,
            @JsonProperty("gem-gemds") JsonNullable<? extends LatitudeOptions> gemGemds,
            @JsonProperty("givingblock-givingblock") JsonNullable<? extends GivingBlockOptions> givingblockGivingblock,
            @JsonProperty("latitude-latitude") JsonNullable<? extends LatitudeOptions> latitudeLatitude,
            @JsonProperty("latitude-latitudeds") JsonNullable<? extends LatitudeOptions> latitudeLatitudeds,
            @JsonProperty("mattilda-tapi") JsonNullable<? extends MattildaTapiOptions> mattildaTapi,
            @JsonProperty("mattilda-tapifintechs") JsonNullable<? extends MattildaTapiOptions> mattildaTapifintechs,
            @JsonProperty("mock-card") JsonNullable<? extends MockCardOptions> mockCard,
            @JsonProperty("nuvei-card") JsonNullable<? extends NuveiOptions> nuveiCard,
            @JsonProperty("nuvei-pse") JsonNullable<? extends NuveiPSEOptions> nuveiPse,
            @JsonProperty("oxxo-oxxo") JsonNullable<? extends OxxoOptions> oxxoOxxo,
            @JsonProperty("paypal-paypal") JsonNullable<? extends PaypalOptions> paypalPaypal,
            @JsonProperty("paypal-paypalpaylater") JsonNullable<? extends PaypalOptions> paypalPaypalpaylater,
            @JsonProperty("powertranz-card") JsonNullable<? extends PowertranzOptions> powertranzCard,
            @JsonProperty("stripe-card") JsonNullable<? extends StripeOptions> stripeCard,
            @JsonProperty("travelhub-card") JsonNullable<? extends TravelhubOptions> travelhubCard,
            @JsonProperty("trustly-trustly") JsonNullable<? extends TrustlyOptions> trustlyTrustly,
            @JsonProperty("wpay-everydaypay") JsonNullable<? extends WpayEverdaypayOptions> wpayEverydaypay,
            @JsonProperty("wpay-payto") JsonNullable<? extends WpayPaytoOptions> wpayPayto) {
        Utils.checkNotNull(accountUpdater, "accountUpdater");
        Utils.checkNotNull(adyenAfterpay, "adyenAfterpay");
        Utils.checkNotNull(adyenAlipay, "adyenAlipay");
        Utils.checkNotNull(adyenCard, "adyenCard");
        Utils.checkNotNull(adyenCashapp, "adyenCashapp");
        Utils.checkNotNull(adyenGiropay, "adyenGiropay");
        Utils.checkNotNull(adyenIdeal, "adyenIdeal");
        Utils.checkNotNull(adyenSepa, "adyenSepa");
        Utils.checkNotNull(adyenSofort, "adyenSofort");
        Utils.checkNotNull(adyenVipps, "adyenVipps");
        Utils.checkNotNull(affirmAffirm, "affirmAffirm");
        Utils.checkNotNull(braintreeCard, "braintreeCard");
        Utils.checkNotNull(cybersourceAntiFraud, "cybersourceAntiFraud");
        Utils.checkNotNull(cybersourceCard, "cybersourceCard");
        Utils.checkNotNull(cybersourceIdeal, "cybersourceIdeal");
        Utils.checkNotNull(cybersourceKcp, "cybersourceKcp");
        Utils.checkNotNull(dlocalNequi, "dlocalNequi");
        Utils.checkNotNull(fiservCard, "fiservCard");
        Utils.checkNotNull(forterAntiFraud, "forterAntiFraud");
        Utils.checkNotNull(gemGem, "gemGem");
        Utils.checkNotNull(gemGemds, "gemGemds");
        Utils.checkNotNull(givingblockGivingblock, "givingblockGivingblock");
        Utils.checkNotNull(latitudeLatitude, "latitudeLatitude");
        Utils.checkNotNull(latitudeLatitudeds, "latitudeLatitudeds");
        Utils.checkNotNull(mattildaTapi, "mattildaTapi");
        Utils.checkNotNull(mattildaTapifintechs, "mattildaTapifintechs");
        Utils.checkNotNull(mockCard, "mockCard");
        Utils.checkNotNull(nuveiCard, "nuveiCard");
        Utils.checkNotNull(nuveiPse, "nuveiPse");
        Utils.checkNotNull(oxxoOxxo, "oxxoOxxo");
        Utils.checkNotNull(paypalPaypal, "paypalPaypal");
        Utils.checkNotNull(paypalPaypalpaylater, "paypalPaypalpaylater");
        Utils.checkNotNull(powertranzCard, "powertranzCard");
        Utils.checkNotNull(stripeCard, "stripeCard");
        Utils.checkNotNull(travelhubCard, "travelhubCard");
        Utils.checkNotNull(trustlyTrustly, "trustlyTrustly");
        Utils.checkNotNull(wpayEverydaypay, "wpayEverydaypay");
        Utils.checkNotNull(wpayPayto, "wpayPayto");
        this.accountUpdater = accountUpdater;
        this.adyenAfterpay = adyenAfterpay;
        this.adyenAlipay = adyenAlipay;
        this.adyenCard = adyenCard;
        this.adyenCashapp = adyenCashapp;
        this.adyenGiropay = adyenGiropay;
        this.adyenIdeal = adyenIdeal;
        this.adyenSepa = adyenSepa;
        this.adyenSofort = adyenSofort;
        this.adyenVipps = adyenVipps;
        this.affirmAffirm = affirmAffirm;
        this.braintreeCard = braintreeCard;
        this.cybersourceAntiFraud = cybersourceAntiFraud;
        this.cybersourceCard = cybersourceCard;
        this.cybersourceIdeal = cybersourceIdeal;
        this.cybersourceKcp = cybersourceKcp;
        this.dlocalNequi = dlocalNequi;
        this.fiservCard = fiservCard;
        this.forterAntiFraud = forterAntiFraud;
        this.gemGem = gemGem;
        this.gemGemds = gemGemds;
        this.givingblockGivingblock = givingblockGivingblock;
        this.latitudeLatitude = latitudeLatitude;
        this.latitudeLatitudeds = latitudeLatitudeds;
        this.mattildaTapi = mattildaTapi;
        this.mattildaTapifintechs = mattildaTapifintechs;
        this.mockCard = mockCard;
        this.nuveiCard = nuveiCard;
        this.nuveiPse = nuveiPse;
        this.oxxoOxxo = oxxoOxxo;
        this.paypalPaypal = paypalPaypal;
        this.paypalPaypalpaylater = paypalPaypalpaylater;
        this.powertranzCard = powertranzCard;
        this.stripeCard = stripeCard;
        this.travelhubCard = travelhubCard;
        this.trustlyTrustly = trustlyTrustly;
        this.wpayEverydaypay = wpayEverydaypay;
        this.wpayPayto = wpayPayto;
    }
    
    public TransactionConnectionOptions() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * Custom options to be passed to the `account-updater` connector, allowing for simulating different
     * account updater responses.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AccountUpdaterOptions> accountUpdater() {
        return (JsonNullable<AccountUpdaterOptions>) accountUpdater;
    }

    /**
     * Custom options to be passed to the `adyen-afterpay` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AdyenOptions> adyenAfterpay() {
        return (JsonNullable<AdyenOptions>) adyenAfterpay;
    }

    /**
     * Custom options to be passed to the `adyen-alipay` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AdyenOptions> adyenAlipay() {
        return (JsonNullable<AdyenOptions>) adyenAlipay;
    }

    /**
     * Custom options to be passed to the `adyen-card` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AdyenCardOptions> adyenCard() {
        return (JsonNullable<AdyenCardOptions>) adyenCard;
    }

    /**
     * Custom options to be passed to the `adyen-cashapp` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AdyenOptions> adyenCashapp() {
        return (JsonNullable<AdyenOptions>) adyenCashapp;
    }

    /**
     * Custom options to be passed to the `adyen-giropay` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AdyenOptions> adyenGiropay() {
        return (JsonNullable<AdyenOptions>) adyenGiropay;
    }

    /**
     * Custom options to be passed to the `adyen-ideal` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AdyenOptions> adyenIdeal() {
        return (JsonNullable<AdyenOptions>) adyenIdeal;
    }

    /**
     * Custom options to be passed to the `adyen-sepa` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AdyenSepaOptions> adyenSepa() {
        return (JsonNullable<AdyenSepaOptions>) adyenSepa;
    }

    /**
     * Custom options to be passed to the `adyen-sofort` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AdyenOptions> adyenSofort() {
        return (JsonNullable<AdyenOptions>) adyenSofort;
    }

    /**
     * Custom options to be passed to the `adyen-vipps` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AdyenOptions> adyenVipps() {
        return (JsonNullable<AdyenOptions>) adyenVipps;
    }

    /**
     * Custom options to be passed to the `affirm-affirm` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AffirmOptions> affirmAffirm() {
        return (JsonNullable<AffirmOptions>) affirmAffirm;
    }

    /**
     * Custom options to be passed to the `braintree-card` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<BraintreeOptions> braintreeCard() {
        return (JsonNullable<BraintreeOptions>) braintreeCard;
    }

    /**
     * Custom options to be passed to the `cybersource-anti-fraud` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<CybersourceAntiFraudOptions> cybersourceAntiFraud() {
        return (JsonNullable<CybersourceAntiFraudOptions>) cybersourceAntiFraud;
    }

    /**
     * Custom options to be passed to the `cybersource-card` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<CybersourceOptions> cybersourceCard() {
        return (JsonNullable<CybersourceOptions>) cybersourceCard;
    }

    /**
     * Custom options to be passed to the `cybersource-ideal` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<CybersourceOptions> cybersourceIdeal() {
        return (JsonNullable<CybersourceOptions>) cybersourceIdeal;
    }

    /**
     * Custom options to be passed to the `cybersource-kcp` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<CybersourceOptions> cybersourceKcp() {
        return (JsonNullable<CybersourceOptions>) cybersourceKcp;
    }

    /**
     * Custom options to be passed to the `dlocal-nequi` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<DlocalOptions> dlocalNequi() {
        return (JsonNullable<DlocalOptions>) dlocalNequi;
    }

    /**
     * Custom options to be passed to the `fiserv-card` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<FiservOptions> fiservCard() {
        return (JsonNullable<FiservOptions>) fiservCard;
    }

    /**
     * Custom options to be passed to the `forter-anti-fraud` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<ForterAntiFraudOptions> forterAntiFraud() {
        return (JsonNullable<ForterAntiFraudOptions>) forterAntiFraud;
    }

    /**
     * Custom options to be passed to the `gem-gem` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<LatitudeOptions> gemGem() {
        return (JsonNullable<LatitudeOptions>) gemGem;
    }

    /**
     * Custom options to be passed to the `gem-gemds` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<LatitudeOptions> gemGemds() {
        return (JsonNullable<LatitudeOptions>) gemGemds;
    }

    /**
     * Custom options to be passed to the `givingblock-givingblock` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<GivingBlockOptions> givingblockGivingblock() {
        return (JsonNullable<GivingBlockOptions>) givingblockGivingblock;
    }

    /**
     * Custom options to be passed to the `latitude-latitude` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<LatitudeOptions> latitudeLatitude() {
        return (JsonNullable<LatitudeOptions>) latitudeLatitude;
    }

    /**
     * Custom options to be passed to the `latitude-latitudeds` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<LatitudeOptions> latitudeLatitudeds() {
        return (JsonNullable<LatitudeOptions>) latitudeLatitudeds;
    }

    /**
     * Custom options to be passed to the `mattilda-tapi` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<MattildaTapiOptions> mattildaTapi() {
        return (JsonNullable<MattildaTapiOptions>) mattildaTapi;
    }

    /**
     * Custom options to be passed to the `mattilda-tapifintechs` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<MattildaTapiOptions> mattildaTapifintechs() {
        return (JsonNullable<MattildaTapiOptions>) mattildaTapifintechs;
    }

    /**
     * Custom options to be passed to the `mock-card` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<MockCardOptions> mockCard() {
        return (JsonNullable<MockCardOptions>) mockCard;
    }

    /**
     * Custom options to be passed to the `nuvei-card` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<NuveiOptions> nuveiCard() {
        return (JsonNullable<NuveiOptions>) nuveiCard;
    }

    /**
     * Custom options to be passed to the `nuvei-pse` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<NuveiPSEOptions> nuveiPse() {
        return (JsonNullable<NuveiPSEOptions>) nuveiPse;
    }

    /**
     * Custom options to be passed to the `oxxo-oxxo` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<OxxoOptions> oxxoOxxo() {
        return (JsonNullable<OxxoOptions>) oxxoOxxo;
    }

    /**
     * Custom options to be passed to the `paypal-paypal` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<PaypalOptions> paypalPaypal() {
        return (JsonNullable<PaypalOptions>) paypalPaypal;
    }

    /**
     * Custom options to be passed to the `paypal-paypalpaylater` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<PaypalOptions> paypalPaypalpaylater() {
        return (JsonNullable<PaypalOptions>) paypalPaypalpaylater;
    }

    /**
     * Custom options to be passed to the `powertranz-card` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<PowertranzOptions> powertranzCard() {
        return (JsonNullable<PowertranzOptions>) powertranzCard;
    }

    /**
     * Custom options to be passed to the `stripe-card` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<StripeOptions> stripeCard() {
        return (JsonNullable<StripeOptions>) stripeCard;
    }

    /**
     * Custom options to be passed to the `travelhub-card` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<TravelhubOptions> travelhubCard() {
        return (JsonNullable<TravelhubOptions>) travelhubCard;
    }

    /**
     * Custom options to be passed to the `trustly-trustly` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<TrustlyOptions> trustlyTrustly() {
        return (JsonNullable<TrustlyOptions>) trustlyTrustly;
    }

    /**
     * Custom options to be passed to the `wpay-everydaypay` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<WpayEverdaypayOptions> wpayEverydaypay() {
        return (JsonNullable<WpayEverdaypayOptions>) wpayEverydaypay;
    }

    /**
     * Custom options to be passed to the `wpay-payto` connector.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<WpayPaytoOptions> wpayPayto() {
        return (JsonNullable<WpayPaytoOptions>) wpayPayto;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Custom options to be passed to the `account-updater` connector, allowing for simulating different
     * account updater responses.
     */
    public TransactionConnectionOptions withAccountUpdater(AccountUpdaterOptions accountUpdater) {
        Utils.checkNotNull(accountUpdater, "accountUpdater");
        this.accountUpdater = JsonNullable.of(accountUpdater);
        return this;
    }

    /**
     * Custom options to be passed to the `account-updater` connector, allowing for simulating different
     * account updater responses.
     */
    public TransactionConnectionOptions withAccountUpdater(JsonNullable<? extends AccountUpdaterOptions> accountUpdater) {
        Utils.checkNotNull(accountUpdater, "accountUpdater");
        this.accountUpdater = accountUpdater;
        return this;
    }

    /**
     * Custom options to be passed to the `adyen-afterpay` connector.
     */
    public TransactionConnectionOptions withAdyenAfterpay(AdyenOptions adyenAfterpay) {
        Utils.checkNotNull(adyenAfterpay, "adyenAfterpay");
        this.adyenAfterpay = JsonNullable.of(adyenAfterpay);
        return this;
    }

    /**
     * Custom options to be passed to the `adyen-afterpay` connector.
     */
    public TransactionConnectionOptions withAdyenAfterpay(JsonNullable<? extends AdyenOptions> adyenAfterpay) {
        Utils.checkNotNull(adyenAfterpay, "adyenAfterpay");
        this.adyenAfterpay = adyenAfterpay;
        return this;
    }

    /**
     * Custom options to be passed to the `adyen-alipay` connector.
     */
    public TransactionConnectionOptions withAdyenAlipay(AdyenOptions adyenAlipay) {
        Utils.checkNotNull(adyenAlipay, "adyenAlipay");
        this.adyenAlipay = JsonNullable.of(adyenAlipay);
        return this;
    }

    /**
     * Custom options to be passed to the `adyen-alipay` connector.
     */
    public TransactionConnectionOptions withAdyenAlipay(JsonNullable<? extends AdyenOptions> adyenAlipay) {
        Utils.checkNotNull(adyenAlipay, "adyenAlipay");
        this.adyenAlipay = adyenAlipay;
        return this;
    }

    /**
     * Custom options to be passed to the `adyen-card` connector.
     */
    public TransactionConnectionOptions withAdyenCard(AdyenCardOptions adyenCard) {
        Utils.checkNotNull(adyenCard, "adyenCard");
        this.adyenCard = JsonNullable.of(adyenCard);
        return this;
    }

    /**
     * Custom options to be passed to the `adyen-card` connector.
     */
    public TransactionConnectionOptions withAdyenCard(JsonNullable<? extends AdyenCardOptions> adyenCard) {
        Utils.checkNotNull(adyenCard, "adyenCard");
        this.adyenCard = adyenCard;
        return this;
    }

    /**
     * Custom options to be passed to the `adyen-cashapp` connector.
     */
    public TransactionConnectionOptions withAdyenCashapp(AdyenOptions adyenCashapp) {
        Utils.checkNotNull(adyenCashapp, "adyenCashapp");
        this.adyenCashapp = JsonNullable.of(adyenCashapp);
        return this;
    }

    /**
     * Custom options to be passed to the `adyen-cashapp` connector.
     */
    public TransactionConnectionOptions withAdyenCashapp(JsonNullable<? extends AdyenOptions> adyenCashapp) {
        Utils.checkNotNull(adyenCashapp, "adyenCashapp");
        this.adyenCashapp = adyenCashapp;
        return this;
    }

    /**
     * Custom options to be passed to the `adyen-giropay` connector.
     */
    public TransactionConnectionOptions withAdyenGiropay(AdyenOptions adyenGiropay) {
        Utils.checkNotNull(adyenGiropay, "adyenGiropay");
        this.adyenGiropay = JsonNullable.of(adyenGiropay);
        return this;
    }

    /**
     * Custom options to be passed to the `adyen-giropay` connector.
     */
    public TransactionConnectionOptions withAdyenGiropay(JsonNullable<? extends AdyenOptions> adyenGiropay) {
        Utils.checkNotNull(adyenGiropay, "adyenGiropay");
        this.adyenGiropay = adyenGiropay;
        return this;
    }

    /**
     * Custom options to be passed to the `adyen-ideal` connector.
     */
    public TransactionConnectionOptions withAdyenIdeal(AdyenOptions adyenIdeal) {
        Utils.checkNotNull(adyenIdeal, "adyenIdeal");
        this.adyenIdeal = JsonNullable.of(adyenIdeal);
        return this;
    }

    /**
     * Custom options to be passed to the `adyen-ideal` connector.
     */
    public TransactionConnectionOptions withAdyenIdeal(JsonNullable<? extends AdyenOptions> adyenIdeal) {
        Utils.checkNotNull(adyenIdeal, "adyenIdeal");
        this.adyenIdeal = adyenIdeal;
        return this;
    }

    /**
     * Custom options to be passed to the `adyen-sepa` connector.
     */
    public TransactionConnectionOptions withAdyenSepa(AdyenSepaOptions adyenSepa) {
        Utils.checkNotNull(adyenSepa, "adyenSepa");
        this.adyenSepa = JsonNullable.of(adyenSepa);
        return this;
    }

    /**
     * Custom options to be passed to the `adyen-sepa` connector.
     */
    public TransactionConnectionOptions withAdyenSepa(JsonNullable<? extends AdyenSepaOptions> adyenSepa) {
        Utils.checkNotNull(adyenSepa, "adyenSepa");
        this.adyenSepa = adyenSepa;
        return this;
    }

    /**
     * Custom options to be passed to the `adyen-sofort` connector.
     */
    public TransactionConnectionOptions withAdyenSofort(AdyenOptions adyenSofort) {
        Utils.checkNotNull(adyenSofort, "adyenSofort");
        this.adyenSofort = JsonNullable.of(adyenSofort);
        return this;
    }

    /**
     * Custom options to be passed to the `adyen-sofort` connector.
     */
    public TransactionConnectionOptions withAdyenSofort(JsonNullable<? extends AdyenOptions> adyenSofort) {
        Utils.checkNotNull(adyenSofort, "adyenSofort");
        this.adyenSofort = adyenSofort;
        return this;
    }

    /**
     * Custom options to be passed to the `adyen-vipps` connector.
     */
    public TransactionConnectionOptions withAdyenVipps(AdyenOptions adyenVipps) {
        Utils.checkNotNull(adyenVipps, "adyenVipps");
        this.adyenVipps = JsonNullable.of(adyenVipps);
        return this;
    }

    /**
     * Custom options to be passed to the `adyen-vipps` connector.
     */
    public TransactionConnectionOptions withAdyenVipps(JsonNullable<? extends AdyenOptions> adyenVipps) {
        Utils.checkNotNull(adyenVipps, "adyenVipps");
        this.adyenVipps = adyenVipps;
        return this;
    }

    /**
     * Custom options to be passed to the `affirm-affirm` connector.
     */
    public TransactionConnectionOptions withAffirmAffirm(AffirmOptions affirmAffirm) {
        Utils.checkNotNull(affirmAffirm, "affirmAffirm");
        this.affirmAffirm = JsonNullable.of(affirmAffirm);
        return this;
    }

    /**
     * Custom options to be passed to the `affirm-affirm` connector.
     */
    public TransactionConnectionOptions withAffirmAffirm(JsonNullable<? extends AffirmOptions> affirmAffirm) {
        Utils.checkNotNull(affirmAffirm, "affirmAffirm");
        this.affirmAffirm = affirmAffirm;
        return this;
    }

    /**
     * Custom options to be passed to the `braintree-card` connector.
     */
    public TransactionConnectionOptions withBraintreeCard(BraintreeOptions braintreeCard) {
        Utils.checkNotNull(braintreeCard, "braintreeCard");
        this.braintreeCard = JsonNullable.of(braintreeCard);
        return this;
    }

    /**
     * Custom options to be passed to the `braintree-card` connector.
     */
    public TransactionConnectionOptions withBraintreeCard(JsonNullable<? extends BraintreeOptions> braintreeCard) {
        Utils.checkNotNull(braintreeCard, "braintreeCard");
        this.braintreeCard = braintreeCard;
        return this;
    }

    /**
     * Custom options to be passed to the `cybersource-anti-fraud` connector.
     */
    public TransactionConnectionOptions withCybersourceAntiFraud(CybersourceAntiFraudOptions cybersourceAntiFraud) {
        Utils.checkNotNull(cybersourceAntiFraud, "cybersourceAntiFraud");
        this.cybersourceAntiFraud = JsonNullable.of(cybersourceAntiFraud);
        return this;
    }

    /**
     * Custom options to be passed to the `cybersource-anti-fraud` connector.
     */
    public TransactionConnectionOptions withCybersourceAntiFraud(JsonNullable<? extends CybersourceAntiFraudOptions> cybersourceAntiFraud) {
        Utils.checkNotNull(cybersourceAntiFraud, "cybersourceAntiFraud");
        this.cybersourceAntiFraud = cybersourceAntiFraud;
        return this;
    }

    /**
     * Custom options to be passed to the `cybersource-card` connector.
     */
    public TransactionConnectionOptions withCybersourceCard(CybersourceOptions cybersourceCard) {
        Utils.checkNotNull(cybersourceCard, "cybersourceCard");
        this.cybersourceCard = JsonNullable.of(cybersourceCard);
        return this;
    }

    /**
     * Custom options to be passed to the `cybersource-card` connector.
     */
    public TransactionConnectionOptions withCybersourceCard(JsonNullable<? extends CybersourceOptions> cybersourceCard) {
        Utils.checkNotNull(cybersourceCard, "cybersourceCard");
        this.cybersourceCard = cybersourceCard;
        return this;
    }

    /**
     * Custom options to be passed to the `cybersource-ideal` connector.
     */
    public TransactionConnectionOptions withCybersourceIdeal(CybersourceOptions cybersourceIdeal) {
        Utils.checkNotNull(cybersourceIdeal, "cybersourceIdeal");
        this.cybersourceIdeal = JsonNullable.of(cybersourceIdeal);
        return this;
    }

    /**
     * Custom options to be passed to the `cybersource-ideal` connector.
     */
    public TransactionConnectionOptions withCybersourceIdeal(JsonNullable<? extends CybersourceOptions> cybersourceIdeal) {
        Utils.checkNotNull(cybersourceIdeal, "cybersourceIdeal");
        this.cybersourceIdeal = cybersourceIdeal;
        return this;
    }

    /**
     * Custom options to be passed to the `cybersource-kcp` connector.
     */
    public TransactionConnectionOptions withCybersourceKcp(CybersourceOptions cybersourceKcp) {
        Utils.checkNotNull(cybersourceKcp, "cybersourceKcp");
        this.cybersourceKcp = JsonNullable.of(cybersourceKcp);
        return this;
    }

    /**
     * Custom options to be passed to the `cybersource-kcp` connector.
     */
    public TransactionConnectionOptions withCybersourceKcp(JsonNullable<? extends CybersourceOptions> cybersourceKcp) {
        Utils.checkNotNull(cybersourceKcp, "cybersourceKcp");
        this.cybersourceKcp = cybersourceKcp;
        return this;
    }

    /**
     * Custom options to be passed to the `dlocal-nequi` connector.
     */
    public TransactionConnectionOptions withDlocalNequi(DlocalOptions dlocalNequi) {
        Utils.checkNotNull(dlocalNequi, "dlocalNequi");
        this.dlocalNequi = JsonNullable.of(dlocalNequi);
        return this;
    }

    /**
     * Custom options to be passed to the `dlocal-nequi` connector.
     */
    public TransactionConnectionOptions withDlocalNequi(JsonNullable<? extends DlocalOptions> dlocalNequi) {
        Utils.checkNotNull(dlocalNequi, "dlocalNequi");
        this.dlocalNequi = dlocalNequi;
        return this;
    }

    /**
     * Custom options to be passed to the `fiserv-card` connector.
     */
    public TransactionConnectionOptions withFiservCard(FiservOptions fiservCard) {
        Utils.checkNotNull(fiservCard, "fiservCard");
        this.fiservCard = JsonNullable.of(fiservCard);
        return this;
    }

    /**
     * Custom options to be passed to the `fiserv-card` connector.
     */
    public TransactionConnectionOptions withFiservCard(JsonNullable<? extends FiservOptions> fiservCard) {
        Utils.checkNotNull(fiservCard, "fiservCard");
        this.fiservCard = fiservCard;
        return this;
    }

    /**
     * Custom options to be passed to the `forter-anti-fraud` connector.
     */
    public TransactionConnectionOptions withForterAntiFraud(ForterAntiFraudOptions forterAntiFraud) {
        Utils.checkNotNull(forterAntiFraud, "forterAntiFraud");
        this.forterAntiFraud = JsonNullable.of(forterAntiFraud);
        return this;
    }

    /**
     * Custom options to be passed to the `forter-anti-fraud` connector.
     */
    public TransactionConnectionOptions withForterAntiFraud(JsonNullable<? extends ForterAntiFraudOptions> forterAntiFraud) {
        Utils.checkNotNull(forterAntiFraud, "forterAntiFraud");
        this.forterAntiFraud = forterAntiFraud;
        return this;
    }

    /**
     * Custom options to be passed to the `gem-gem` connector.
     */
    public TransactionConnectionOptions withGemGem(LatitudeOptions gemGem) {
        Utils.checkNotNull(gemGem, "gemGem");
        this.gemGem = JsonNullable.of(gemGem);
        return this;
    }

    /**
     * Custom options to be passed to the `gem-gem` connector.
     */
    public TransactionConnectionOptions withGemGem(JsonNullable<? extends LatitudeOptions> gemGem) {
        Utils.checkNotNull(gemGem, "gemGem");
        this.gemGem = gemGem;
        return this;
    }

    /**
     * Custom options to be passed to the `gem-gemds` connector.
     */
    public TransactionConnectionOptions withGemGemds(LatitudeOptions gemGemds) {
        Utils.checkNotNull(gemGemds, "gemGemds");
        this.gemGemds = JsonNullable.of(gemGemds);
        return this;
    }

    /**
     * Custom options to be passed to the `gem-gemds` connector.
     */
    public TransactionConnectionOptions withGemGemds(JsonNullable<? extends LatitudeOptions> gemGemds) {
        Utils.checkNotNull(gemGemds, "gemGemds");
        this.gemGemds = gemGemds;
        return this;
    }

    /**
     * Custom options to be passed to the `givingblock-givingblock` connector.
     */
    public TransactionConnectionOptions withGivingblockGivingblock(GivingBlockOptions givingblockGivingblock) {
        Utils.checkNotNull(givingblockGivingblock, "givingblockGivingblock");
        this.givingblockGivingblock = JsonNullable.of(givingblockGivingblock);
        return this;
    }

    /**
     * Custom options to be passed to the `givingblock-givingblock` connector.
     */
    public TransactionConnectionOptions withGivingblockGivingblock(JsonNullable<? extends GivingBlockOptions> givingblockGivingblock) {
        Utils.checkNotNull(givingblockGivingblock, "givingblockGivingblock");
        this.givingblockGivingblock = givingblockGivingblock;
        return this;
    }

    /**
     * Custom options to be passed to the `latitude-latitude` connector.
     */
    public TransactionConnectionOptions withLatitudeLatitude(LatitudeOptions latitudeLatitude) {
        Utils.checkNotNull(latitudeLatitude, "latitudeLatitude");
        this.latitudeLatitude = JsonNullable.of(latitudeLatitude);
        return this;
    }

    /**
     * Custom options to be passed to the `latitude-latitude` connector.
     */
    public TransactionConnectionOptions withLatitudeLatitude(JsonNullable<? extends LatitudeOptions> latitudeLatitude) {
        Utils.checkNotNull(latitudeLatitude, "latitudeLatitude");
        this.latitudeLatitude = latitudeLatitude;
        return this;
    }

    /**
     * Custom options to be passed to the `latitude-latitudeds` connector.
     */
    public TransactionConnectionOptions withLatitudeLatitudeds(LatitudeOptions latitudeLatitudeds) {
        Utils.checkNotNull(latitudeLatitudeds, "latitudeLatitudeds");
        this.latitudeLatitudeds = JsonNullable.of(latitudeLatitudeds);
        return this;
    }

    /**
     * Custom options to be passed to the `latitude-latitudeds` connector.
     */
    public TransactionConnectionOptions withLatitudeLatitudeds(JsonNullable<? extends LatitudeOptions> latitudeLatitudeds) {
        Utils.checkNotNull(latitudeLatitudeds, "latitudeLatitudeds");
        this.latitudeLatitudeds = latitudeLatitudeds;
        return this;
    }

    /**
     * Custom options to be passed to the `mattilda-tapi` connector.
     */
    public TransactionConnectionOptions withMattildaTapi(MattildaTapiOptions mattildaTapi) {
        Utils.checkNotNull(mattildaTapi, "mattildaTapi");
        this.mattildaTapi = JsonNullable.of(mattildaTapi);
        return this;
    }

    /**
     * Custom options to be passed to the `mattilda-tapi` connector.
     */
    public TransactionConnectionOptions withMattildaTapi(JsonNullable<? extends MattildaTapiOptions> mattildaTapi) {
        Utils.checkNotNull(mattildaTapi, "mattildaTapi");
        this.mattildaTapi = mattildaTapi;
        return this;
    }

    /**
     * Custom options to be passed to the `mattilda-tapifintechs` connector.
     */
    public TransactionConnectionOptions withMattildaTapifintechs(MattildaTapiOptions mattildaTapifintechs) {
        Utils.checkNotNull(mattildaTapifintechs, "mattildaTapifintechs");
        this.mattildaTapifintechs = JsonNullable.of(mattildaTapifintechs);
        return this;
    }

    /**
     * Custom options to be passed to the `mattilda-tapifintechs` connector.
     */
    public TransactionConnectionOptions withMattildaTapifintechs(JsonNullable<? extends MattildaTapiOptions> mattildaTapifintechs) {
        Utils.checkNotNull(mattildaTapifintechs, "mattildaTapifintechs");
        this.mattildaTapifintechs = mattildaTapifintechs;
        return this;
    }

    /**
     * Custom options to be passed to the `mock-card` connector.
     */
    public TransactionConnectionOptions withMockCard(MockCardOptions mockCard) {
        Utils.checkNotNull(mockCard, "mockCard");
        this.mockCard = JsonNullable.of(mockCard);
        return this;
    }

    /**
     * Custom options to be passed to the `mock-card` connector.
     */
    public TransactionConnectionOptions withMockCard(JsonNullable<? extends MockCardOptions> mockCard) {
        Utils.checkNotNull(mockCard, "mockCard");
        this.mockCard = mockCard;
        return this;
    }

    /**
     * Custom options to be passed to the `nuvei-card` connector.
     */
    public TransactionConnectionOptions withNuveiCard(NuveiOptions nuveiCard) {
        Utils.checkNotNull(nuveiCard, "nuveiCard");
        this.nuveiCard = JsonNullable.of(nuveiCard);
        return this;
    }

    /**
     * Custom options to be passed to the `nuvei-card` connector.
     */
    public TransactionConnectionOptions withNuveiCard(JsonNullable<? extends NuveiOptions> nuveiCard) {
        Utils.checkNotNull(nuveiCard, "nuveiCard");
        this.nuveiCard = nuveiCard;
        return this;
    }

    /**
     * Custom options to be passed to the `nuvei-pse` connector.
     */
    public TransactionConnectionOptions withNuveiPse(NuveiPSEOptions nuveiPse) {
        Utils.checkNotNull(nuveiPse, "nuveiPse");
        this.nuveiPse = JsonNullable.of(nuveiPse);
        return this;
    }

    /**
     * Custom options to be passed to the `nuvei-pse` connector.
     */
    public TransactionConnectionOptions withNuveiPse(JsonNullable<? extends NuveiPSEOptions> nuveiPse) {
        Utils.checkNotNull(nuveiPse, "nuveiPse");
        this.nuveiPse = nuveiPse;
        return this;
    }

    /**
     * Custom options to be passed to the `oxxo-oxxo` connector.
     */
    public TransactionConnectionOptions withOxxoOxxo(OxxoOptions oxxoOxxo) {
        Utils.checkNotNull(oxxoOxxo, "oxxoOxxo");
        this.oxxoOxxo = JsonNullable.of(oxxoOxxo);
        return this;
    }

    /**
     * Custom options to be passed to the `oxxo-oxxo` connector.
     */
    public TransactionConnectionOptions withOxxoOxxo(JsonNullable<? extends OxxoOptions> oxxoOxxo) {
        Utils.checkNotNull(oxxoOxxo, "oxxoOxxo");
        this.oxxoOxxo = oxxoOxxo;
        return this;
    }

    /**
     * Custom options to be passed to the `paypal-paypal` connector.
     */
    public TransactionConnectionOptions withPaypalPaypal(PaypalOptions paypalPaypal) {
        Utils.checkNotNull(paypalPaypal, "paypalPaypal");
        this.paypalPaypal = JsonNullable.of(paypalPaypal);
        return this;
    }

    /**
     * Custom options to be passed to the `paypal-paypal` connector.
     */
    public TransactionConnectionOptions withPaypalPaypal(JsonNullable<? extends PaypalOptions> paypalPaypal) {
        Utils.checkNotNull(paypalPaypal, "paypalPaypal");
        this.paypalPaypal = paypalPaypal;
        return this;
    }

    /**
     * Custom options to be passed to the `paypal-paypalpaylater` connector.
     */
    public TransactionConnectionOptions withPaypalPaypalpaylater(PaypalOptions paypalPaypalpaylater) {
        Utils.checkNotNull(paypalPaypalpaylater, "paypalPaypalpaylater");
        this.paypalPaypalpaylater = JsonNullable.of(paypalPaypalpaylater);
        return this;
    }

    /**
     * Custom options to be passed to the `paypal-paypalpaylater` connector.
     */
    public TransactionConnectionOptions withPaypalPaypalpaylater(JsonNullable<? extends PaypalOptions> paypalPaypalpaylater) {
        Utils.checkNotNull(paypalPaypalpaylater, "paypalPaypalpaylater");
        this.paypalPaypalpaylater = paypalPaypalpaylater;
        return this;
    }

    /**
     * Custom options to be passed to the `powertranz-card` connector.
     */
    public TransactionConnectionOptions withPowertranzCard(PowertranzOptions powertranzCard) {
        Utils.checkNotNull(powertranzCard, "powertranzCard");
        this.powertranzCard = JsonNullable.of(powertranzCard);
        return this;
    }

    /**
     * Custom options to be passed to the `powertranz-card` connector.
     */
    public TransactionConnectionOptions withPowertranzCard(JsonNullable<? extends PowertranzOptions> powertranzCard) {
        Utils.checkNotNull(powertranzCard, "powertranzCard");
        this.powertranzCard = powertranzCard;
        return this;
    }

    /**
     * Custom options to be passed to the `stripe-card` connector.
     */
    public TransactionConnectionOptions withStripeCard(StripeOptions stripeCard) {
        Utils.checkNotNull(stripeCard, "stripeCard");
        this.stripeCard = JsonNullable.of(stripeCard);
        return this;
    }

    /**
     * Custom options to be passed to the `stripe-card` connector.
     */
    public TransactionConnectionOptions withStripeCard(JsonNullable<? extends StripeOptions> stripeCard) {
        Utils.checkNotNull(stripeCard, "stripeCard");
        this.stripeCard = stripeCard;
        return this;
    }

    /**
     * Custom options to be passed to the `travelhub-card` connector.
     */
    public TransactionConnectionOptions withTravelhubCard(TravelhubOptions travelhubCard) {
        Utils.checkNotNull(travelhubCard, "travelhubCard");
        this.travelhubCard = JsonNullable.of(travelhubCard);
        return this;
    }

    /**
     * Custom options to be passed to the `travelhub-card` connector.
     */
    public TransactionConnectionOptions withTravelhubCard(JsonNullable<? extends TravelhubOptions> travelhubCard) {
        Utils.checkNotNull(travelhubCard, "travelhubCard");
        this.travelhubCard = travelhubCard;
        return this;
    }

    /**
     * Custom options to be passed to the `trustly-trustly` connector.
     */
    public TransactionConnectionOptions withTrustlyTrustly(TrustlyOptions trustlyTrustly) {
        Utils.checkNotNull(trustlyTrustly, "trustlyTrustly");
        this.trustlyTrustly = JsonNullable.of(trustlyTrustly);
        return this;
    }

    /**
     * Custom options to be passed to the `trustly-trustly` connector.
     */
    public TransactionConnectionOptions withTrustlyTrustly(JsonNullable<? extends TrustlyOptions> trustlyTrustly) {
        Utils.checkNotNull(trustlyTrustly, "trustlyTrustly");
        this.trustlyTrustly = trustlyTrustly;
        return this;
    }

    /**
     * Custom options to be passed to the `wpay-everydaypay` connector.
     */
    public TransactionConnectionOptions withWpayEverydaypay(WpayEverdaypayOptions wpayEverydaypay) {
        Utils.checkNotNull(wpayEverydaypay, "wpayEverydaypay");
        this.wpayEverydaypay = JsonNullable.of(wpayEverydaypay);
        return this;
    }

    /**
     * Custom options to be passed to the `wpay-everydaypay` connector.
     */
    public TransactionConnectionOptions withWpayEverydaypay(JsonNullable<? extends WpayEverdaypayOptions> wpayEverydaypay) {
        Utils.checkNotNull(wpayEverydaypay, "wpayEverydaypay");
        this.wpayEverydaypay = wpayEverydaypay;
        return this;
    }

    /**
     * Custom options to be passed to the `wpay-payto` connector.
     */
    public TransactionConnectionOptions withWpayPayto(WpayPaytoOptions wpayPayto) {
        Utils.checkNotNull(wpayPayto, "wpayPayto");
        this.wpayPayto = JsonNullable.of(wpayPayto);
        return this;
    }

    /**
     * Custom options to be passed to the `wpay-payto` connector.
     */
    public TransactionConnectionOptions withWpayPayto(JsonNullable<? extends WpayPaytoOptions> wpayPayto) {
        Utils.checkNotNull(wpayPayto, "wpayPayto");
        this.wpayPayto = wpayPayto;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TransactionConnectionOptions other = (TransactionConnectionOptions) o;
        return 
            Utils.enhancedDeepEquals(this.accountUpdater, other.accountUpdater) &&
            Utils.enhancedDeepEquals(this.adyenAfterpay, other.adyenAfterpay) &&
            Utils.enhancedDeepEquals(this.adyenAlipay, other.adyenAlipay) &&
            Utils.enhancedDeepEquals(this.adyenCard, other.adyenCard) &&
            Utils.enhancedDeepEquals(this.adyenCashapp, other.adyenCashapp) &&
            Utils.enhancedDeepEquals(this.adyenGiropay, other.adyenGiropay) &&
            Utils.enhancedDeepEquals(this.adyenIdeal, other.adyenIdeal) &&
            Utils.enhancedDeepEquals(this.adyenSepa, other.adyenSepa) &&
            Utils.enhancedDeepEquals(this.adyenSofort, other.adyenSofort) &&
            Utils.enhancedDeepEquals(this.adyenVipps, other.adyenVipps) &&
            Utils.enhancedDeepEquals(this.affirmAffirm, other.affirmAffirm) &&
            Utils.enhancedDeepEquals(this.braintreeCard, other.braintreeCard) &&
            Utils.enhancedDeepEquals(this.cybersourceAntiFraud, other.cybersourceAntiFraud) &&
            Utils.enhancedDeepEquals(this.cybersourceCard, other.cybersourceCard) &&
            Utils.enhancedDeepEquals(this.cybersourceIdeal, other.cybersourceIdeal) &&
            Utils.enhancedDeepEquals(this.cybersourceKcp, other.cybersourceKcp) &&
            Utils.enhancedDeepEquals(this.dlocalNequi, other.dlocalNequi) &&
            Utils.enhancedDeepEquals(this.fiservCard, other.fiservCard) &&
            Utils.enhancedDeepEquals(this.forterAntiFraud, other.forterAntiFraud) &&
            Utils.enhancedDeepEquals(this.gemGem, other.gemGem) &&
            Utils.enhancedDeepEquals(this.gemGemds, other.gemGemds) &&
            Utils.enhancedDeepEquals(this.givingblockGivingblock, other.givingblockGivingblock) &&
            Utils.enhancedDeepEquals(this.latitudeLatitude, other.latitudeLatitude) &&
            Utils.enhancedDeepEquals(this.latitudeLatitudeds, other.latitudeLatitudeds) &&
            Utils.enhancedDeepEquals(this.mattildaTapi, other.mattildaTapi) &&
            Utils.enhancedDeepEquals(this.mattildaTapifintechs, other.mattildaTapifintechs) &&
            Utils.enhancedDeepEquals(this.mockCard, other.mockCard) &&
            Utils.enhancedDeepEquals(this.nuveiCard, other.nuveiCard) &&
            Utils.enhancedDeepEquals(this.nuveiPse, other.nuveiPse) &&
            Utils.enhancedDeepEquals(this.oxxoOxxo, other.oxxoOxxo) &&
            Utils.enhancedDeepEquals(this.paypalPaypal, other.paypalPaypal) &&
            Utils.enhancedDeepEquals(this.paypalPaypalpaylater, other.paypalPaypalpaylater) &&
            Utils.enhancedDeepEquals(this.powertranzCard, other.powertranzCard) &&
            Utils.enhancedDeepEquals(this.stripeCard, other.stripeCard) &&
            Utils.enhancedDeepEquals(this.travelhubCard, other.travelhubCard) &&
            Utils.enhancedDeepEquals(this.trustlyTrustly, other.trustlyTrustly) &&
            Utils.enhancedDeepEquals(this.wpayEverydaypay, other.wpayEverydaypay) &&
            Utils.enhancedDeepEquals(this.wpayPayto, other.wpayPayto);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            accountUpdater, adyenAfterpay, adyenAlipay,
            adyenCard, adyenCashapp, adyenGiropay,
            adyenIdeal, adyenSepa, adyenSofort,
            adyenVipps, affirmAffirm, braintreeCard,
            cybersourceAntiFraud, cybersourceCard, cybersourceIdeal,
            cybersourceKcp, dlocalNequi, fiservCard,
            forterAntiFraud, gemGem, gemGemds,
            givingblockGivingblock, latitudeLatitude, latitudeLatitudeds,
            mattildaTapi, mattildaTapifintechs, mockCard,
            nuveiCard, nuveiPse, oxxoOxxo,
            paypalPaypal, paypalPaypalpaylater, powertranzCard,
            stripeCard, travelhubCard, trustlyTrustly,
            wpayEverydaypay, wpayPayto);
    }
    
    @Override
    public String toString() {
        return Utils.toString(TransactionConnectionOptions.class,
                "accountUpdater", accountUpdater,
                "adyenAfterpay", adyenAfterpay,
                "adyenAlipay", adyenAlipay,
                "adyenCard", adyenCard,
                "adyenCashapp", adyenCashapp,
                "adyenGiropay", adyenGiropay,
                "adyenIdeal", adyenIdeal,
                "adyenSepa", adyenSepa,
                "adyenSofort", adyenSofort,
                "adyenVipps", adyenVipps,
                "affirmAffirm", affirmAffirm,
                "braintreeCard", braintreeCard,
                "cybersourceAntiFraud", cybersourceAntiFraud,
                "cybersourceCard", cybersourceCard,
                "cybersourceIdeal", cybersourceIdeal,
                "cybersourceKcp", cybersourceKcp,
                "dlocalNequi", dlocalNequi,
                "fiservCard", fiservCard,
                "forterAntiFraud", forterAntiFraud,
                "gemGem", gemGem,
                "gemGemds", gemGemds,
                "givingblockGivingblock", givingblockGivingblock,
                "latitudeLatitude", latitudeLatitude,
                "latitudeLatitudeds", latitudeLatitudeds,
                "mattildaTapi", mattildaTapi,
                "mattildaTapifintechs", mattildaTapifintechs,
                "mockCard", mockCard,
                "nuveiCard", nuveiCard,
                "nuveiPse", nuveiPse,
                "oxxoOxxo", oxxoOxxo,
                "paypalPaypal", paypalPaypal,
                "paypalPaypalpaylater", paypalPaypalpaylater,
                "powertranzCard", powertranzCard,
                "stripeCard", stripeCard,
                "travelhubCard", travelhubCard,
                "trustlyTrustly", trustlyTrustly,
                "wpayEverydaypay", wpayEverydaypay,
                "wpayPayto", wpayPayto);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<? extends AccountUpdaterOptions> accountUpdater = JsonNullable.undefined();

        private JsonNullable<? extends AdyenOptions> adyenAfterpay = JsonNullable.undefined();

        private JsonNullable<? extends AdyenOptions> adyenAlipay = JsonNullable.undefined();

        private JsonNullable<? extends AdyenCardOptions> adyenCard = JsonNullable.undefined();

        private JsonNullable<? extends AdyenOptions> adyenCashapp = JsonNullable.undefined();

        private JsonNullable<? extends AdyenOptions> adyenGiropay = JsonNullable.undefined();

        private JsonNullable<? extends AdyenOptions> adyenIdeal = JsonNullable.undefined();

        private JsonNullable<? extends AdyenSepaOptions> adyenSepa = JsonNullable.undefined();

        private JsonNullable<? extends AdyenOptions> adyenSofort = JsonNullable.undefined();

        private JsonNullable<? extends AdyenOptions> adyenVipps = JsonNullable.undefined();

        private JsonNullable<? extends AffirmOptions> affirmAffirm = JsonNullable.undefined();

        private JsonNullable<? extends BraintreeOptions> braintreeCard = JsonNullable.undefined();

        private JsonNullable<? extends CybersourceAntiFraudOptions> cybersourceAntiFraud = JsonNullable.undefined();

        private JsonNullable<? extends CybersourceOptions> cybersourceCard = JsonNullable.undefined();

        private JsonNullable<? extends CybersourceOptions> cybersourceIdeal = JsonNullable.undefined();

        private JsonNullable<? extends CybersourceOptions> cybersourceKcp = JsonNullable.undefined();

        private JsonNullable<? extends DlocalOptions> dlocalNequi = JsonNullable.undefined();

        private JsonNullable<? extends FiservOptions> fiservCard = JsonNullable.undefined();

        private JsonNullable<? extends ForterAntiFraudOptions> forterAntiFraud = JsonNullable.undefined();

        private JsonNullable<? extends LatitudeOptions> gemGem = JsonNullable.undefined();

        private JsonNullable<? extends LatitudeOptions> gemGemds = JsonNullable.undefined();

        private JsonNullable<? extends GivingBlockOptions> givingblockGivingblock = JsonNullable.undefined();

        private JsonNullable<? extends LatitudeOptions> latitudeLatitude = JsonNullable.undefined();

        private JsonNullable<? extends LatitudeOptions> latitudeLatitudeds = JsonNullable.undefined();

        private JsonNullable<? extends MattildaTapiOptions> mattildaTapi = JsonNullable.undefined();

        private JsonNullable<? extends MattildaTapiOptions> mattildaTapifintechs = JsonNullable.undefined();

        private JsonNullable<? extends MockCardOptions> mockCard = JsonNullable.undefined();

        private JsonNullable<? extends NuveiOptions> nuveiCard = JsonNullable.undefined();

        private JsonNullable<? extends NuveiPSEOptions> nuveiPse = JsonNullable.undefined();

        private JsonNullable<? extends OxxoOptions> oxxoOxxo = JsonNullable.undefined();

        private JsonNullable<? extends PaypalOptions> paypalPaypal = JsonNullable.undefined();

        private JsonNullable<? extends PaypalOptions> paypalPaypalpaylater = JsonNullable.undefined();

        private JsonNullable<? extends PowertranzOptions> powertranzCard = JsonNullable.undefined();

        private JsonNullable<? extends StripeOptions> stripeCard = JsonNullable.undefined();

        private JsonNullable<? extends TravelhubOptions> travelhubCard = JsonNullable.undefined();

        private JsonNullable<? extends TrustlyOptions> trustlyTrustly = JsonNullable.undefined();

        private JsonNullable<? extends WpayEverdaypayOptions> wpayEverydaypay = JsonNullable.undefined();

        private JsonNullable<? extends WpayPaytoOptions> wpayPayto = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Custom options to be passed to the `account-updater` connector, allowing for simulating different
         * account updater responses.
         */
        public Builder accountUpdater(AccountUpdaterOptions accountUpdater) {
            Utils.checkNotNull(accountUpdater, "accountUpdater");
            this.accountUpdater = JsonNullable.of(accountUpdater);
            return this;
        }

        /**
         * Custom options to be passed to the `account-updater` connector, allowing for simulating different
         * account updater responses.
         */
        public Builder accountUpdater(JsonNullable<? extends AccountUpdaterOptions> accountUpdater) {
            Utils.checkNotNull(accountUpdater, "accountUpdater");
            this.accountUpdater = accountUpdater;
            return this;
        }


        /**
         * Custom options to be passed to the `adyen-afterpay` connector.
         */
        public Builder adyenAfterpay(AdyenOptions adyenAfterpay) {
            Utils.checkNotNull(adyenAfterpay, "adyenAfterpay");
            this.adyenAfterpay = JsonNullable.of(adyenAfterpay);
            return this;
        }

        /**
         * Custom options to be passed to the `adyen-afterpay` connector.
         */
        public Builder adyenAfterpay(JsonNullable<? extends AdyenOptions> adyenAfterpay) {
            Utils.checkNotNull(adyenAfterpay, "adyenAfterpay");
            this.adyenAfterpay = adyenAfterpay;
            return this;
        }


        /**
         * Custom options to be passed to the `adyen-alipay` connector.
         */
        public Builder adyenAlipay(AdyenOptions adyenAlipay) {
            Utils.checkNotNull(adyenAlipay, "adyenAlipay");
            this.adyenAlipay = JsonNullable.of(adyenAlipay);
            return this;
        }

        /**
         * Custom options to be passed to the `adyen-alipay` connector.
         */
        public Builder adyenAlipay(JsonNullable<? extends AdyenOptions> adyenAlipay) {
            Utils.checkNotNull(adyenAlipay, "adyenAlipay");
            this.adyenAlipay = adyenAlipay;
            return this;
        }


        /**
         * Custom options to be passed to the `adyen-card` connector.
         */
        public Builder adyenCard(AdyenCardOptions adyenCard) {
            Utils.checkNotNull(adyenCard, "adyenCard");
            this.adyenCard = JsonNullable.of(adyenCard);
            return this;
        }

        /**
         * Custom options to be passed to the `adyen-card` connector.
         */
        public Builder adyenCard(JsonNullable<? extends AdyenCardOptions> adyenCard) {
            Utils.checkNotNull(adyenCard, "adyenCard");
            this.adyenCard = adyenCard;
            return this;
        }


        /**
         * Custom options to be passed to the `adyen-cashapp` connector.
         */
        public Builder adyenCashapp(AdyenOptions adyenCashapp) {
            Utils.checkNotNull(adyenCashapp, "adyenCashapp");
            this.adyenCashapp = JsonNullable.of(adyenCashapp);
            return this;
        }

        /**
         * Custom options to be passed to the `adyen-cashapp` connector.
         */
        public Builder adyenCashapp(JsonNullable<? extends AdyenOptions> adyenCashapp) {
            Utils.checkNotNull(adyenCashapp, "adyenCashapp");
            this.adyenCashapp = adyenCashapp;
            return this;
        }


        /**
         * Custom options to be passed to the `adyen-giropay` connector.
         */
        public Builder adyenGiropay(AdyenOptions adyenGiropay) {
            Utils.checkNotNull(adyenGiropay, "adyenGiropay");
            this.adyenGiropay = JsonNullable.of(adyenGiropay);
            return this;
        }

        /**
         * Custom options to be passed to the `adyen-giropay` connector.
         */
        public Builder adyenGiropay(JsonNullable<? extends AdyenOptions> adyenGiropay) {
            Utils.checkNotNull(adyenGiropay, "adyenGiropay");
            this.adyenGiropay = adyenGiropay;
            return this;
        }


        /**
         * Custom options to be passed to the `adyen-ideal` connector.
         */
        public Builder adyenIdeal(AdyenOptions adyenIdeal) {
            Utils.checkNotNull(adyenIdeal, "adyenIdeal");
            this.adyenIdeal = JsonNullable.of(adyenIdeal);
            return this;
        }

        /**
         * Custom options to be passed to the `adyen-ideal` connector.
         */
        public Builder adyenIdeal(JsonNullable<? extends AdyenOptions> adyenIdeal) {
            Utils.checkNotNull(adyenIdeal, "adyenIdeal");
            this.adyenIdeal = adyenIdeal;
            return this;
        }


        /**
         * Custom options to be passed to the `adyen-sepa` connector.
         */
        public Builder adyenSepa(AdyenSepaOptions adyenSepa) {
            Utils.checkNotNull(adyenSepa, "adyenSepa");
            this.adyenSepa = JsonNullable.of(adyenSepa);
            return this;
        }

        /**
         * Custom options to be passed to the `adyen-sepa` connector.
         */
        public Builder adyenSepa(JsonNullable<? extends AdyenSepaOptions> adyenSepa) {
            Utils.checkNotNull(adyenSepa, "adyenSepa");
            this.adyenSepa = adyenSepa;
            return this;
        }


        /**
         * Custom options to be passed to the `adyen-sofort` connector.
         */
        public Builder adyenSofort(AdyenOptions adyenSofort) {
            Utils.checkNotNull(adyenSofort, "adyenSofort");
            this.adyenSofort = JsonNullable.of(adyenSofort);
            return this;
        }

        /**
         * Custom options to be passed to the `adyen-sofort` connector.
         */
        public Builder adyenSofort(JsonNullable<? extends AdyenOptions> adyenSofort) {
            Utils.checkNotNull(adyenSofort, "adyenSofort");
            this.adyenSofort = adyenSofort;
            return this;
        }


        /**
         * Custom options to be passed to the `adyen-vipps` connector.
         */
        public Builder adyenVipps(AdyenOptions adyenVipps) {
            Utils.checkNotNull(adyenVipps, "adyenVipps");
            this.adyenVipps = JsonNullable.of(adyenVipps);
            return this;
        }

        /**
         * Custom options to be passed to the `adyen-vipps` connector.
         */
        public Builder adyenVipps(JsonNullable<? extends AdyenOptions> adyenVipps) {
            Utils.checkNotNull(adyenVipps, "adyenVipps");
            this.adyenVipps = adyenVipps;
            return this;
        }


        /**
         * Custom options to be passed to the `affirm-affirm` connector.
         */
        public Builder affirmAffirm(AffirmOptions affirmAffirm) {
            Utils.checkNotNull(affirmAffirm, "affirmAffirm");
            this.affirmAffirm = JsonNullable.of(affirmAffirm);
            return this;
        }

        /**
         * Custom options to be passed to the `affirm-affirm` connector.
         */
        public Builder affirmAffirm(JsonNullable<? extends AffirmOptions> affirmAffirm) {
            Utils.checkNotNull(affirmAffirm, "affirmAffirm");
            this.affirmAffirm = affirmAffirm;
            return this;
        }


        /**
         * Custom options to be passed to the `braintree-card` connector.
         */
        public Builder braintreeCard(BraintreeOptions braintreeCard) {
            Utils.checkNotNull(braintreeCard, "braintreeCard");
            this.braintreeCard = JsonNullable.of(braintreeCard);
            return this;
        }

        /**
         * Custom options to be passed to the `braintree-card` connector.
         */
        public Builder braintreeCard(JsonNullable<? extends BraintreeOptions> braintreeCard) {
            Utils.checkNotNull(braintreeCard, "braintreeCard");
            this.braintreeCard = braintreeCard;
            return this;
        }


        /**
         * Custom options to be passed to the `cybersource-anti-fraud` connector.
         */
        public Builder cybersourceAntiFraud(CybersourceAntiFraudOptions cybersourceAntiFraud) {
            Utils.checkNotNull(cybersourceAntiFraud, "cybersourceAntiFraud");
            this.cybersourceAntiFraud = JsonNullable.of(cybersourceAntiFraud);
            return this;
        }

        /**
         * Custom options to be passed to the `cybersource-anti-fraud` connector.
         */
        public Builder cybersourceAntiFraud(JsonNullable<? extends CybersourceAntiFraudOptions> cybersourceAntiFraud) {
            Utils.checkNotNull(cybersourceAntiFraud, "cybersourceAntiFraud");
            this.cybersourceAntiFraud = cybersourceAntiFraud;
            return this;
        }


        /**
         * Custom options to be passed to the `cybersource-card` connector.
         */
        public Builder cybersourceCard(CybersourceOptions cybersourceCard) {
            Utils.checkNotNull(cybersourceCard, "cybersourceCard");
            this.cybersourceCard = JsonNullable.of(cybersourceCard);
            return this;
        }

        /**
         * Custom options to be passed to the `cybersource-card` connector.
         */
        public Builder cybersourceCard(JsonNullable<? extends CybersourceOptions> cybersourceCard) {
            Utils.checkNotNull(cybersourceCard, "cybersourceCard");
            this.cybersourceCard = cybersourceCard;
            return this;
        }


        /**
         * Custom options to be passed to the `cybersource-ideal` connector.
         */
        public Builder cybersourceIdeal(CybersourceOptions cybersourceIdeal) {
            Utils.checkNotNull(cybersourceIdeal, "cybersourceIdeal");
            this.cybersourceIdeal = JsonNullable.of(cybersourceIdeal);
            return this;
        }

        /**
         * Custom options to be passed to the `cybersource-ideal` connector.
         */
        public Builder cybersourceIdeal(JsonNullable<? extends CybersourceOptions> cybersourceIdeal) {
            Utils.checkNotNull(cybersourceIdeal, "cybersourceIdeal");
            this.cybersourceIdeal = cybersourceIdeal;
            return this;
        }


        /**
         * Custom options to be passed to the `cybersource-kcp` connector.
         */
        public Builder cybersourceKcp(CybersourceOptions cybersourceKcp) {
            Utils.checkNotNull(cybersourceKcp, "cybersourceKcp");
            this.cybersourceKcp = JsonNullable.of(cybersourceKcp);
            return this;
        }

        /**
         * Custom options to be passed to the `cybersource-kcp` connector.
         */
        public Builder cybersourceKcp(JsonNullable<? extends CybersourceOptions> cybersourceKcp) {
            Utils.checkNotNull(cybersourceKcp, "cybersourceKcp");
            this.cybersourceKcp = cybersourceKcp;
            return this;
        }


        /**
         * Custom options to be passed to the `dlocal-nequi` connector.
         */
        public Builder dlocalNequi(DlocalOptions dlocalNequi) {
            Utils.checkNotNull(dlocalNequi, "dlocalNequi");
            this.dlocalNequi = JsonNullable.of(dlocalNequi);
            return this;
        }

        /**
         * Custom options to be passed to the `dlocal-nequi` connector.
         */
        public Builder dlocalNequi(JsonNullable<? extends DlocalOptions> dlocalNequi) {
            Utils.checkNotNull(dlocalNequi, "dlocalNequi");
            this.dlocalNequi = dlocalNequi;
            return this;
        }


        /**
         * Custom options to be passed to the `fiserv-card` connector.
         */
        public Builder fiservCard(FiservOptions fiservCard) {
            Utils.checkNotNull(fiservCard, "fiservCard");
            this.fiservCard = JsonNullable.of(fiservCard);
            return this;
        }

        /**
         * Custom options to be passed to the `fiserv-card` connector.
         */
        public Builder fiservCard(JsonNullable<? extends FiservOptions> fiservCard) {
            Utils.checkNotNull(fiservCard, "fiservCard");
            this.fiservCard = fiservCard;
            return this;
        }


        /**
         * Custom options to be passed to the `forter-anti-fraud` connector.
         */
        public Builder forterAntiFraud(ForterAntiFraudOptions forterAntiFraud) {
            Utils.checkNotNull(forterAntiFraud, "forterAntiFraud");
            this.forterAntiFraud = JsonNullable.of(forterAntiFraud);
            return this;
        }

        /**
         * Custom options to be passed to the `forter-anti-fraud` connector.
         */
        public Builder forterAntiFraud(JsonNullable<? extends ForterAntiFraudOptions> forterAntiFraud) {
            Utils.checkNotNull(forterAntiFraud, "forterAntiFraud");
            this.forterAntiFraud = forterAntiFraud;
            return this;
        }


        /**
         * Custom options to be passed to the `gem-gem` connector.
         */
        public Builder gemGem(LatitudeOptions gemGem) {
            Utils.checkNotNull(gemGem, "gemGem");
            this.gemGem = JsonNullable.of(gemGem);
            return this;
        }

        /**
         * Custom options to be passed to the `gem-gem` connector.
         */
        public Builder gemGem(JsonNullable<? extends LatitudeOptions> gemGem) {
            Utils.checkNotNull(gemGem, "gemGem");
            this.gemGem = gemGem;
            return this;
        }


        /**
         * Custom options to be passed to the `gem-gemds` connector.
         */
        public Builder gemGemds(LatitudeOptions gemGemds) {
            Utils.checkNotNull(gemGemds, "gemGemds");
            this.gemGemds = JsonNullable.of(gemGemds);
            return this;
        }

        /**
         * Custom options to be passed to the `gem-gemds` connector.
         */
        public Builder gemGemds(JsonNullable<? extends LatitudeOptions> gemGemds) {
            Utils.checkNotNull(gemGemds, "gemGemds");
            this.gemGemds = gemGemds;
            return this;
        }


        /**
         * Custom options to be passed to the `givingblock-givingblock` connector.
         */
        public Builder givingblockGivingblock(GivingBlockOptions givingblockGivingblock) {
            Utils.checkNotNull(givingblockGivingblock, "givingblockGivingblock");
            this.givingblockGivingblock = JsonNullable.of(givingblockGivingblock);
            return this;
        }

        /**
         * Custom options to be passed to the `givingblock-givingblock` connector.
         */
        public Builder givingblockGivingblock(JsonNullable<? extends GivingBlockOptions> givingblockGivingblock) {
            Utils.checkNotNull(givingblockGivingblock, "givingblockGivingblock");
            this.givingblockGivingblock = givingblockGivingblock;
            return this;
        }


        /**
         * Custom options to be passed to the `latitude-latitude` connector.
         */
        public Builder latitudeLatitude(LatitudeOptions latitudeLatitude) {
            Utils.checkNotNull(latitudeLatitude, "latitudeLatitude");
            this.latitudeLatitude = JsonNullable.of(latitudeLatitude);
            return this;
        }

        /**
         * Custom options to be passed to the `latitude-latitude` connector.
         */
        public Builder latitudeLatitude(JsonNullable<? extends LatitudeOptions> latitudeLatitude) {
            Utils.checkNotNull(latitudeLatitude, "latitudeLatitude");
            this.latitudeLatitude = latitudeLatitude;
            return this;
        }


        /**
         * Custom options to be passed to the `latitude-latitudeds` connector.
         */
        public Builder latitudeLatitudeds(LatitudeOptions latitudeLatitudeds) {
            Utils.checkNotNull(latitudeLatitudeds, "latitudeLatitudeds");
            this.latitudeLatitudeds = JsonNullable.of(latitudeLatitudeds);
            return this;
        }

        /**
         * Custom options to be passed to the `latitude-latitudeds` connector.
         */
        public Builder latitudeLatitudeds(JsonNullable<? extends LatitudeOptions> latitudeLatitudeds) {
            Utils.checkNotNull(latitudeLatitudeds, "latitudeLatitudeds");
            this.latitudeLatitudeds = latitudeLatitudeds;
            return this;
        }


        /**
         * Custom options to be passed to the `mattilda-tapi` connector.
         */
        public Builder mattildaTapi(MattildaTapiOptions mattildaTapi) {
            Utils.checkNotNull(mattildaTapi, "mattildaTapi");
            this.mattildaTapi = JsonNullable.of(mattildaTapi);
            return this;
        }

        /**
         * Custom options to be passed to the `mattilda-tapi` connector.
         */
        public Builder mattildaTapi(JsonNullable<? extends MattildaTapiOptions> mattildaTapi) {
            Utils.checkNotNull(mattildaTapi, "mattildaTapi");
            this.mattildaTapi = mattildaTapi;
            return this;
        }


        /**
         * Custom options to be passed to the `mattilda-tapifintechs` connector.
         */
        public Builder mattildaTapifintechs(MattildaTapiOptions mattildaTapifintechs) {
            Utils.checkNotNull(mattildaTapifintechs, "mattildaTapifintechs");
            this.mattildaTapifintechs = JsonNullable.of(mattildaTapifintechs);
            return this;
        }

        /**
         * Custom options to be passed to the `mattilda-tapifintechs` connector.
         */
        public Builder mattildaTapifintechs(JsonNullable<? extends MattildaTapiOptions> mattildaTapifintechs) {
            Utils.checkNotNull(mattildaTapifintechs, "mattildaTapifintechs");
            this.mattildaTapifintechs = mattildaTapifintechs;
            return this;
        }


        /**
         * Custom options to be passed to the `mock-card` connector.
         */
        public Builder mockCard(MockCardOptions mockCard) {
            Utils.checkNotNull(mockCard, "mockCard");
            this.mockCard = JsonNullable.of(mockCard);
            return this;
        }

        /**
         * Custom options to be passed to the `mock-card` connector.
         */
        public Builder mockCard(JsonNullable<? extends MockCardOptions> mockCard) {
            Utils.checkNotNull(mockCard, "mockCard");
            this.mockCard = mockCard;
            return this;
        }


        /**
         * Custom options to be passed to the `nuvei-card` connector.
         */
        public Builder nuveiCard(NuveiOptions nuveiCard) {
            Utils.checkNotNull(nuveiCard, "nuveiCard");
            this.nuveiCard = JsonNullable.of(nuveiCard);
            return this;
        }

        /**
         * Custom options to be passed to the `nuvei-card` connector.
         */
        public Builder nuveiCard(JsonNullable<? extends NuveiOptions> nuveiCard) {
            Utils.checkNotNull(nuveiCard, "nuveiCard");
            this.nuveiCard = nuveiCard;
            return this;
        }


        /**
         * Custom options to be passed to the `nuvei-pse` connector.
         */
        public Builder nuveiPse(NuveiPSEOptions nuveiPse) {
            Utils.checkNotNull(nuveiPse, "nuveiPse");
            this.nuveiPse = JsonNullable.of(nuveiPse);
            return this;
        }

        /**
         * Custom options to be passed to the `nuvei-pse` connector.
         */
        public Builder nuveiPse(JsonNullable<? extends NuveiPSEOptions> nuveiPse) {
            Utils.checkNotNull(nuveiPse, "nuveiPse");
            this.nuveiPse = nuveiPse;
            return this;
        }


        /**
         * Custom options to be passed to the `oxxo-oxxo` connector.
         */
        public Builder oxxoOxxo(OxxoOptions oxxoOxxo) {
            Utils.checkNotNull(oxxoOxxo, "oxxoOxxo");
            this.oxxoOxxo = JsonNullable.of(oxxoOxxo);
            return this;
        }

        /**
         * Custom options to be passed to the `oxxo-oxxo` connector.
         */
        public Builder oxxoOxxo(JsonNullable<? extends OxxoOptions> oxxoOxxo) {
            Utils.checkNotNull(oxxoOxxo, "oxxoOxxo");
            this.oxxoOxxo = oxxoOxxo;
            return this;
        }


        /**
         * Custom options to be passed to the `paypal-paypal` connector.
         */
        public Builder paypalPaypal(PaypalOptions paypalPaypal) {
            Utils.checkNotNull(paypalPaypal, "paypalPaypal");
            this.paypalPaypal = JsonNullable.of(paypalPaypal);
            return this;
        }

        /**
         * Custom options to be passed to the `paypal-paypal` connector.
         */
        public Builder paypalPaypal(JsonNullable<? extends PaypalOptions> paypalPaypal) {
            Utils.checkNotNull(paypalPaypal, "paypalPaypal");
            this.paypalPaypal = paypalPaypal;
            return this;
        }


        /**
         * Custom options to be passed to the `paypal-paypalpaylater` connector.
         */
        public Builder paypalPaypalpaylater(PaypalOptions paypalPaypalpaylater) {
            Utils.checkNotNull(paypalPaypalpaylater, "paypalPaypalpaylater");
            this.paypalPaypalpaylater = JsonNullable.of(paypalPaypalpaylater);
            return this;
        }

        /**
         * Custom options to be passed to the `paypal-paypalpaylater` connector.
         */
        public Builder paypalPaypalpaylater(JsonNullable<? extends PaypalOptions> paypalPaypalpaylater) {
            Utils.checkNotNull(paypalPaypalpaylater, "paypalPaypalpaylater");
            this.paypalPaypalpaylater = paypalPaypalpaylater;
            return this;
        }


        /**
         * Custom options to be passed to the `powertranz-card` connector.
         */
        public Builder powertranzCard(PowertranzOptions powertranzCard) {
            Utils.checkNotNull(powertranzCard, "powertranzCard");
            this.powertranzCard = JsonNullable.of(powertranzCard);
            return this;
        }

        /**
         * Custom options to be passed to the `powertranz-card` connector.
         */
        public Builder powertranzCard(JsonNullable<? extends PowertranzOptions> powertranzCard) {
            Utils.checkNotNull(powertranzCard, "powertranzCard");
            this.powertranzCard = powertranzCard;
            return this;
        }


        /**
         * Custom options to be passed to the `stripe-card` connector.
         */
        public Builder stripeCard(StripeOptions stripeCard) {
            Utils.checkNotNull(stripeCard, "stripeCard");
            this.stripeCard = JsonNullable.of(stripeCard);
            return this;
        }

        /**
         * Custom options to be passed to the `stripe-card` connector.
         */
        public Builder stripeCard(JsonNullable<? extends StripeOptions> stripeCard) {
            Utils.checkNotNull(stripeCard, "stripeCard");
            this.stripeCard = stripeCard;
            return this;
        }


        /**
         * Custom options to be passed to the `travelhub-card` connector.
         */
        public Builder travelhubCard(TravelhubOptions travelhubCard) {
            Utils.checkNotNull(travelhubCard, "travelhubCard");
            this.travelhubCard = JsonNullable.of(travelhubCard);
            return this;
        }

        /**
         * Custom options to be passed to the `travelhub-card` connector.
         */
        public Builder travelhubCard(JsonNullable<? extends TravelhubOptions> travelhubCard) {
            Utils.checkNotNull(travelhubCard, "travelhubCard");
            this.travelhubCard = travelhubCard;
            return this;
        }


        /**
         * Custom options to be passed to the `trustly-trustly` connector.
         */
        public Builder trustlyTrustly(TrustlyOptions trustlyTrustly) {
            Utils.checkNotNull(trustlyTrustly, "trustlyTrustly");
            this.trustlyTrustly = JsonNullable.of(trustlyTrustly);
            return this;
        }

        /**
         * Custom options to be passed to the `trustly-trustly` connector.
         */
        public Builder trustlyTrustly(JsonNullable<? extends TrustlyOptions> trustlyTrustly) {
            Utils.checkNotNull(trustlyTrustly, "trustlyTrustly");
            this.trustlyTrustly = trustlyTrustly;
            return this;
        }


        /**
         * Custom options to be passed to the `wpay-everydaypay` connector.
         */
        public Builder wpayEverydaypay(WpayEverdaypayOptions wpayEverydaypay) {
            Utils.checkNotNull(wpayEverydaypay, "wpayEverydaypay");
            this.wpayEverydaypay = JsonNullable.of(wpayEverydaypay);
            return this;
        }

        /**
         * Custom options to be passed to the `wpay-everydaypay` connector.
         */
        public Builder wpayEverydaypay(JsonNullable<? extends WpayEverdaypayOptions> wpayEverydaypay) {
            Utils.checkNotNull(wpayEverydaypay, "wpayEverydaypay");
            this.wpayEverydaypay = wpayEverydaypay;
            return this;
        }


        /**
         * Custom options to be passed to the `wpay-payto` connector.
         */
        public Builder wpayPayto(WpayPaytoOptions wpayPayto) {
            Utils.checkNotNull(wpayPayto, "wpayPayto");
            this.wpayPayto = JsonNullable.of(wpayPayto);
            return this;
        }

        /**
         * Custom options to be passed to the `wpay-payto` connector.
         */
        public Builder wpayPayto(JsonNullable<? extends WpayPaytoOptions> wpayPayto) {
            Utils.checkNotNull(wpayPayto, "wpayPayto");
            this.wpayPayto = wpayPayto;
            return this;
        }

        public TransactionConnectionOptions build() {

            return new TransactionConnectionOptions(
                accountUpdater, adyenAfterpay, adyenAlipay,
                adyenCard, adyenCashapp, adyenGiropay,
                adyenIdeal, adyenSepa, adyenSofort,
                adyenVipps, affirmAffirm, braintreeCard,
                cybersourceAntiFraud, cybersourceCard, cybersourceIdeal,
                cybersourceKcp, dlocalNequi, fiservCard,
                forterAntiFraud, gemGem, gemGemds,
                givingblockGivingblock, latitudeLatitude, latitudeLatitudeds,
                mattildaTapi, mattildaTapifintechs, mockCard,
                nuveiCard, nuveiPse, oxxoOxxo,
                paypalPaypal, paypalPaypalpaylater, powertranzCard,
                stripeCard, travelhubCard, trustlyTrustly,
                wpayEverydaypay, wpayPayto);
        }

    }
}
