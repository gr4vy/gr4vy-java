/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Objects;

public class GiftCardBalanceRequest {

    /**
     * A list of gift cards to request a balance for.
     */
    @JsonProperty("items")
    private List<Item> items;

    @JsonCreator
    public GiftCardBalanceRequest(
            @JsonProperty("items") List<Item> items) {
        Utils.checkNotNull(items, "items");
        this.items = items;
    }

    /**
     * A list of gift cards to request a balance for.
     */
    @JsonIgnore
    public List<Item> items() {
        return items;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * A list of gift cards to request a balance for.
     */
    public GiftCardBalanceRequest withItems(List<Item> items) {
        Utils.checkNotNull(items, "items");
        this.items = items;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GiftCardBalanceRequest other = (GiftCardBalanceRequest) o;
        return 
            Objects.deepEquals(this.items, other.items);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            items);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GiftCardBalanceRequest.class,
                "items", items);
    }
    
    public final static class Builder {
 
        private List<Item> items;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * A list of gift cards to request a balance for.
         */
        public Builder items(List<Item> items) {
            Utils.checkNotNull(items, "items");
            this.items = items;
            return this;
        }
        
        public GiftCardBalanceRequest build() {
            return new GiftCardBalanceRequest(
                items);
        }
    }
}
