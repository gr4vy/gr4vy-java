/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class MockCardMerchantAdviceCodeOptions {
    /**
     * The MAC to return for this request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("result")
    private JsonNullable<String> result;

    /**
     * When set, the MAC is only returned if the card number matches this account number.
     */
    @JsonInclude(Include.ALWAYS)
    @JsonProperty("account_number")
    private Optional<String> accountNumber;

    @JsonCreator
    public MockCardMerchantAdviceCodeOptions(
            @JsonProperty("result") JsonNullable<String> result,
            @JsonProperty("account_number") Optional<String> accountNumber) {
        Utils.checkNotNull(result, "result");
        Utils.checkNotNull(accountNumber, "accountNumber");
        this.result = result;
        this.accountNumber = accountNumber;
    }
    
    public MockCardMerchantAdviceCodeOptions() {
        this(JsonNullable.undefined(), Optional.empty());
    }

    /**
     * The MAC to return for this request.
     */
    @JsonIgnore
    public JsonNullable<String> result() {
        return result;
    }

    /**
     * When set, the MAC is only returned if the card number matches this account number.
     */
    @JsonIgnore
    public Optional<String> accountNumber() {
        return accountNumber;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The MAC to return for this request.
     */
    public MockCardMerchantAdviceCodeOptions withResult(String result) {
        Utils.checkNotNull(result, "result");
        this.result = JsonNullable.of(result);
        return this;
    }

    /**
     * The MAC to return for this request.
     */
    public MockCardMerchantAdviceCodeOptions withResult(JsonNullable<String> result) {
        Utils.checkNotNull(result, "result");
        this.result = result;
        return this;
    }

    /**
     * When set, the MAC is only returned if the card number matches this account number.
     */
    public MockCardMerchantAdviceCodeOptions withAccountNumber(String accountNumber) {
        Utils.checkNotNull(accountNumber, "accountNumber");
        this.accountNumber = Optional.ofNullable(accountNumber);
        return this;
    }


    /**
     * When set, the MAC is only returned if the card number matches this account number.
     */
    public MockCardMerchantAdviceCodeOptions withAccountNumber(Optional<String> accountNumber) {
        Utils.checkNotNull(accountNumber, "accountNumber");
        this.accountNumber = accountNumber;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MockCardMerchantAdviceCodeOptions other = (MockCardMerchantAdviceCodeOptions) o;
        return 
            Utils.enhancedDeepEquals(this.result, other.result) &&
            Utils.enhancedDeepEquals(this.accountNumber, other.accountNumber);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            result, accountNumber);
    }
    
    @Override
    public String toString() {
        return Utils.toString(MockCardMerchantAdviceCodeOptions.class,
                "result", result,
                "accountNumber", accountNumber);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<String> result = JsonNullable.undefined();

        private Optional<String> accountNumber = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The MAC to return for this request.
         */
        public Builder result(String result) {
            Utils.checkNotNull(result, "result");
            this.result = JsonNullable.of(result);
            return this;
        }

        /**
         * The MAC to return for this request.
         */
        public Builder result(JsonNullable<String> result) {
            Utils.checkNotNull(result, "result");
            this.result = result;
            return this;
        }


        /**
         * When set, the MAC is only returned if the card number matches this account number.
         */
        public Builder accountNumber(String accountNumber) {
            Utils.checkNotNull(accountNumber, "accountNumber");
            this.accountNumber = Optional.ofNullable(accountNumber);
            return this;
        }

        /**
         * When set, the MAC is only returned if the card number matches this account number.
         */
        public Builder accountNumber(Optional<String> accountNumber) {
            Utils.checkNotNull(accountNumber, "accountNumber");
            this.accountNumber = accountNumber;
            return this;
        }

        public MockCardMerchantAdviceCodeOptions build() {

            return new MockCardMerchantAdviceCodeOptions(
                result, accountNumber);
        }

    }
}
