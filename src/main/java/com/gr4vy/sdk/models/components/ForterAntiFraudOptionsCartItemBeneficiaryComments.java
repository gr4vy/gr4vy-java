/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import org.openapitools.jackson.nullable.JsonNullable;


public class ForterAntiFraudOptionsCartItemBeneficiaryComments {
    /**
     * Comments from the user to the merchant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_comments_to_merchant")
    private JsonNullable<String> userCommentsToMerchant;

    /**
     * Message intended for the beneficiary of the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message_to_beneficiary")
    private JsonNullable<String> messageToBeneficiary;

    /**
     * Comments from the merchant about this transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchant_comments")
    private JsonNullable<String> merchantComments;

    @JsonCreator
    public ForterAntiFraudOptionsCartItemBeneficiaryComments(
            @JsonProperty("user_comments_to_merchant") JsonNullable<String> userCommentsToMerchant,
            @JsonProperty("message_to_beneficiary") JsonNullable<String> messageToBeneficiary,
            @JsonProperty("merchant_comments") JsonNullable<String> merchantComments) {
        Utils.checkNotNull(userCommentsToMerchant, "userCommentsToMerchant");
        Utils.checkNotNull(messageToBeneficiary, "messageToBeneficiary");
        Utils.checkNotNull(merchantComments, "merchantComments");
        this.userCommentsToMerchant = userCommentsToMerchant;
        this.messageToBeneficiary = messageToBeneficiary;
        this.merchantComments = merchantComments;
    }
    
    public ForterAntiFraudOptionsCartItemBeneficiaryComments() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * Comments from the user to the merchant.
     */
    @JsonIgnore
    public JsonNullable<String> userCommentsToMerchant() {
        return userCommentsToMerchant;
    }

    /**
     * Message intended for the beneficiary of the item.
     */
    @JsonIgnore
    public JsonNullable<String> messageToBeneficiary() {
        return messageToBeneficiary;
    }

    /**
     * Comments from the merchant about this transaction.
     */
    @JsonIgnore
    public JsonNullable<String> merchantComments() {
        return merchantComments;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Comments from the user to the merchant.
     */
    public ForterAntiFraudOptionsCartItemBeneficiaryComments withUserCommentsToMerchant(String userCommentsToMerchant) {
        Utils.checkNotNull(userCommentsToMerchant, "userCommentsToMerchant");
        this.userCommentsToMerchant = JsonNullable.of(userCommentsToMerchant);
        return this;
    }

    /**
     * Comments from the user to the merchant.
     */
    public ForterAntiFraudOptionsCartItemBeneficiaryComments withUserCommentsToMerchant(JsonNullable<String> userCommentsToMerchant) {
        Utils.checkNotNull(userCommentsToMerchant, "userCommentsToMerchant");
        this.userCommentsToMerchant = userCommentsToMerchant;
        return this;
    }

    /**
     * Message intended for the beneficiary of the item.
     */
    public ForterAntiFraudOptionsCartItemBeneficiaryComments withMessageToBeneficiary(String messageToBeneficiary) {
        Utils.checkNotNull(messageToBeneficiary, "messageToBeneficiary");
        this.messageToBeneficiary = JsonNullable.of(messageToBeneficiary);
        return this;
    }

    /**
     * Message intended for the beneficiary of the item.
     */
    public ForterAntiFraudOptionsCartItemBeneficiaryComments withMessageToBeneficiary(JsonNullable<String> messageToBeneficiary) {
        Utils.checkNotNull(messageToBeneficiary, "messageToBeneficiary");
        this.messageToBeneficiary = messageToBeneficiary;
        return this;
    }

    /**
     * Comments from the merchant about this transaction.
     */
    public ForterAntiFraudOptionsCartItemBeneficiaryComments withMerchantComments(String merchantComments) {
        Utils.checkNotNull(merchantComments, "merchantComments");
        this.merchantComments = JsonNullable.of(merchantComments);
        return this;
    }

    /**
     * Comments from the merchant about this transaction.
     */
    public ForterAntiFraudOptionsCartItemBeneficiaryComments withMerchantComments(JsonNullable<String> merchantComments) {
        Utils.checkNotNull(merchantComments, "merchantComments");
        this.merchantComments = merchantComments;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ForterAntiFraudOptionsCartItemBeneficiaryComments other = (ForterAntiFraudOptionsCartItemBeneficiaryComments) o;
        return 
            Utils.enhancedDeepEquals(this.userCommentsToMerchant, other.userCommentsToMerchant) &&
            Utils.enhancedDeepEquals(this.messageToBeneficiary, other.messageToBeneficiary) &&
            Utils.enhancedDeepEquals(this.merchantComments, other.merchantComments);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            userCommentsToMerchant, messageToBeneficiary, merchantComments);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ForterAntiFraudOptionsCartItemBeneficiaryComments.class,
                "userCommentsToMerchant", userCommentsToMerchant,
                "messageToBeneficiary", messageToBeneficiary,
                "merchantComments", merchantComments);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<String> userCommentsToMerchant = JsonNullable.undefined();

        private JsonNullable<String> messageToBeneficiary = JsonNullable.undefined();

        private JsonNullable<String> merchantComments = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Comments from the user to the merchant.
         */
        public Builder userCommentsToMerchant(String userCommentsToMerchant) {
            Utils.checkNotNull(userCommentsToMerchant, "userCommentsToMerchant");
            this.userCommentsToMerchant = JsonNullable.of(userCommentsToMerchant);
            return this;
        }

        /**
         * Comments from the user to the merchant.
         */
        public Builder userCommentsToMerchant(JsonNullable<String> userCommentsToMerchant) {
            Utils.checkNotNull(userCommentsToMerchant, "userCommentsToMerchant");
            this.userCommentsToMerchant = userCommentsToMerchant;
            return this;
        }


        /**
         * Message intended for the beneficiary of the item.
         */
        public Builder messageToBeneficiary(String messageToBeneficiary) {
            Utils.checkNotNull(messageToBeneficiary, "messageToBeneficiary");
            this.messageToBeneficiary = JsonNullable.of(messageToBeneficiary);
            return this;
        }

        /**
         * Message intended for the beneficiary of the item.
         */
        public Builder messageToBeneficiary(JsonNullable<String> messageToBeneficiary) {
            Utils.checkNotNull(messageToBeneficiary, "messageToBeneficiary");
            this.messageToBeneficiary = messageToBeneficiary;
            return this;
        }


        /**
         * Comments from the merchant about this transaction.
         */
        public Builder merchantComments(String merchantComments) {
            Utils.checkNotNull(merchantComments, "merchantComments");
            this.merchantComments = JsonNullable.of(merchantComments);
            return this;
        }

        /**
         * Comments from the merchant about this transaction.
         */
        public Builder merchantComments(JsonNullable<String> merchantComments) {
            Utils.checkNotNull(merchantComments, "merchantComments");
            this.merchantComments = merchantComments;
            return this;
        }

        public ForterAntiFraudOptionsCartItemBeneficiaryComments build() {

            return new ForterAntiFraudOptionsCartItemBeneficiaryComments(
                userCommentsToMerchant, messageToBeneficiary, merchantComments);
        }

    }
}
