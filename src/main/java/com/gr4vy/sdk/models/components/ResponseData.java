/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.gr4vy.sdk.utils.OneOfDeserializer;
import com.gr4vy.sdk.utils.TypedObject;
import com.gr4vy.sdk.utils.Utils.JsonShape;
import com.gr4vy.sdk.utils.Utils.TypeReferenceWithShape;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;

/**
 * ResponseData
 * 
 * <p>The 3DS data sent to the payment service for this transaction. This will only be populated if external 3DS data was passed in directly as part of the transaction API call, or if our 3DS server returned a status code of `Y` or `A`. In case of a failure to authenticate (status `N`, `R`, or `U`) this field will not be populated. To see full details about the 3DS calls please use our transaction events API.
 */
@JsonDeserialize(using = ResponseData._Deserializer.class)
public class ResponseData {

    @JsonValue
    private TypedObject value;
    
    private ResponseData(TypedObject value) {
        this.value = value;
    }

    public static ResponseData of(ThreeDSecureDataV1 value) {
        Utils.checkNotNull(value, "value");
        return new ResponseData(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<ThreeDSecureDataV1>(){}));
    }

    public static ResponseData of(ThreeDSecureV2 value) {
        Utils.checkNotNull(value, "value");
        return new ResponseData(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<ThreeDSecureV2>(){}));
    }
    
    /**
     * Returns an instance of one of these types:
     * <ul>
     * <li>{@code com.gr4vy.sdk.models.components.ThreeDSecureDataV1}</li>
     * <li>{@code com.gr4vy.sdk.models.components.ThreeDSecureV2}</li>
     * </ul>
     * 
     * <p>Use {@code instanceof} to determine what type is returned. For example:
     * 
     * <pre>
     * if (obj.value() instanceof String) {
     *     String answer = (String) obj.value();
     *     System.out.println("answer=" + answer);
     * }
     * </pre>
     * 
     * @return value of oneOf type
     **/ 
    public java.lang.Object value() {
        return value.value();
    }    
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ResponseData other = (ResponseData) o;
        return Objects.deepEquals(this.value.value(), other.value.value()); 
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(value.value());
    }
    
    @SuppressWarnings("serial")
    public static final class _Deserializer extends OneOfDeserializer<ResponseData> {

        public _Deserializer() {
            super(ResponseData.class, false,
                  TypeReferenceWithShape.of(new TypeReference<ThreeDSecureV2>() {}, JsonShape.DEFAULT),
                  TypeReferenceWithShape.of(new TypeReference<ThreeDSecureDataV1>() {}, JsonShape.DEFAULT));
        }
    }
    
    @Override
    public String toString() {
        return Utils.toString(ResponseData.class,
                "value", value);
    }
 
}

