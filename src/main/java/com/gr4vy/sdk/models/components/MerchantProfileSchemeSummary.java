/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.time.OffsetDateTime;


public class MerchantProfileSchemeSummary {
    /**
     * Acquirer BIN to use when calling 3DS through this scheme.
     */
    @JsonProperty("merchant_acquirer_bin")
    private String merchantAcquirerBin;

    /**
     * Merchant ID to use when calling 3DS through this scheme.
     */
    @JsonProperty("merchant_acquirer_id")
    private String merchantAcquirerId;


    @JsonProperty("merchant_name")
    private String merchantName;

    /**
     * The merchant's ISO 3166-1 numeric country code.
     */
    @JsonProperty("merchant_country_code")
    private String merchantCountryCode;

    /**
     * Merchant category code to use when calling 3DS through this scheme.
     */
    @JsonProperty("merchant_category_code")
    private String merchantCategoryCode;

    /**
     * URL to send when calling 3DS through this scheme.
     */
    @JsonProperty("merchant_url")
    private String merchantUrl;

    /**
     * The date and time when this profile was first created in our system.
     */
    @JsonProperty("created_at")
    private OffsetDateTime createdAt;

    @JsonCreator
    public MerchantProfileSchemeSummary(
            @JsonProperty("merchant_acquirer_bin") String merchantAcquirerBin,
            @JsonProperty("merchant_acquirer_id") String merchantAcquirerId,
            @JsonProperty("merchant_name") String merchantName,
            @JsonProperty("merchant_country_code") String merchantCountryCode,
            @JsonProperty("merchant_category_code") String merchantCategoryCode,
            @JsonProperty("merchant_url") String merchantUrl,
            @JsonProperty("created_at") OffsetDateTime createdAt) {
        Utils.checkNotNull(merchantAcquirerBin, "merchantAcquirerBin");
        Utils.checkNotNull(merchantAcquirerId, "merchantAcquirerId");
        Utils.checkNotNull(merchantName, "merchantName");
        Utils.checkNotNull(merchantCountryCode, "merchantCountryCode");
        Utils.checkNotNull(merchantCategoryCode, "merchantCategoryCode");
        Utils.checkNotNull(merchantUrl, "merchantUrl");
        Utils.checkNotNull(createdAt, "createdAt");
        this.merchantAcquirerBin = merchantAcquirerBin;
        this.merchantAcquirerId = merchantAcquirerId;
        this.merchantName = merchantName;
        this.merchantCountryCode = merchantCountryCode;
        this.merchantCategoryCode = merchantCategoryCode;
        this.merchantUrl = merchantUrl;
        this.createdAt = createdAt;
    }

    /**
     * Acquirer BIN to use when calling 3DS through this scheme.
     */
    @JsonIgnore
    public String merchantAcquirerBin() {
        return merchantAcquirerBin;
    }

    /**
     * Merchant ID to use when calling 3DS through this scheme.
     */
    @JsonIgnore
    public String merchantAcquirerId() {
        return merchantAcquirerId;
    }

    @JsonIgnore
    public String merchantName() {
        return merchantName;
    }

    /**
     * The merchant's ISO 3166-1 numeric country code.
     */
    @JsonIgnore
    public String merchantCountryCode() {
        return merchantCountryCode;
    }

    /**
     * Merchant category code to use when calling 3DS through this scheme.
     */
    @JsonIgnore
    public String merchantCategoryCode() {
        return merchantCategoryCode;
    }

    /**
     * URL to send when calling 3DS through this scheme.
     */
    @JsonIgnore
    public String merchantUrl() {
        return merchantUrl;
    }

    /**
     * The date and time when this profile was first created in our system.
     */
    @JsonIgnore
    public OffsetDateTime createdAt() {
        return createdAt;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Acquirer BIN to use when calling 3DS through this scheme.
     */
    public MerchantProfileSchemeSummary withMerchantAcquirerBin(String merchantAcquirerBin) {
        Utils.checkNotNull(merchantAcquirerBin, "merchantAcquirerBin");
        this.merchantAcquirerBin = merchantAcquirerBin;
        return this;
    }

    /**
     * Merchant ID to use when calling 3DS through this scheme.
     */
    public MerchantProfileSchemeSummary withMerchantAcquirerId(String merchantAcquirerId) {
        Utils.checkNotNull(merchantAcquirerId, "merchantAcquirerId");
        this.merchantAcquirerId = merchantAcquirerId;
        return this;
    }

    public MerchantProfileSchemeSummary withMerchantName(String merchantName) {
        Utils.checkNotNull(merchantName, "merchantName");
        this.merchantName = merchantName;
        return this;
    }

    /**
     * The merchant's ISO 3166-1 numeric country code.
     */
    public MerchantProfileSchemeSummary withMerchantCountryCode(String merchantCountryCode) {
        Utils.checkNotNull(merchantCountryCode, "merchantCountryCode");
        this.merchantCountryCode = merchantCountryCode;
        return this;
    }

    /**
     * Merchant category code to use when calling 3DS through this scheme.
     */
    public MerchantProfileSchemeSummary withMerchantCategoryCode(String merchantCategoryCode) {
        Utils.checkNotNull(merchantCategoryCode, "merchantCategoryCode");
        this.merchantCategoryCode = merchantCategoryCode;
        return this;
    }

    /**
     * URL to send when calling 3DS through this scheme.
     */
    public MerchantProfileSchemeSummary withMerchantUrl(String merchantUrl) {
        Utils.checkNotNull(merchantUrl, "merchantUrl");
        this.merchantUrl = merchantUrl;
        return this;
    }

    /**
     * The date and time when this profile was first created in our system.
     */
    public MerchantProfileSchemeSummary withCreatedAt(OffsetDateTime createdAt) {
        Utils.checkNotNull(createdAt, "createdAt");
        this.createdAt = createdAt;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MerchantProfileSchemeSummary other = (MerchantProfileSchemeSummary) o;
        return 
            Utils.enhancedDeepEquals(this.merchantAcquirerBin, other.merchantAcquirerBin) &&
            Utils.enhancedDeepEquals(this.merchantAcquirerId, other.merchantAcquirerId) &&
            Utils.enhancedDeepEquals(this.merchantName, other.merchantName) &&
            Utils.enhancedDeepEquals(this.merchantCountryCode, other.merchantCountryCode) &&
            Utils.enhancedDeepEquals(this.merchantCategoryCode, other.merchantCategoryCode) &&
            Utils.enhancedDeepEquals(this.merchantUrl, other.merchantUrl) &&
            Utils.enhancedDeepEquals(this.createdAt, other.createdAt);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            merchantAcquirerBin, merchantAcquirerId, merchantName,
            merchantCountryCode, merchantCategoryCode, merchantUrl,
            createdAt);
    }
    
    @Override
    public String toString() {
        return Utils.toString(MerchantProfileSchemeSummary.class,
                "merchantAcquirerBin", merchantAcquirerBin,
                "merchantAcquirerId", merchantAcquirerId,
                "merchantName", merchantName,
                "merchantCountryCode", merchantCountryCode,
                "merchantCategoryCode", merchantCategoryCode,
                "merchantUrl", merchantUrl,
                "createdAt", createdAt);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String merchantAcquirerBin;

        private String merchantAcquirerId;

        private String merchantName;

        private String merchantCountryCode;

        private String merchantCategoryCode;

        private String merchantUrl;

        private OffsetDateTime createdAt;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Acquirer BIN to use when calling 3DS through this scheme.
         */
        public Builder merchantAcquirerBin(String merchantAcquirerBin) {
            Utils.checkNotNull(merchantAcquirerBin, "merchantAcquirerBin");
            this.merchantAcquirerBin = merchantAcquirerBin;
            return this;
        }


        /**
         * Merchant ID to use when calling 3DS through this scheme.
         */
        public Builder merchantAcquirerId(String merchantAcquirerId) {
            Utils.checkNotNull(merchantAcquirerId, "merchantAcquirerId");
            this.merchantAcquirerId = merchantAcquirerId;
            return this;
        }


        public Builder merchantName(String merchantName) {
            Utils.checkNotNull(merchantName, "merchantName");
            this.merchantName = merchantName;
            return this;
        }


        /**
         * The merchant's ISO 3166-1 numeric country code.
         */
        public Builder merchantCountryCode(String merchantCountryCode) {
            Utils.checkNotNull(merchantCountryCode, "merchantCountryCode");
            this.merchantCountryCode = merchantCountryCode;
            return this;
        }


        /**
         * Merchant category code to use when calling 3DS through this scheme.
         */
        public Builder merchantCategoryCode(String merchantCategoryCode) {
            Utils.checkNotNull(merchantCategoryCode, "merchantCategoryCode");
            this.merchantCategoryCode = merchantCategoryCode;
            return this;
        }


        /**
         * URL to send when calling 3DS through this scheme.
         */
        public Builder merchantUrl(String merchantUrl) {
            Utils.checkNotNull(merchantUrl, "merchantUrl");
            this.merchantUrl = merchantUrl;
            return this;
        }


        /**
         * The date and time when this profile was first created in our system.
         */
        public Builder createdAt(OffsetDateTime createdAt) {
            Utils.checkNotNull(createdAt, "createdAt");
            this.createdAt = createdAt;
            return this;
        }

        public MerchantProfileSchemeSummary build() {

            return new MerchantProfileSchemeSummary(
                merchantAcquirerBin, merchantAcquirerId, merchantName,
                merchantCountryCode, merchantCategoryCode, merchantUrl,
                createdAt);
        }

    }
}
