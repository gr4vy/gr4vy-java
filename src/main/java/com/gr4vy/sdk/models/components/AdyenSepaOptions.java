/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Boolean;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;


public class AdyenSepaOptions {
    /**
     * Set to `true` to enable Auto Rescue for a transaction. Use the `maxDaysToRescue` to specify a rescue
     * window.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoRescue")
    private JsonNullable<Boolean> autoRescue;

    /**
     * The rescue window for a transaction, in days, when `autoRescue` is set to `true`. You can specify a
     * value between 1 and 48. For cards, the default is one calendar month.
     * 
     * <p>For SEPA, the default is 42 days.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxDaysToRescue")
    private JsonNullable<Long> maxDaysToRescue;

    /**
     * Passes additional data to the Adyen API when creating a transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalData")
    private JsonNullable<? extends Map<String, String>> additionalData;

    /**
     * The rescue scenario to simulate for a transaction, when `autoRescue` is set to `true`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoRescueSepaScenario")
    private JsonNullable<? extends AdyenAutoRescueSepaScenariosEnum> autoRescueSepaScenario;

    /**
     * The name on the SEPA bank account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerName")
    private JsonNullable<String> ownerName;

    @JsonCreator
    public AdyenSepaOptions(
            @JsonProperty("autoRescue") JsonNullable<Boolean> autoRescue,
            @JsonProperty("maxDaysToRescue") JsonNullable<Long> maxDaysToRescue,
            @JsonProperty("additionalData") JsonNullable<? extends Map<String, String>> additionalData,
            @JsonProperty("autoRescueSepaScenario") JsonNullable<? extends AdyenAutoRescueSepaScenariosEnum> autoRescueSepaScenario,
            @JsonProperty("ownerName") JsonNullable<String> ownerName) {
        Utils.checkNotNull(autoRescue, "autoRescue");
        Utils.checkNotNull(maxDaysToRescue, "maxDaysToRescue");
        Utils.checkNotNull(additionalData, "additionalData");
        Utils.checkNotNull(autoRescueSepaScenario, "autoRescueSepaScenario");
        Utils.checkNotNull(ownerName, "ownerName");
        this.autoRescue = autoRescue;
        this.maxDaysToRescue = maxDaysToRescue;
        this.additionalData = additionalData;
        this.autoRescueSepaScenario = autoRescueSepaScenario;
        this.ownerName = ownerName;
    }
    
    public AdyenSepaOptions() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * Set to `true` to enable Auto Rescue for a transaction. Use the `maxDaysToRescue` to specify a rescue
     * window.
     */
    @JsonIgnore
    public JsonNullable<Boolean> autoRescue() {
        return autoRescue;
    }

    /**
     * The rescue window for a transaction, in days, when `autoRescue` is set to `true`. You can specify a
     * value between 1 and 48. For cards, the default is one calendar month.
     * 
     * <p>For SEPA, the default is 42 days.
     */
    @JsonIgnore
    public JsonNullable<Long> maxDaysToRescue() {
        return maxDaysToRescue;
    }

    /**
     * Passes additional data to the Adyen API when creating a transaction.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Map<String, String>> additionalData() {
        return (JsonNullable<Map<String, String>>) additionalData;
    }

    /**
     * The rescue scenario to simulate for a transaction, when `autoRescue` is set to `true`.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<AdyenAutoRescueSepaScenariosEnum> autoRescueSepaScenario() {
        return (JsonNullable<AdyenAutoRescueSepaScenariosEnum>) autoRescueSepaScenario;
    }

    /**
     * The name on the SEPA bank account.
     */
    @JsonIgnore
    public JsonNullable<String> ownerName() {
        return ownerName;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Set to `true` to enable Auto Rescue for a transaction. Use the `maxDaysToRescue` to specify a rescue
     * window.
     */
    public AdyenSepaOptions withAutoRescue(boolean autoRescue) {
        Utils.checkNotNull(autoRescue, "autoRescue");
        this.autoRescue = JsonNullable.of(autoRescue);
        return this;
    }

    /**
     * Set to `true` to enable Auto Rescue for a transaction. Use the `maxDaysToRescue` to specify a rescue
     * window.
     */
    public AdyenSepaOptions withAutoRescue(JsonNullable<Boolean> autoRescue) {
        Utils.checkNotNull(autoRescue, "autoRescue");
        this.autoRescue = autoRescue;
        return this;
    }

    /**
     * The rescue window for a transaction, in days, when `autoRescue` is set to `true`. You can specify a
     * value between 1 and 48. For cards, the default is one calendar month.
     * 
     * <p>For SEPA, the default is 42 days.
     */
    public AdyenSepaOptions withMaxDaysToRescue(long maxDaysToRescue) {
        Utils.checkNotNull(maxDaysToRescue, "maxDaysToRescue");
        this.maxDaysToRescue = JsonNullable.of(maxDaysToRescue);
        return this;
    }

    /**
     * The rescue window for a transaction, in days, when `autoRescue` is set to `true`. You can specify a
     * value between 1 and 48. For cards, the default is one calendar month.
     * 
     * <p>For SEPA, the default is 42 days.
     */
    public AdyenSepaOptions withMaxDaysToRescue(JsonNullable<Long> maxDaysToRescue) {
        Utils.checkNotNull(maxDaysToRescue, "maxDaysToRescue");
        this.maxDaysToRescue = maxDaysToRescue;
        return this;
    }

    /**
     * Passes additional data to the Adyen API when creating a transaction.
     */
    public AdyenSepaOptions withAdditionalData(Map<String, String> additionalData) {
        Utils.checkNotNull(additionalData, "additionalData");
        this.additionalData = JsonNullable.of(additionalData);
        return this;
    }

    /**
     * Passes additional data to the Adyen API when creating a transaction.
     */
    public AdyenSepaOptions withAdditionalData(JsonNullable<? extends Map<String, String>> additionalData) {
        Utils.checkNotNull(additionalData, "additionalData");
        this.additionalData = additionalData;
        return this;
    }

    /**
     * The rescue scenario to simulate for a transaction, when `autoRescue` is set to `true`.
     */
    public AdyenSepaOptions withAutoRescueSepaScenario(AdyenAutoRescueSepaScenariosEnum autoRescueSepaScenario) {
        Utils.checkNotNull(autoRescueSepaScenario, "autoRescueSepaScenario");
        this.autoRescueSepaScenario = JsonNullable.of(autoRescueSepaScenario);
        return this;
    }

    /**
     * The rescue scenario to simulate for a transaction, when `autoRescue` is set to `true`.
     */
    public AdyenSepaOptions withAutoRescueSepaScenario(JsonNullable<? extends AdyenAutoRescueSepaScenariosEnum> autoRescueSepaScenario) {
        Utils.checkNotNull(autoRescueSepaScenario, "autoRescueSepaScenario");
        this.autoRescueSepaScenario = autoRescueSepaScenario;
        return this;
    }

    /**
     * The name on the SEPA bank account.
     */
    public AdyenSepaOptions withOwnerName(String ownerName) {
        Utils.checkNotNull(ownerName, "ownerName");
        this.ownerName = JsonNullable.of(ownerName);
        return this;
    }

    /**
     * The name on the SEPA bank account.
     */
    public AdyenSepaOptions withOwnerName(JsonNullable<String> ownerName) {
        Utils.checkNotNull(ownerName, "ownerName");
        this.ownerName = ownerName;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AdyenSepaOptions other = (AdyenSepaOptions) o;
        return 
            Utils.enhancedDeepEquals(this.autoRescue, other.autoRescue) &&
            Utils.enhancedDeepEquals(this.maxDaysToRescue, other.maxDaysToRescue) &&
            Utils.enhancedDeepEquals(this.additionalData, other.additionalData) &&
            Utils.enhancedDeepEquals(this.autoRescueSepaScenario, other.autoRescueSepaScenario) &&
            Utils.enhancedDeepEquals(this.ownerName, other.ownerName);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            autoRescue, maxDaysToRescue, additionalData,
            autoRescueSepaScenario, ownerName);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AdyenSepaOptions.class,
                "autoRescue", autoRescue,
                "maxDaysToRescue", maxDaysToRescue,
                "additionalData", additionalData,
                "autoRescueSepaScenario", autoRescueSepaScenario,
                "ownerName", ownerName);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<Boolean> autoRescue = JsonNullable.undefined();

        private JsonNullable<Long> maxDaysToRescue = JsonNullable.undefined();

        private JsonNullable<? extends Map<String, String>> additionalData = JsonNullable.undefined();

        private JsonNullable<? extends AdyenAutoRescueSepaScenariosEnum> autoRescueSepaScenario = JsonNullable.undefined();

        private JsonNullable<String> ownerName = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Set to `true` to enable Auto Rescue for a transaction. Use the `maxDaysToRescue` to specify a rescue
         * window.
         */
        public Builder autoRescue(boolean autoRescue) {
            Utils.checkNotNull(autoRescue, "autoRescue");
            this.autoRescue = JsonNullable.of(autoRescue);
            return this;
        }

        /**
         * Set to `true` to enable Auto Rescue for a transaction. Use the `maxDaysToRescue` to specify a rescue
         * window.
         */
        public Builder autoRescue(JsonNullable<Boolean> autoRescue) {
            Utils.checkNotNull(autoRescue, "autoRescue");
            this.autoRescue = autoRescue;
            return this;
        }


        /**
         * The rescue window for a transaction, in days, when `autoRescue` is set to `true`. You can specify a
         * value between 1 and 48. For cards, the default is one calendar month.
         * 
         * <p>For SEPA, the default is 42 days.
         */
        public Builder maxDaysToRescue(long maxDaysToRescue) {
            Utils.checkNotNull(maxDaysToRescue, "maxDaysToRescue");
            this.maxDaysToRescue = JsonNullable.of(maxDaysToRescue);
            return this;
        }

        /**
         * The rescue window for a transaction, in days, when `autoRescue` is set to `true`. You can specify a
         * value between 1 and 48. For cards, the default is one calendar month.
         * 
         * <p>For SEPA, the default is 42 days.
         */
        public Builder maxDaysToRescue(JsonNullable<Long> maxDaysToRescue) {
            Utils.checkNotNull(maxDaysToRescue, "maxDaysToRescue");
            this.maxDaysToRescue = maxDaysToRescue;
            return this;
        }


        /**
         * Passes additional data to the Adyen API when creating a transaction.
         */
        public Builder additionalData(Map<String, String> additionalData) {
            Utils.checkNotNull(additionalData, "additionalData");
            this.additionalData = JsonNullable.of(additionalData);
            return this;
        }

        /**
         * Passes additional data to the Adyen API when creating a transaction.
         */
        public Builder additionalData(JsonNullable<? extends Map<String, String>> additionalData) {
            Utils.checkNotNull(additionalData, "additionalData");
            this.additionalData = additionalData;
            return this;
        }


        /**
         * The rescue scenario to simulate for a transaction, when `autoRescue` is set to `true`.
         */
        public Builder autoRescueSepaScenario(AdyenAutoRescueSepaScenariosEnum autoRescueSepaScenario) {
            Utils.checkNotNull(autoRescueSepaScenario, "autoRescueSepaScenario");
            this.autoRescueSepaScenario = JsonNullable.of(autoRescueSepaScenario);
            return this;
        }

        /**
         * The rescue scenario to simulate for a transaction, when `autoRescue` is set to `true`.
         */
        public Builder autoRescueSepaScenario(JsonNullable<? extends AdyenAutoRescueSepaScenariosEnum> autoRescueSepaScenario) {
            Utils.checkNotNull(autoRescueSepaScenario, "autoRescueSepaScenario");
            this.autoRescueSepaScenario = autoRescueSepaScenario;
            return this;
        }


        /**
         * The name on the SEPA bank account.
         */
        public Builder ownerName(String ownerName) {
            Utils.checkNotNull(ownerName, "ownerName");
            this.ownerName = JsonNullable.of(ownerName);
            return this;
        }

        /**
         * The name on the SEPA bank account.
         */
        public Builder ownerName(JsonNullable<String> ownerName) {
            Utils.checkNotNull(ownerName, "ownerName");
            this.ownerName = ownerName;
            return this;
        }

        public AdyenSepaOptions build() {

            return new AdyenSepaOptions(
                autoRescue, maxDaysToRescue, additionalData,
                autoRescueSepaScenario, ownerName);
        }

    }
}
