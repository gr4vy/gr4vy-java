/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;


public class ForterAntiFraudOptionsCartItem {
    /**
     * Basic information about the cart item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("basic_item_data")
    private JsonNullable<? extends ForterAntiFraudOptionsCartItemBasicItemData> basicItemData;

    /**
     * Details about how the item will be delivered.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("delivery_details")
    private JsonNullable<? extends ForterAntiFraudOptionsCartItemDeliveryDetails> deliveryDetails;

    /**
     * List of beneficiaries who will receive this item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("beneficiaries")
    private JsonNullable<? extends List<ForterAntiFraudOptionsCartItemBeneficiary>> beneficiaries;

    @JsonCreator
    public ForterAntiFraudOptionsCartItem(
            @JsonProperty("basic_item_data") JsonNullable<? extends ForterAntiFraudOptionsCartItemBasicItemData> basicItemData,
            @JsonProperty("delivery_details") JsonNullable<? extends ForterAntiFraudOptionsCartItemDeliveryDetails> deliveryDetails,
            @JsonProperty("beneficiaries") JsonNullable<? extends List<ForterAntiFraudOptionsCartItemBeneficiary>> beneficiaries) {
        Utils.checkNotNull(basicItemData, "basicItemData");
        Utils.checkNotNull(deliveryDetails, "deliveryDetails");
        Utils.checkNotNull(beneficiaries, "beneficiaries");
        this.basicItemData = basicItemData;
        this.deliveryDetails = deliveryDetails;
        this.beneficiaries = beneficiaries;
    }
    
    public ForterAntiFraudOptionsCartItem() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * Basic information about the cart item.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<ForterAntiFraudOptionsCartItemBasicItemData> basicItemData() {
        return (JsonNullable<ForterAntiFraudOptionsCartItemBasicItemData>) basicItemData;
    }

    /**
     * Details about how the item will be delivered.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<ForterAntiFraudOptionsCartItemDeliveryDetails> deliveryDetails() {
        return (JsonNullable<ForterAntiFraudOptionsCartItemDeliveryDetails>) deliveryDetails;
    }

    /**
     * List of beneficiaries who will receive this item.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<ForterAntiFraudOptionsCartItemBeneficiary>> beneficiaries() {
        return (JsonNullable<List<ForterAntiFraudOptionsCartItemBeneficiary>>) beneficiaries;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Basic information about the cart item.
     */
    public ForterAntiFraudOptionsCartItem withBasicItemData(ForterAntiFraudOptionsCartItemBasicItemData basicItemData) {
        Utils.checkNotNull(basicItemData, "basicItemData");
        this.basicItemData = JsonNullable.of(basicItemData);
        return this;
    }

    /**
     * Basic information about the cart item.
     */
    public ForterAntiFraudOptionsCartItem withBasicItemData(JsonNullable<? extends ForterAntiFraudOptionsCartItemBasicItemData> basicItemData) {
        Utils.checkNotNull(basicItemData, "basicItemData");
        this.basicItemData = basicItemData;
        return this;
    }

    /**
     * Details about how the item will be delivered.
     */
    public ForterAntiFraudOptionsCartItem withDeliveryDetails(ForterAntiFraudOptionsCartItemDeliveryDetails deliveryDetails) {
        Utils.checkNotNull(deliveryDetails, "deliveryDetails");
        this.deliveryDetails = JsonNullable.of(deliveryDetails);
        return this;
    }

    /**
     * Details about how the item will be delivered.
     */
    public ForterAntiFraudOptionsCartItem withDeliveryDetails(JsonNullable<? extends ForterAntiFraudOptionsCartItemDeliveryDetails> deliveryDetails) {
        Utils.checkNotNull(deliveryDetails, "deliveryDetails");
        this.deliveryDetails = deliveryDetails;
        return this;
    }

    /**
     * List of beneficiaries who will receive this item.
     */
    public ForterAntiFraudOptionsCartItem withBeneficiaries(List<ForterAntiFraudOptionsCartItemBeneficiary> beneficiaries) {
        Utils.checkNotNull(beneficiaries, "beneficiaries");
        this.beneficiaries = JsonNullable.of(beneficiaries);
        return this;
    }

    /**
     * List of beneficiaries who will receive this item.
     */
    public ForterAntiFraudOptionsCartItem withBeneficiaries(JsonNullable<? extends List<ForterAntiFraudOptionsCartItemBeneficiary>> beneficiaries) {
        Utils.checkNotNull(beneficiaries, "beneficiaries");
        this.beneficiaries = beneficiaries;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ForterAntiFraudOptionsCartItem other = (ForterAntiFraudOptionsCartItem) o;
        return 
            Utils.enhancedDeepEquals(this.basicItemData, other.basicItemData) &&
            Utils.enhancedDeepEquals(this.deliveryDetails, other.deliveryDetails) &&
            Utils.enhancedDeepEquals(this.beneficiaries, other.beneficiaries);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            basicItemData, deliveryDetails, beneficiaries);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ForterAntiFraudOptionsCartItem.class,
                "basicItemData", basicItemData,
                "deliveryDetails", deliveryDetails,
                "beneficiaries", beneficiaries);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<? extends ForterAntiFraudOptionsCartItemBasicItemData> basicItemData = JsonNullable.undefined();

        private JsonNullable<? extends ForterAntiFraudOptionsCartItemDeliveryDetails> deliveryDetails = JsonNullable.undefined();

        private JsonNullable<? extends List<ForterAntiFraudOptionsCartItemBeneficiary>> beneficiaries = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Basic information about the cart item.
         */
        public Builder basicItemData(ForterAntiFraudOptionsCartItemBasicItemData basicItemData) {
            Utils.checkNotNull(basicItemData, "basicItemData");
            this.basicItemData = JsonNullable.of(basicItemData);
            return this;
        }

        /**
         * Basic information about the cart item.
         */
        public Builder basicItemData(JsonNullable<? extends ForterAntiFraudOptionsCartItemBasicItemData> basicItemData) {
            Utils.checkNotNull(basicItemData, "basicItemData");
            this.basicItemData = basicItemData;
            return this;
        }


        /**
         * Details about how the item will be delivered.
         */
        public Builder deliveryDetails(ForterAntiFraudOptionsCartItemDeliveryDetails deliveryDetails) {
            Utils.checkNotNull(deliveryDetails, "deliveryDetails");
            this.deliveryDetails = JsonNullable.of(deliveryDetails);
            return this;
        }

        /**
         * Details about how the item will be delivered.
         */
        public Builder deliveryDetails(JsonNullable<? extends ForterAntiFraudOptionsCartItemDeliveryDetails> deliveryDetails) {
            Utils.checkNotNull(deliveryDetails, "deliveryDetails");
            this.deliveryDetails = deliveryDetails;
            return this;
        }


        /**
         * List of beneficiaries who will receive this item.
         */
        public Builder beneficiaries(List<ForterAntiFraudOptionsCartItemBeneficiary> beneficiaries) {
            Utils.checkNotNull(beneficiaries, "beneficiaries");
            this.beneficiaries = JsonNullable.of(beneficiaries);
            return this;
        }

        /**
         * List of beneficiaries who will receive this item.
         */
        public Builder beneficiaries(JsonNullable<? extends List<ForterAntiFraudOptionsCartItemBeneficiary>> beneficiaries) {
            Utils.checkNotNull(beneficiaries, "beneficiaries");
            this.beneficiaries = beneficiaries;
            return this;
        }

        public ForterAntiFraudOptionsCartItem build() {

            return new ForterAntiFraudOptionsCartItem(
                basicItemData, deliveryDetails, beneficiaries);
        }

    }
}
