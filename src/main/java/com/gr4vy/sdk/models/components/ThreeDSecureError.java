/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import org.openapitools.jackson.nullable.JsonNullable;

public class ThreeDSecureError {

    /**
     * The error code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    private JsonNullable<String> code;

    /**
     * The error description.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    private JsonNullable<String> description;

    /**
     * Detail about the 3DS error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("detail")
    private JsonNullable<String> detail;

    /**
     * Code indicating the 3-D Secure component that identified the error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("component")
    private JsonNullable<String> component;

    @JsonCreator
    public ThreeDSecureError(
            @JsonProperty("code") JsonNullable<String> code,
            @JsonProperty("description") JsonNullable<String> description,
            @JsonProperty("detail") JsonNullable<String> detail,
            @JsonProperty("component") JsonNullable<String> component) {
        Utils.checkNotNull(code, "code");
        Utils.checkNotNull(description, "description");
        Utils.checkNotNull(detail, "detail");
        Utils.checkNotNull(component, "component");
        this.code = code;
        this.description = description;
        this.detail = detail;
        this.component = component;
    }
    
    public ThreeDSecureError() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * The error code.
     */
    @JsonIgnore
    public JsonNullable<String> code() {
        return code;
    }

    /**
     * The error description.
     */
    @JsonIgnore
    public JsonNullable<String> description() {
        return description;
    }

    /**
     * Detail about the 3DS error.
     */
    @JsonIgnore
    public JsonNullable<String> detail() {
        return detail;
    }

    /**
     * Code indicating the 3-D Secure component that identified the error.
     */
    @JsonIgnore
    public JsonNullable<String> component() {
        return component;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The error code.
     */
    public ThreeDSecureError withCode(String code) {
        Utils.checkNotNull(code, "code");
        this.code = JsonNullable.of(code);
        return this;
    }

    /**
     * The error code.
     */
    public ThreeDSecureError withCode(JsonNullable<String> code) {
        Utils.checkNotNull(code, "code");
        this.code = code;
        return this;
    }

    /**
     * The error description.
     */
    public ThreeDSecureError withDescription(String description) {
        Utils.checkNotNull(description, "description");
        this.description = JsonNullable.of(description);
        return this;
    }

    /**
     * The error description.
     */
    public ThreeDSecureError withDescription(JsonNullable<String> description) {
        Utils.checkNotNull(description, "description");
        this.description = description;
        return this;
    }

    /**
     * Detail about the 3DS error.
     */
    public ThreeDSecureError withDetail(String detail) {
        Utils.checkNotNull(detail, "detail");
        this.detail = JsonNullable.of(detail);
        return this;
    }

    /**
     * Detail about the 3DS error.
     */
    public ThreeDSecureError withDetail(JsonNullable<String> detail) {
        Utils.checkNotNull(detail, "detail");
        this.detail = detail;
        return this;
    }

    /**
     * Code indicating the 3-D Secure component that identified the error.
     */
    public ThreeDSecureError withComponent(String component) {
        Utils.checkNotNull(component, "component");
        this.component = JsonNullable.of(component);
        return this;
    }

    /**
     * Code indicating the 3-D Secure component that identified the error.
     */
    public ThreeDSecureError withComponent(JsonNullable<String> component) {
        Utils.checkNotNull(component, "component");
        this.component = component;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ThreeDSecureError other = (ThreeDSecureError) o;
        return 
            Utils.enhancedDeepEquals(this.code, other.code) &&
            Utils.enhancedDeepEquals(this.description, other.description) &&
            Utils.enhancedDeepEquals(this.detail, other.detail) &&
            Utils.enhancedDeepEquals(this.component, other.component);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            code,
            description,
            detail,
            component);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ThreeDSecureError.class,
                "code", code,
                "description", description,
                "detail", detail,
                "component", component);
    }
    
    public final static class Builder {
 
        private JsonNullable<String> code = JsonNullable.undefined();
 
        private JsonNullable<String> description = JsonNullable.undefined();
 
        private JsonNullable<String> detail = JsonNullable.undefined();
 
        private JsonNullable<String> component = JsonNullable.undefined();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The error code.
         */
        public Builder code(String code) {
            Utils.checkNotNull(code, "code");
            this.code = JsonNullable.of(code);
            return this;
        }

        /**
         * The error code.
         */
        public Builder code(JsonNullable<String> code) {
            Utils.checkNotNull(code, "code");
            this.code = code;
            return this;
        }

        /**
         * The error description.
         */
        public Builder description(String description) {
            Utils.checkNotNull(description, "description");
            this.description = JsonNullable.of(description);
            return this;
        }

        /**
         * The error description.
         */
        public Builder description(JsonNullable<String> description) {
            Utils.checkNotNull(description, "description");
            this.description = description;
            return this;
        }

        /**
         * Detail about the 3DS error.
         */
        public Builder detail(String detail) {
            Utils.checkNotNull(detail, "detail");
            this.detail = JsonNullable.of(detail);
            return this;
        }

        /**
         * Detail about the 3DS error.
         */
        public Builder detail(JsonNullable<String> detail) {
            Utils.checkNotNull(detail, "detail");
            this.detail = detail;
            return this;
        }

        /**
         * Code indicating the 3-D Secure component that identified the error.
         */
        public Builder component(String component) {
            Utils.checkNotNull(component, "component");
            this.component = JsonNullable.of(component);
            return this;
        }

        /**
         * Code indicating the 3-D Secure component that identified the error.
         */
        public Builder component(JsonNullable<String> component) {
            Utils.checkNotNull(component, "component");
            this.component = component;
            return this;
        }
        
        public ThreeDSecureError build() {
            return new ThreeDSecureError(
                code,
                description,
                detail,
                component);
        }
    }
}
