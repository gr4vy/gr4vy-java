/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import org.openapitools.jackson.nullable.JsonNullable;


public class WpayPaytoSimulationOptions {
    /**
     * The simulation being requested. Please refer to the developer guide for a list of all available simulations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("simulate")
    private JsonNullable<String> simulate;

    /**
     * The delay in seconds before the requested simulation is executed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("delay")
    private JsonNullable<Long> delay;

    @JsonCreator
    public WpayPaytoSimulationOptions(
            @JsonProperty("simulate") JsonNullable<String> simulate,
            @JsonProperty("delay") JsonNullable<Long> delay) {
        Utils.checkNotNull(simulate, "simulate");
        Utils.checkNotNull(delay, "delay");
        this.simulate = simulate;
        this.delay = delay;
    }
    
    public WpayPaytoSimulationOptions() {
        this(JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * The simulation being requested. Please refer to the developer guide for a list of all available simulations.
     */
    @JsonIgnore
    public JsonNullable<String> simulate() {
        return simulate;
    }

    /**
     * The delay in seconds before the requested simulation is executed.
     */
    @JsonIgnore
    public JsonNullable<Long> delay() {
        return delay;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The simulation being requested. Please refer to the developer guide for a list of all available simulations.
     */
    public WpayPaytoSimulationOptions withSimulate(String simulate) {
        Utils.checkNotNull(simulate, "simulate");
        this.simulate = JsonNullable.of(simulate);
        return this;
    }

    /**
     * The simulation being requested. Please refer to the developer guide for a list of all available simulations.
     */
    public WpayPaytoSimulationOptions withSimulate(JsonNullable<String> simulate) {
        Utils.checkNotNull(simulate, "simulate");
        this.simulate = simulate;
        return this;
    }

    /**
     * The delay in seconds before the requested simulation is executed.
     */
    public WpayPaytoSimulationOptions withDelay(long delay) {
        Utils.checkNotNull(delay, "delay");
        this.delay = JsonNullable.of(delay);
        return this;
    }

    /**
     * The delay in seconds before the requested simulation is executed.
     */
    public WpayPaytoSimulationOptions withDelay(JsonNullable<Long> delay) {
        Utils.checkNotNull(delay, "delay");
        this.delay = delay;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        WpayPaytoSimulationOptions other = (WpayPaytoSimulationOptions) o;
        return 
            Utils.enhancedDeepEquals(this.simulate, other.simulate) &&
            Utils.enhancedDeepEquals(this.delay, other.delay);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            simulate, delay);
    }
    
    @Override
    public String toString() {
        return Utils.toString(WpayPaytoSimulationOptions.class,
                "simulate", simulate,
                "delay", delay);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<String> simulate = JsonNullable.undefined();

        private JsonNullable<Long> delay = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The simulation being requested. Please refer to the developer guide for a list of all available simulations.
         */
        public Builder simulate(String simulate) {
            Utils.checkNotNull(simulate, "simulate");
            this.simulate = JsonNullable.of(simulate);
            return this;
        }

        /**
         * The simulation being requested. Please refer to the developer guide for a list of all available simulations.
         */
        public Builder simulate(JsonNullable<String> simulate) {
            Utils.checkNotNull(simulate, "simulate");
            this.simulate = simulate;
            return this;
        }


        /**
         * The delay in seconds before the requested simulation is executed.
         */
        public Builder delay(long delay) {
            Utils.checkNotNull(delay, "delay");
            this.delay = JsonNullable.of(delay);
            return this;
        }

        /**
         * The delay in seconds before the requested simulation is executed.
         */
        public Builder delay(JsonNullable<Long> delay) {
            Utils.checkNotNull(delay, "delay");
            this.delay = delay;
            return this;
        }

        public WpayPaytoSimulationOptions build() {

            return new WpayPaytoSimulationOptions(
                simulate, delay);
        }

    }
}
