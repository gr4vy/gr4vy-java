/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.gr4vy.sdk.utils.LazySingletonValue;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import org.openapitools.jackson.nullable.JsonNullable;


public class AccountUpdaterOptions {
    /**
     * The type of response to simulate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("response_code")
    private JsonNullable<String> responseCode;

    /**
     * When the `response_code` is set to `updated`, the payment method's account number will be updated to this value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_number")
    private JsonNullable<String> accountNumber;

    /**
     * When the `response_code` is set to `updated`, the payment method's expiration month will be updated to this value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expiration_month")
    private JsonNullable<String> expirationMonth;

    /**
     * When the `response_code` is set to `updated`, the payment method's expiration year will be updated to this value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expiration_year")
    private JsonNullable<String> expirationYear;

    /**
     * The type of error code to simulate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error_code")
    private JsonNullable<String> errorCode;

    @JsonCreator
    public AccountUpdaterOptions(
            @JsonProperty("account_number") JsonNullable<String> accountNumber,
            @JsonProperty("expiration_month") JsonNullable<String> expirationMonth,
            @JsonProperty("expiration_year") JsonNullable<String> expirationYear,
            @JsonProperty("error_code") JsonNullable<String> errorCode) {
        Utils.checkNotNull(accountNumber, "accountNumber");
        Utils.checkNotNull(expirationMonth, "expirationMonth");
        Utils.checkNotNull(expirationYear, "expirationYear");
        Utils.checkNotNull(errorCode, "errorCode");
        this.responseCode = Builder._SINGLETON_VALUE_ResponseCode.value();
        this.accountNumber = accountNumber;
        this.expirationMonth = expirationMonth;
        this.expirationYear = expirationYear;
        this.errorCode = errorCode;
    }
    
    public AccountUpdaterOptions() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined());
    }

    /**
     * The type of response to simulate.
     */
    @JsonIgnore
    public JsonNullable<String> responseCode() {
        return responseCode;
    }

    /**
     * When the `response_code` is set to `updated`, the payment method's account number will be updated to this value.
     */
    @JsonIgnore
    public JsonNullable<String> accountNumber() {
        return accountNumber;
    }

    /**
     * When the `response_code` is set to `updated`, the payment method's expiration month will be updated to this value.
     */
    @JsonIgnore
    public JsonNullable<String> expirationMonth() {
        return expirationMonth;
    }

    /**
     * When the `response_code` is set to `updated`, the payment method's expiration year will be updated to this value.
     */
    @JsonIgnore
    public JsonNullable<String> expirationYear() {
        return expirationYear;
    }

    /**
     * The type of error code to simulate.
     */
    @JsonIgnore
    public JsonNullable<String> errorCode() {
        return errorCode;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * When the `response_code` is set to `updated`, the payment method's account number will be updated to this value.
     */
    public AccountUpdaterOptions withAccountNumber(String accountNumber) {
        Utils.checkNotNull(accountNumber, "accountNumber");
        this.accountNumber = JsonNullable.of(accountNumber);
        return this;
    }

    /**
     * When the `response_code` is set to `updated`, the payment method's account number will be updated to this value.
     */
    public AccountUpdaterOptions withAccountNumber(JsonNullable<String> accountNumber) {
        Utils.checkNotNull(accountNumber, "accountNumber");
        this.accountNumber = accountNumber;
        return this;
    }

    /**
     * When the `response_code` is set to `updated`, the payment method's expiration month will be updated to this value.
     */
    public AccountUpdaterOptions withExpirationMonth(String expirationMonth) {
        Utils.checkNotNull(expirationMonth, "expirationMonth");
        this.expirationMonth = JsonNullable.of(expirationMonth);
        return this;
    }

    /**
     * When the `response_code` is set to `updated`, the payment method's expiration month will be updated to this value.
     */
    public AccountUpdaterOptions withExpirationMonth(JsonNullable<String> expirationMonth) {
        Utils.checkNotNull(expirationMonth, "expirationMonth");
        this.expirationMonth = expirationMonth;
        return this;
    }

    /**
     * When the `response_code` is set to `updated`, the payment method's expiration year will be updated to this value.
     */
    public AccountUpdaterOptions withExpirationYear(String expirationYear) {
        Utils.checkNotNull(expirationYear, "expirationYear");
        this.expirationYear = JsonNullable.of(expirationYear);
        return this;
    }

    /**
     * When the `response_code` is set to `updated`, the payment method's expiration year will be updated to this value.
     */
    public AccountUpdaterOptions withExpirationYear(JsonNullable<String> expirationYear) {
        Utils.checkNotNull(expirationYear, "expirationYear");
        this.expirationYear = expirationYear;
        return this;
    }

    /**
     * The type of error code to simulate.
     */
    public AccountUpdaterOptions withErrorCode(String errorCode) {
        Utils.checkNotNull(errorCode, "errorCode");
        this.errorCode = JsonNullable.of(errorCode);
        return this;
    }

    /**
     * The type of error code to simulate.
     */
    public AccountUpdaterOptions withErrorCode(JsonNullable<String> errorCode) {
        Utils.checkNotNull(errorCode, "errorCode");
        this.errorCode = errorCode;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AccountUpdaterOptions other = (AccountUpdaterOptions) o;
        return 
            Utils.enhancedDeepEquals(this.responseCode, other.responseCode) &&
            Utils.enhancedDeepEquals(this.accountNumber, other.accountNumber) &&
            Utils.enhancedDeepEquals(this.expirationMonth, other.expirationMonth) &&
            Utils.enhancedDeepEquals(this.expirationYear, other.expirationYear) &&
            Utils.enhancedDeepEquals(this.errorCode, other.errorCode);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            responseCode, accountNumber, expirationMonth,
            expirationYear, errorCode);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AccountUpdaterOptions.class,
                "responseCode", responseCode,
                "accountNumber", accountNumber,
                "expirationMonth", expirationMonth,
                "expirationYear", expirationYear,
                "errorCode", errorCode);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<String> accountNumber = JsonNullable.undefined();

        private JsonNullable<String> expirationMonth = JsonNullable.undefined();

        private JsonNullable<String> expirationYear = JsonNullable.undefined();

        private JsonNullable<String> errorCode = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * When the `response_code` is set to `updated`, the payment method's account number will be updated to this value.
         */
        public Builder accountNumber(String accountNumber) {
            Utils.checkNotNull(accountNumber, "accountNumber");
            this.accountNumber = JsonNullable.of(accountNumber);
            return this;
        }

        /**
         * When the `response_code` is set to `updated`, the payment method's account number will be updated to this value.
         */
        public Builder accountNumber(JsonNullable<String> accountNumber) {
            Utils.checkNotNull(accountNumber, "accountNumber");
            this.accountNumber = accountNumber;
            return this;
        }


        /**
         * When the `response_code` is set to `updated`, the payment method's expiration month will be updated to this value.
         */
        public Builder expirationMonth(String expirationMonth) {
            Utils.checkNotNull(expirationMonth, "expirationMonth");
            this.expirationMonth = JsonNullable.of(expirationMonth);
            return this;
        }

        /**
         * When the `response_code` is set to `updated`, the payment method's expiration month will be updated to this value.
         */
        public Builder expirationMonth(JsonNullable<String> expirationMonth) {
            Utils.checkNotNull(expirationMonth, "expirationMonth");
            this.expirationMonth = expirationMonth;
            return this;
        }


        /**
         * When the `response_code` is set to `updated`, the payment method's expiration year will be updated to this value.
         */
        public Builder expirationYear(String expirationYear) {
            Utils.checkNotNull(expirationYear, "expirationYear");
            this.expirationYear = JsonNullable.of(expirationYear);
            return this;
        }

        /**
         * When the `response_code` is set to `updated`, the payment method's expiration year will be updated to this value.
         */
        public Builder expirationYear(JsonNullable<String> expirationYear) {
            Utils.checkNotNull(expirationYear, "expirationYear");
            this.expirationYear = expirationYear;
            return this;
        }


        /**
         * The type of error code to simulate.
         */
        public Builder errorCode(String errorCode) {
            Utils.checkNotNull(errorCode, "errorCode");
            this.errorCode = JsonNullable.of(errorCode);
            return this;
        }

        /**
         * The type of error code to simulate.
         */
        public Builder errorCode(JsonNullable<String> errorCode) {
            Utils.checkNotNull(errorCode, "errorCode");
            this.errorCode = errorCode;
            return this;
        }

        public AccountUpdaterOptions build() {

            return new AccountUpdaterOptions(
                accountNumber, expirationMonth, expirationYear,
                errorCode);
        }


        private static final LazySingletonValue<JsonNullable<String>> _SINGLETON_VALUE_ResponseCode =
                new LazySingletonValue<>(
                        "response_code",
                        "\"updated\"",
                        new TypeReference<JsonNullable<String>>() {});
    }
}
