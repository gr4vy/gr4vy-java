/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;


public class PaypalOptions {
    /**
     * Additional Set Transaction Context Values (STC) to be sent to PayPal as part of the transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additional_data")
    private JsonNullable<? extends List<Map<String, String>>> additionalData;

    @JsonCreator
    public PaypalOptions(
            @JsonProperty("additional_data") JsonNullable<? extends List<Map<String, String>>> additionalData) {
        Utils.checkNotNull(additionalData, "additionalData");
        this.additionalData = additionalData;
    }
    
    public PaypalOptions() {
        this(JsonNullable.undefined());
    }

    /**
     * Additional Set Transaction Context Values (STC) to be sent to PayPal as part of the transaction.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<Map<String, String>>> additionalData() {
        return (JsonNullable<List<Map<String, String>>>) additionalData;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Additional Set Transaction Context Values (STC) to be sent to PayPal as part of the transaction.
     */
    public PaypalOptions withAdditionalData(List<Map<String, String>> additionalData) {
        Utils.checkNotNull(additionalData, "additionalData");
        this.additionalData = JsonNullable.of(additionalData);
        return this;
    }

    /**
     * Additional Set Transaction Context Values (STC) to be sent to PayPal as part of the transaction.
     */
    public PaypalOptions withAdditionalData(JsonNullable<? extends List<Map<String, String>>> additionalData) {
        Utils.checkNotNull(additionalData, "additionalData");
        this.additionalData = additionalData;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PaypalOptions other = (PaypalOptions) o;
        return 
            Utils.enhancedDeepEquals(this.additionalData, other.additionalData);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            additionalData);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PaypalOptions.class,
                "additionalData", additionalData);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<? extends List<Map<String, String>>> additionalData = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Additional Set Transaction Context Values (STC) to be sent to PayPal as part of the transaction.
         */
        public Builder additionalData(List<Map<String, String>> additionalData) {
            Utils.checkNotNull(additionalData, "additionalData");
            this.additionalData = JsonNullable.of(additionalData);
            return this;
        }

        /**
         * Additional Set Transaction Context Values (STC) to be sent to PayPal as part of the transaction.
         */
        public Builder additionalData(JsonNullable<? extends List<Map<String, String>>> additionalData) {
            Utils.checkNotNull(additionalData, "additionalData");
            this.additionalData = additionalData;
            return this;
        }

        public PaypalOptions build() {

            return new PaypalOptions(
                additionalData);
        }

    }
}
