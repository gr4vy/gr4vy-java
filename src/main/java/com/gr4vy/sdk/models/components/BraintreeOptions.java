/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;


public class BraintreeOptions {
    /**
     * Passes a discount amount to be applied to the transaction when using Braintree.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("discount_amount")
    private JsonNullable<Long> discountAmount;

    /**
     * Passes `customFields` to the Braintree API when creating a new payment. Custom fields allow you to
     * customize your checkout experience by collecting specific information about your customers and their
     * purchases.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_fields")
    private JsonNullable<? extends Map<String, String>> customFields;

    /**
     * Additional dynamic fields to pass to the Braintree API
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dynamic_data_fields")
    private JsonNullable<? extends BraintreeDynamicDataFieldsOptions> dynamicDataFields;

    @JsonCreator
    public BraintreeOptions(
            @JsonProperty("discount_amount") JsonNullable<Long> discountAmount,
            @JsonProperty("custom_fields") JsonNullable<? extends Map<String, String>> customFields,
            @JsonProperty("dynamic_data_fields") JsonNullable<? extends BraintreeDynamicDataFieldsOptions> dynamicDataFields) {
        Utils.checkNotNull(discountAmount, "discountAmount");
        Utils.checkNotNull(customFields, "customFields");
        Utils.checkNotNull(dynamicDataFields, "dynamicDataFields");
        this.discountAmount = discountAmount;
        this.customFields = customFields;
        this.dynamicDataFields = dynamicDataFields;
    }
    
    public BraintreeOptions() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * Passes a discount amount to be applied to the transaction when using Braintree.
     */
    @JsonIgnore
    public JsonNullable<Long> discountAmount() {
        return discountAmount;
    }

    /**
     * Passes `customFields` to the Braintree API when creating a new payment. Custom fields allow you to
     * customize your checkout experience by collecting specific information about your customers and their
     * purchases.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Map<String, String>> customFields() {
        return (JsonNullable<Map<String, String>>) customFields;
    }

    /**
     * Additional dynamic fields to pass to the Braintree API
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<BraintreeDynamicDataFieldsOptions> dynamicDataFields() {
        return (JsonNullable<BraintreeDynamicDataFieldsOptions>) dynamicDataFields;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Passes a discount amount to be applied to the transaction when using Braintree.
     */
    public BraintreeOptions withDiscountAmount(long discountAmount) {
        Utils.checkNotNull(discountAmount, "discountAmount");
        this.discountAmount = JsonNullable.of(discountAmount);
        return this;
    }

    /**
     * Passes a discount amount to be applied to the transaction when using Braintree.
     */
    public BraintreeOptions withDiscountAmount(JsonNullable<Long> discountAmount) {
        Utils.checkNotNull(discountAmount, "discountAmount");
        this.discountAmount = discountAmount;
        return this;
    }

    /**
     * Passes `customFields` to the Braintree API when creating a new payment. Custom fields allow you to
     * customize your checkout experience by collecting specific information about your customers and their
     * purchases.
     */
    public BraintreeOptions withCustomFields(Map<String, String> customFields) {
        Utils.checkNotNull(customFields, "customFields");
        this.customFields = JsonNullable.of(customFields);
        return this;
    }

    /**
     * Passes `customFields` to the Braintree API when creating a new payment. Custom fields allow you to
     * customize your checkout experience by collecting specific information about your customers and their
     * purchases.
     */
    public BraintreeOptions withCustomFields(JsonNullable<? extends Map<String, String>> customFields) {
        Utils.checkNotNull(customFields, "customFields");
        this.customFields = customFields;
        return this;
    }

    /**
     * Additional dynamic fields to pass to the Braintree API
     */
    public BraintreeOptions withDynamicDataFields(BraintreeDynamicDataFieldsOptions dynamicDataFields) {
        Utils.checkNotNull(dynamicDataFields, "dynamicDataFields");
        this.dynamicDataFields = JsonNullable.of(dynamicDataFields);
        return this;
    }

    /**
     * Additional dynamic fields to pass to the Braintree API
     */
    public BraintreeOptions withDynamicDataFields(JsonNullable<? extends BraintreeDynamicDataFieldsOptions> dynamicDataFields) {
        Utils.checkNotNull(dynamicDataFields, "dynamicDataFields");
        this.dynamicDataFields = dynamicDataFields;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BraintreeOptions other = (BraintreeOptions) o;
        return 
            Utils.enhancedDeepEquals(this.discountAmount, other.discountAmount) &&
            Utils.enhancedDeepEquals(this.customFields, other.customFields) &&
            Utils.enhancedDeepEquals(this.dynamicDataFields, other.dynamicDataFields);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            discountAmount, customFields, dynamicDataFields);
    }
    
    @Override
    public String toString() {
        return Utils.toString(BraintreeOptions.class,
                "discountAmount", discountAmount,
                "customFields", customFields,
                "dynamicDataFields", dynamicDataFields);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<Long> discountAmount = JsonNullable.undefined();

        private JsonNullable<? extends Map<String, String>> customFields = JsonNullable.undefined();

        private JsonNullable<? extends BraintreeDynamicDataFieldsOptions> dynamicDataFields = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Passes a discount amount to be applied to the transaction when using Braintree.
         */
        public Builder discountAmount(long discountAmount) {
            Utils.checkNotNull(discountAmount, "discountAmount");
            this.discountAmount = JsonNullable.of(discountAmount);
            return this;
        }

        /**
         * Passes a discount amount to be applied to the transaction when using Braintree.
         */
        public Builder discountAmount(JsonNullable<Long> discountAmount) {
            Utils.checkNotNull(discountAmount, "discountAmount");
            this.discountAmount = discountAmount;
            return this;
        }


        /**
         * Passes `customFields` to the Braintree API when creating a new payment. Custom fields allow you to
         * customize your checkout experience by collecting specific information about your customers and their
         * purchases.
         */
        public Builder customFields(Map<String, String> customFields) {
            Utils.checkNotNull(customFields, "customFields");
            this.customFields = JsonNullable.of(customFields);
            return this;
        }

        /**
         * Passes `customFields` to the Braintree API when creating a new payment. Custom fields allow you to
         * customize your checkout experience by collecting specific information about your customers and their
         * purchases.
         */
        public Builder customFields(JsonNullable<? extends Map<String, String>> customFields) {
            Utils.checkNotNull(customFields, "customFields");
            this.customFields = customFields;
            return this;
        }


        /**
         * Additional dynamic fields to pass to the Braintree API
         */
        public Builder dynamicDataFields(BraintreeDynamicDataFieldsOptions dynamicDataFields) {
            Utils.checkNotNull(dynamicDataFields, "dynamicDataFields");
            this.dynamicDataFields = JsonNullable.of(dynamicDataFields);
            return this;
        }

        /**
         * Additional dynamic fields to pass to the Braintree API
         */
        public Builder dynamicDataFields(JsonNullable<? extends BraintreeDynamicDataFieldsOptions> dynamicDataFields) {
            Utils.checkNotNull(dynamicDataFields, "dynamicDataFields");
            this.dynamicDataFields = dynamicDataFields;
            return this;
        }

        public BraintreeOptions build() {

            return new BraintreeOptions(
                discountAmount, customFields, dynamicDataFields);
        }

    }
}
