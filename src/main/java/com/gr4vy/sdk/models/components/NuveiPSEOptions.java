/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import org.openapitools.jackson.nullable.JsonNullable;


public class NuveiPSEOptions {
    /**
     * Customer type ("N" for persona natural, "J" for persona jurídica)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userType")
    private JsonNullable<String> userType;

    /**
     * Customer’s document type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userFisNumber")
    private JsonNullable<String> userFisNumber;

    /**
     * Customer’s document number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fiscalNumber")
    private JsonNullable<String> fiscalNumber;

    /**
     * The bank code of the selected bank
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankCode")
    private JsonNullable<String> bankCode;

    @JsonCreator
    public NuveiPSEOptions(
            @JsonProperty("userType") JsonNullable<String> userType,
            @JsonProperty("userFisNumber") JsonNullable<String> userFisNumber,
            @JsonProperty("fiscalNumber") JsonNullable<String> fiscalNumber,
            @JsonProperty("bankCode") JsonNullable<String> bankCode) {
        Utils.checkNotNull(userType, "userType");
        Utils.checkNotNull(userFisNumber, "userFisNumber");
        Utils.checkNotNull(fiscalNumber, "fiscalNumber");
        Utils.checkNotNull(bankCode, "bankCode");
        this.userType = userType;
        this.userFisNumber = userFisNumber;
        this.fiscalNumber = fiscalNumber;
        this.bankCode = bankCode;
    }
    
    public NuveiPSEOptions() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined());
    }

    /**
     * Customer type ("N" for persona natural, "J" for persona jurídica)
     */
    @JsonIgnore
    public JsonNullable<String> userType() {
        return userType;
    }

    /**
     * Customer’s document type
     */
    @JsonIgnore
    public JsonNullable<String> userFisNumber() {
        return userFisNumber;
    }

    /**
     * Customer’s document number
     */
    @JsonIgnore
    public JsonNullable<String> fiscalNumber() {
        return fiscalNumber;
    }

    /**
     * The bank code of the selected bank
     */
    @JsonIgnore
    public JsonNullable<String> bankCode() {
        return bankCode;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Customer type ("N" for persona natural, "J" for persona jurídica)
     */
    public NuveiPSEOptions withUserType(String userType) {
        Utils.checkNotNull(userType, "userType");
        this.userType = JsonNullable.of(userType);
        return this;
    }

    /**
     * Customer type ("N" for persona natural, "J" for persona jurídica)
     */
    public NuveiPSEOptions withUserType(JsonNullable<String> userType) {
        Utils.checkNotNull(userType, "userType");
        this.userType = userType;
        return this;
    }

    /**
     * Customer’s document type
     */
    public NuveiPSEOptions withUserFisNumber(String userFisNumber) {
        Utils.checkNotNull(userFisNumber, "userFisNumber");
        this.userFisNumber = JsonNullable.of(userFisNumber);
        return this;
    }

    /**
     * Customer’s document type
     */
    public NuveiPSEOptions withUserFisNumber(JsonNullable<String> userFisNumber) {
        Utils.checkNotNull(userFisNumber, "userFisNumber");
        this.userFisNumber = userFisNumber;
        return this;
    }

    /**
     * Customer’s document number
     */
    public NuveiPSEOptions withFiscalNumber(String fiscalNumber) {
        Utils.checkNotNull(fiscalNumber, "fiscalNumber");
        this.fiscalNumber = JsonNullable.of(fiscalNumber);
        return this;
    }

    /**
     * Customer’s document number
     */
    public NuveiPSEOptions withFiscalNumber(JsonNullable<String> fiscalNumber) {
        Utils.checkNotNull(fiscalNumber, "fiscalNumber");
        this.fiscalNumber = fiscalNumber;
        return this;
    }

    /**
     * The bank code of the selected bank
     */
    public NuveiPSEOptions withBankCode(String bankCode) {
        Utils.checkNotNull(bankCode, "bankCode");
        this.bankCode = JsonNullable.of(bankCode);
        return this;
    }

    /**
     * The bank code of the selected bank
     */
    public NuveiPSEOptions withBankCode(JsonNullable<String> bankCode) {
        Utils.checkNotNull(bankCode, "bankCode");
        this.bankCode = bankCode;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        NuveiPSEOptions other = (NuveiPSEOptions) o;
        return 
            Utils.enhancedDeepEquals(this.userType, other.userType) &&
            Utils.enhancedDeepEquals(this.userFisNumber, other.userFisNumber) &&
            Utils.enhancedDeepEquals(this.fiscalNumber, other.fiscalNumber) &&
            Utils.enhancedDeepEquals(this.bankCode, other.bankCode);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            userType, userFisNumber, fiscalNumber,
            bankCode);
    }
    
    @Override
    public String toString() {
        return Utils.toString(NuveiPSEOptions.class,
                "userType", userType,
                "userFisNumber", userFisNumber,
                "fiscalNumber", fiscalNumber,
                "bankCode", bankCode);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<String> userType = JsonNullable.undefined();

        private JsonNullable<String> userFisNumber = JsonNullable.undefined();

        private JsonNullable<String> fiscalNumber = JsonNullable.undefined();

        private JsonNullable<String> bankCode = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Customer type ("N" for persona natural, "J" for persona jurídica)
         */
        public Builder userType(String userType) {
            Utils.checkNotNull(userType, "userType");
            this.userType = JsonNullable.of(userType);
            return this;
        }

        /**
         * Customer type ("N" for persona natural, "J" for persona jurídica)
         */
        public Builder userType(JsonNullable<String> userType) {
            Utils.checkNotNull(userType, "userType");
            this.userType = userType;
            return this;
        }


        /**
         * Customer’s document type
         */
        public Builder userFisNumber(String userFisNumber) {
            Utils.checkNotNull(userFisNumber, "userFisNumber");
            this.userFisNumber = JsonNullable.of(userFisNumber);
            return this;
        }

        /**
         * Customer’s document type
         */
        public Builder userFisNumber(JsonNullable<String> userFisNumber) {
            Utils.checkNotNull(userFisNumber, "userFisNumber");
            this.userFisNumber = userFisNumber;
            return this;
        }


        /**
         * Customer’s document number
         */
        public Builder fiscalNumber(String fiscalNumber) {
            Utils.checkNotNull(fiscalNumber, "fiscalNumber");
            this.fiscalNumber = JsonNullable.of(fiscalNumber);
            return this;
        }

        /**
         * Customer’s document number
         */
        public Builder fiscalNumber(JsonNullable<String> fiscalNumber) {
            Utils.checkNotNull(fiscalNumber, "fiscalNumber");
            this.fiscalNumber = fiscalNumber;
            return this;
        }


        /**
         * The bank code of the selected bank
         */
        public Builder bankCode(String bankCode) {
            Utils.checkNotNull(bankCode, "bankCode");
            this.bankCode = JsonNullable.of(bankCode);
            return this;
        }

        /**
         * The bank code of the selected bank
         */
        public Builder bankCode(JsonNullable<String> bankCode) {
            Utils.checkNotNull(bankCode, "bankCode");
            this.bankCode = bankCode;
            return this;
        }

        public NuveiPSEOptions build() {

            return new NuveiPSEOptions(
                userType, userFisNumber, fiscalNumber,
                bankCode);
        }

    }
}
