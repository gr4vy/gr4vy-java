/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import org.openapitools.jackson.nullable.JsonNullable;


public class ForterAntiFraudOptionsCartItemDeliveryDetails {
    /**
     * The type of delivery for this cart item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("delivery_type")
    private JsonNullable<? extends ForterAntiFraudOptionsCartItemDeliveryDetailsDeliveryType> deliveryType;

    /**
     * The method of delivery for this cart item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("delivery_method")
    private JsonNullable<String> deliveryMethod;

    @JsonCreator
    public ForterAntiFraudOptionsCartItemDeliveryDetails(
            @JsonProperty("delivery_type") JsonNullable<? extends ForterAntiFraudOptionsCartItemDeliveryDetailsDeliveryType> deliveryType,
            @JsonProperty("delivery_method") JsonNullable<String> deliveryMethod) {
        Utils.checkNotNull(deliveryType, "deliveryType");
        Utils.checkNotNull(deliveryMethod, "deliveryMethod");
        this.deliveryType = deliveryType;
        this.deliveryMethod = deliveryMethod;
    }
    
    public ForterAntiFraudOptionsCartItemDeliveryDetails() {
        this(JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * The type of delivery for this cart item.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<ForterAntiFraudOptionsCartItemDeliveryDetailsDeliveryType> deliveryType() {
        return (JsonNullable<ForterAntiFraudOptionsCartItemDeliveryDetailsDeliveryType>) deliveryType;
    }

    /**
     * The method of delivery for this cart item.
     */
    @JsonIgnore
    public JsonNullable<String> deliveryMethod() {
        return deliveryMethod;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The type of delivery for this cart item.
     */
    public ForterAntiFraudOptionsCartItemDeliveryDetails withDeliveryType(ForterAntiFraudOptionsCartItemDeliveryDetailsDeliveryType deliveryType) {
        Utils.checkNotNull(deliveryType, "deliveryType");
        this.deliveryType = JsonNullable.of(deliveryType);
        return this;
    }

    /**
     * The type of delivery for this cart item.
     */
    public ForterAntiFraudOptionsCartItemDeliveryDetails withDeliveryType(JsonNullable<? extends ForterAntiFraudOptionsCartItemDeliveryDetailsDeliveryType> deliveryType) {
        Utils.checkNotNull(deliveryType, "deliveryType");
        this.deliveryType = deliveryType;
        return this;
    }

    /**
     * The method of delivery for this cart item.
     */
    public ForterAntiFraudOptionsCartItemDeliveryDetails withDeliveryMethod(String deliveryMethod) {
        Utils.checkNotNull(deliveryMethod, "deliveryMethod");
        this.deliveryMethod = JsonNullable.of(deliveryMethod);
        return this;
    }

    /**
     * The method of delivery for this cart item.
     */
    public ForterAntiFraudOptionsCartItemDeliveryDetails withDeliveryMethod(JsonNullable<String> deliveryMethod) {
        Utils.checkNotNull(deliveryMethod, "deliveryMethod");
        this.deliveryMethod = deliveryMethod;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ForterAntiFraudOptionsCartItemDeliveryDetails other = (ForterAntiFraudOptionsCartItemDeliveryDetails) o;
        return 
            Utils.enhancedDeepEquals(this.deliveryType, other.deliveryType) &&
            Utils.enhancedDeepEquals(this.deliveryMethod, other.deliveryMethod);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            deliveryType, deliveryMethod);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ForterAntiFraudOptionsCartItemDeliveryDetails.class,
                "deliveryType", deliveryType,
                "deliveryMethod", deliveryMethod);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<? extends ForterAntiFraudOptionsCartItemDeliveryDetailsDeliveryType> deliveryType = JsonNullable.undefined();

        private JsonNullable<String> deliveryMethod = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The type of delivery for this cart item.
         */
        public Builder deliveryType(ForterAntiFraudOptionsCartItemDeliveryDetailsDeliveryType deliveryType) {
            Utils.checkNotNull(deliveryType, "deliveryType");
            this.deliveryType = JsonNullable.of(deliveryType);
            return this;
        }

        /**
         * The type of delivery for this cart item.
         */
        public Builder deliveryType(JsonNullable<? extends ForterAntiFraudOptionsCartItemDeliveryDetailsDeliveryType> deliveryType) {
            Utils.checkNotNull(deliveryType, "deliveryType");
            this.deliveryType = deliveryType;
            return this;
        }


        /**
         * The method of delivery for this cart item.
         */
        public Builder deliveryMethod(String deliveryMethod) {
            Utils.checkNotNull(deliveryMethod, "deliveryMethod");
            this.deliveryMethod = JsonNullable.of(deliveryMethod);
            return this;
        }

        /**
         * The method of delivery for this cart item.
         */
        public Builder deliveryMethod(JsonNullable<String> deliveryMethod) {
            Utils.checkNotNull(deliveryMethod, "deliveryMethod");
            this.deliveryMethod = deliveryMethod;
            return this;
        }

        public ForterAntiFraudOptionsCartItemDeliveryDetails build() {

            return new ForterAntiFraudOptionsCartItemDeliveryDetails(
                deliveryType, deliveryMethod);
        }

    }
}
