/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import org.openapitools.jackson.nullable.JsonNullable;


public class TravelHubCustomData {
    /**
     * The key of the custom data field.
     */
    @JsonProperty("name")
    private String name;

    /**
     * The value of the custom data field.
     */
    @JsonProperty("value")
    private String value;

    /**
     * The type of the custom data field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    private JsonNullable<String> type;

    @JsonCreator
    public TravelHubCustomData(
            @JsonProperty("name") String name,
            @JsonProperty("value") String value,
            @JsonProperty("type") JsonNullable<String> type) {
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(value, "value");
        Utils.checkNotNull(type, "type");
        this.name = name;
        this.value = value;
        this.type = type;
    }
    
    public TravelHubCustomData(
            String name,
            String value) {
        this(name, value, JsonNullable.undefined());
    }

    /**
     * The key of the custom data field.
     */
    @JsonIgnore
    public String name() {
        return name;
    }

    /**
     * The value of the custom data field.
     */
    @JsonIgnore
    public String value() {
        return value;
    }

    /**
     * The type of the custom data field.
     */
    @JsonIgnore
    public JsonNullable<String> type() {
        return type;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The key of the custom data field.
     */
    public TravelHubCustomData withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    /**
     * The value of the custom data field.
     */
    public TravelHubCustomData withValue(String value) {
        Utils.checkNotNull(value, "value");
        this.value = value;
        return this;
    }

    /**
     * The type of the custom data field.
     */
    public TravelHubCustomData withType(String type) {
        Utils.checkNotNull(type, "type");
        this.type = JsonNullable.of(type);
        return this;
    }

    /**
     * The type of the custom data field.
     */
    public TravelHubCustomData withType(JsonNullable<String> type) {
        Utils.checkNotNull(type, "type");
        this.type = type;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TravelHubCustomData other = (TravelHubCustomData) o;
        return 
            Utils.enhancedDeepEquals(this.name, other.name) &&
            Utils.enhancedDeepEquals(this.value, other.value) &&
            Utils.enhancedDeepEquals(this.type, other.type);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            name, value, type);
    }
    
    @Override
    public String toString() {
        return Utils.toString(TravelHubCustomData.class,
                "name", name,
                "value", value,
                "type", type);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String name;

        private String value;

        private JsonNullable<String> type = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The key of the custom data field.
         */
        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }


        /**
         * The value of the custom data field.
         */
        public Builder value(String value) {
            Utils.checkNotNull(value, "value");
            this.value = value;
            return this;
        }


        /**
         * The type of the custom data field.
         */
        public Builder type(String type) {
            Utils.checkNotNull(type, "type");
            this.type = JsonNullable.of(type);
            return this;
        }

        /**
         * The type of the custom data field.
         */
        public Builder type(JsonNullable<String> type) {
            Utils.checkNotNull(type, "type");
            this.type = type;
            return this;
        }

        public TravelHubCustomData build() {

            return new TravelHubCustomData(
                name, value, type);
        }

    }
}
