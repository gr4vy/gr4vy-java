/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.gr4vy.sdk.utils.LazySingletonValue;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * GooglePayFPANPaymentMethodCreate
 * 
 * <p>Create a Google Pay payment with an FPAN.
 */
public class GooglePayFPANPaymentMethodCreate {

    /**
     * The expiration date of the card, formatted `MM/YY`.
     */
    @JsonProperty("expiration_date")
    private String expirationDate;

    /**
     * The 13-19 digit number for this card.
     */
    @JsonProperty("number")
    private String number;

    /**
     * The external identifier of the buyer to attach the method to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buyer_external_identifier")
    private JsonNullable<String> buyerExternalIdentifier;

    /**
     * The ID of the buyer to attach the method to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buyer_id")
    private JsonNullable<String> buyerId;

    /**
     * The merchant reference for this payment method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("external_identifier")
    private JsonNullable<String> externalIdentifier;

    /**
     * The type of the card used
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card_type")
    private JsonNullable<String> cardType;

    /**
     * Aways `googlepay_pan_only`.
     */
    @JsonProperty("method")
    private String method;

    /**
     * The URL to redirect a user back to after the complete 3DS in browser.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("redirect_url")
    private JsonNullable<String> redirectUrl;

    /**
     * The 3 or 4 digit security code often found on the card. This often referred to as the CVV or CVD.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("security_code")
    private JsonNullable<? extends Object> securityCode;

    @JsonCreator
    public GooglePayFPANPaymentMethodCreate(
            @JsonProperty("expiration_date") String expirationDate,
            @JsonProperty("number") String number,
            @JsonProperty("buyer_external_identifier") JsonNullable<String> buyerExternalIdentifier,
            @JsonProperty("buyer_id") JsonNullable<String> buyerId,
            @JsonProperty("external_identifier") JsonNullable<String> externalIdentifier,
            @JsonProperty("card_type") JsonNullable<String> cardType,
            @JsonProperty("redirect_url") JsonNullable<String> redirectUrl,
            @JsonProperty("security_code") JsonNullable<? extends Object> securityCode) {
        Utils.checkNotNull(expirationDate, "expirationDate");
        Utils.checkNotNull(number, "number");
        Utils.checkNotNull(buyerExternalIdentifier, "buyerExternalIdentifier");
        Utils.checkNotNull(buyerId, "buyerId");
        Utils.checkNotNull(externalIdentifier, "externalIdentifier");
        Utils.checkNotNull(cardType, "cardType");
        Utils.checkNotNull(redirectUrl, "redirectUrl");
        Utils.checkNotNull(securityCode, "securityCode");
        this.expirationDate = expirationDate;
        this.number = number;
        this.buyerExternalIdentifier = buyerExternalIdentifier;
        this.buyerId = buyerId;
        this.externalIdentifier = externalIdentifier;
        this.cardType = cardType;
        this.method = Builder._SINGLETON_VALUE_Method.value();
        this.redirectUrl = redirectUrl;
        this.securityCode = securityCode;
    }
    
    public GooglePayFPANPaymentMethodCreate(
            String expirationDate,
            String number) {
        this(expirationDate, number, JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * The expiration date of the card, formatted `MM/YY`.
     */
    @JsonIgnore
    public String expirationDate() {
        return expirationDate;
    }

    /**
     * The 13-19 digit number for this card.
     */
    @JsonIgnore
    public String number() {
        return number;
    }

    /**
     * The external identifier of the buyer to attach the method to.
     */
    @JsonIgnore
    public JsonNullable<String> buyerExternalIdentifier() {
        return buyerExternalIdentifier;
    }

    /**
     * The ID of the buyer to attach the method to.
     */
    @JsonIgnore
    public JsonNullable<String> buyerId() {
        return buyerId;
    }

    /**
     * The merchant reference for this payment method.
     */
    @JsonIgnore
    public JsonNullable<String> externalIdentifier() {
        return externalIdentifier;
    }

    /**
     * The type of the card used
     */
    @JsonIgnore
    public JsonNullable<String> cardType() {
        return cardType;
    }

    /**
     * Aways `googlepay_pan_only`.
     */
    @JsonIgnore
    public String method() {
        return method;
    }

    /**
     * The URL to redirect a user back to after the complete 3DS in browser.
     */
    @JsonIgnore
    public JsonNullable<String> redirectUrl() {
        return redirectUrl;
    }

    /**
     * The 3 or 4 digit security code often found on the card. This often referred to as the CVV or CVD.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Object> securityCode() {
        return (JsonNullable<Object>) securityCode;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The expiration date of the card, formatted `MM/YY`.
     */
    public GooglePayFPANPaymentMethodCreate withExpirationDate(String expirationDate) {
        Utils.checkNotNull(expirationDate, "expirationDate");
        this.expirationDate = expirationDate;
        return this;
    }

    /**
     * The 13-19 digit number for this card.
     */
    public GooglePayFPANPaymentMethodCreate withNumber(String number) {
        Utils.checkNotNull(number, "number");
        this.number = number;
        return this;
    }

    /**
     * The external identifier of the buyer to attach the method to.
     */
    public GooglePayFPANPaymentMethodCreate withBuyerExternalIdentifier(String buyerExternalIdentifier) {
        Utils.checkNotNull(buyerExternalIdentifier, "buyerExternalIdentifier");
        this.buyerExternalIdentifier = JsonNullable.of(buyerExternalIdentifier);
        return this;
    }

    /**
     * The external identifier of the buyer to attach the method to.
     */
    public GooglePayFPANPaymentMethodCreate withBuyerExternalIdentifier(JsonNullable<String> buyerExternalIdentifier) {
        Utils.checkNotNull(buyerExternalIdentifier, "buyerExternalIdentifier");
        this.buyerExternalIdentifier = buyerExternalIdentifier;
        return this;
    }

    /**
     * The ID of the buyer to attach the method to.
     */
    public GooglePayFPANPaymentMethodCreate withBuyerId(String buyerId) {
        Utils.checkNotNull(buyerId, "buyerId");
        this.buyerId = JsonNullable.of(buyerId);
        return this;
    }

    /**
     * The ID of the buyer to attach the method to.
     */
    public GooglePayFPANPaymentMethodCreate withBuyerId(JsonNullable<String> buyerId) {
        Utils.checkNotNull(buyerId, "buyerId");
        this.buyerId = buyerId;
        return this;
    }

    /**
     * The merchant reference for this payment method.
     */
    public GooglePayFPANPaymentMethodCreate withExternalIdentifier(String externalIdentifier) {
        Utils.checkNotNull(externalIdentifier, "externalIdentifier");
        this.externalIdentifier = JsonNullable.of(externalIdentifier);
        return this;
    }

    /**
     * The merchant reference for this payment method.
     */
    public GooglePayFPANPaymentMethodCreate withExternalIdentifier(JsonNullable<String> externalIdentifier) {
        Utils.checkNotNull(externalIdentifier, "externalIdentifier");
        this.externalIdentifier = externalIdentifier;
        return this;
    }

    /**
     * The type of the card used
     */
    public GooglePayFPANPaymentMethodCreate withCardType(String cardType) {
        Utils.checkNotNull(cardType, "cardType");
        this.cardType = JsonNullable.of(cardType);
        return this;
    }

    /**
     * The type of the card used
     */
    public GooglePayFPANPaymentMethodCreate withCardType(JsonNullable<String> cardType) {
        Utils.checkNotNull(cardType, "cardType");
        this.cardType = cardType;
        return this;
    }

    /**
     * The URL to redirect a user back to after the complete 3DS in browser.
     */
    public GooglePayFPANPaymentMethodCreate withRedirectUrl(String redirectUrl) {
        Utils.checkNotNull(redirectUrl, "redirectUrl");
        this.redirectUrl = JsonNullable.of(redirectUrl);
        return this;
    }

    /**
     * The URL to redirect a user back to after the complete 3DS in browser.
     */
    public GooglePayFPANPaymentMethodCreate withRedirectUrl(JsonNullable<String> redirectUrl) {
        Utils.checkNotNull(redirectUrl, "redirectUrl");
        this.redirectUrl = redirectUrl;
        return this;
    }

    /**
     * The 3 or 4 digit security code often found on the card. This often referred to as the CVV or CVD.
     */
    public GooglePayFPANPaymentMethodCreate withSecurityCode(Object securityCode) {
        Utils.checkNotNull(securityCode, "securityCode");
        this.securityCode = JsonNullable.of(securityCode);
        return this;
    }

    /**
     * The 3 or 4 digit security code often found on the card. This often referred to as the CVV or CVD.
     */
    public GooglePayFPANPaymentMethodCreate withSecurityCode(JsonNullable<? extends Object> securityCode) {
        Utils.checkNotNull(securityCode, "securityCode");
        this.securityCode = securityCode;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GooglePayFPANPaymentMethodCreate other = (GooglePayFPANPaymentMethodCreate) o;
        return 
            Objects.deepEquals(this.expirationDate, other.expirationDate) &&
            Objects.deepEquals(this.number, other.number) &&
            Objects.deepEquals(this.buyerExternalIdentifier, other.buyerExternalIdentifier) &&
            Objects.deepEquals(this.buyerId, other.buyerId) &&
            Objects.deepEquals(this.externalIdentifier, other.externalIdentifier) &&
            Objects.deepEquals(this.cardType, other.cardType) &&
            Objects.deepEquals(this.method, other.method) &&
            Objects.deepEquals(this.redirectUrl, other.redirectUrl) &&
            Objects.deepEquals(this.securityCode, other.securityCode);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            expirationDate,
            number,
            buyerExternalIdentifier,
            buyerId,
            externalIdentifier,
            cardType,
            method,
            redirectUrl,
            securityCode);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GooglePayFPANPaymentMethodCreate.class,
                "expirationDate", expirationDate,
                "number", number,
                "buyerExternalIdentifier", buyerExternalIdentifier,
                "buyerId", buyerId,
                "externalIdentifier", externalIdentifier,
                "cardType", cardType,
                "method", method,
                "redirectUrl", redirectUrl,
                "securityCode", securityCode);
    }
    
    public final static class Builder {
 
        private String expirationDate;
 
        private String number;
 
        private JsonNullable<String> buyerExternalIdentifier = JsonNullable.undefined();
 
        private JsonNullable<String> buyerId = JsonNullable.undefined();
 
        private JsonNullable<String> externalIdentifier = JsonNullable.undefined();
 
        private JsonNullable<String> cardType = JsonNullable.undefined();
 
        private JsonNullable<String> redirectUrl = JsonNullable.undefined();
 
        private JsonNullable<? extends Object> securityCode = JsonNullable.undefined();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The expiration date of the card, formatted `MM/YY`.
         */
        public Builder expirationDate(String expirationDate) {
            Utils.checkNotNull(expirationDate, "expirationDate");
            this.expirationDate = expirationDate;
            return this;
        }

        /**
         * The 13-19 digit number for this card.
         */
        public Builder number(String number) {
            Utils.checkNotNull(number, "number");
            this.number = number;
            return this;
        }

        /**
         * The external identifier of the buyer to attach the method to.
         */
        public Builder buyerExternalIdentifier(String buyerExternalIdentifier) {
            Utils.checkNotNull(buyerExternalIdentifier, "buyerExternalIdentifier");
            this.buyerExternalIdentifier = JsonNullable.of(buyerExternalIdentifier);
            return this;
        }

        /**
         * The external identifier of the buyer to attach the method to.
         */
        public Builder buyerExternalIdentifier(JsonNullable<String> buyerExternalIdentifier) {
            Utils.checkNotNull(buyerExternalIdentifier, "buyerExternalIdentifier");
            this.buyerExternalIdentifier = buyerExternalIdentifier;
            return this;
        }

        /**
         * The ID of the buyer to attach the method to.
         */
        public Builder buyerId(String buyerId) {
            Utils.checkNotNull(buyerId, "buyerId");
            this.buyerId = JsonNullable.of(buyerId);
            return this;
        }

        /**
         * The ID of the buyer to attach the method to.
         */
        public Builder buyerId(JsonNullable<String> buyerId) {
            Utils.checkNotNull(buyerId, "buyerId");
            this.buyerId = buyerId;
            return this;
        }

        /**
         * The merchant reference for this payment method.
         */
        public Builder externalIdentifier(String externalIdentifier) {
            Utils.checkNotNull(externalIdentifier, "externalIdentifier");
            this.externalIdentifier = JsonNullable.of(externalIdentifier);
            return this;
        }

        /**
         * The merchant reference for this payment method.
         */
        public Builder externalIdentifier(JsonNullable<String> externalIdentifier) {
            Utils.checkNotNull(externalIdentifier, "externalIdentifier");
            this.externalIdentifier = externalIdentifier;
            return this;
        }

        /**
         * The type of the card used
         */
        public Builder cardType(String cardType) {
            Utils.checkNotNull(cardType, "cardType");
            this.cardType = JsonNullable.of(cardType);
            return this;
        }

        /**
         * The type of the card used
         */
        public Builder cardType(JsonNullable<String> cardType) {
            Utils.checkNotNull(cardType, "cardType");
            this.cardType = cardType;
            return this;
        }

        /**
         * The URL to redirect a user back to after the complete 3DS in browser.
         */
        public Builder redirectUrl(String redirectUrl) {
            Utils.checkNotNull(redirectUrl, "redirectUrl");
            this.redirectUrl = JsonNullable.of(redirectUrl);
            return this;
        }

        /**
         * The URL to redirect a user back to after the complete 3DS in browser.
         */
        public Builder redirectUrl(JsonNullable<String> redirectUrl) {
            Utils.checkNotNull(redirectUrl, "redirectUrl");
            this.redirectUrl = redirectUrl;
            return this;
        }

        /**
         * The 3 or 4 digit security code often found on the card. This often referred to as the CVV or CVD.
         */
        public Builder securityCode(Object securityCode) {
            Utils.checkNotNull(securityCode, "securityCode");
            this.securityCode = JsonNullable.of(securityCode);
            return this;
        }

        /**
         * The 3 or 4 digit security code often found on the card. This often referred to as the CVV or CVD.
         */
        public Builder securityCode(JsonNullable<? extends Object> securityCode) {
            Utils.checkNotNull(securityCode, "securityCode");
            this.securityCode = securityCode;
            return this;
        }
        
        public GooglePayFPANPaymentMethodCreate build() {
            return new GooglePayFPANPaymentMethodCreate(
                expirationDate,
                number,
                buyerExternalIdentifier,
                buyerId,
                externalIdentifier,
                cardType,
                redirectUrl,
                securityCode);
        }

        private static final LazySingletonValue<String> _SINGLETON_VALUE_Method =
                new LazySingletonValue<>(
                        "method",
                        "\"googlepay_pan_only\"",
                        new TypeReference<String>() {});
    }
}
