/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;


public class DlocalUPIRecurringInfoOptions {
    /**
     * Indicates the frequency unit for the subscription. Allowed values are: `DAILY`, `WEEKLY`, `MONTHLY`,
     * `QUARTERLY`, `SEMI_ANNUAL`, and `ANNUAL`.
     */
    @JsonProperty("subscription_frequency_unit")
    private SubscriptionFrequencyUnit subscriptionFrequencyUnit;

    /**
     * Indicates the frequency for the subscription.
     */
    @JsonProperty("subscription_frequency")
    private long subscriptionFrequency;

    /**
     * Indicates the start date for the subscription in format `YYYYMMDD`.
     */
    @JsonProperty("subscription_start_at")
    private String subscriptionStartAt;

    /**
     * Indicates the end date for the subscription in format `YYYYMMDD`.
     */
    @JsonProperty("subscription_end_at")
    private String subscriptionEndAt;

    @JsonCreator
    public DlocalUPIRecurringInfoOptions(
            @JsonProperty("subscription_frequency_unit") SubscriptionFrequencyUnit subscriptionFrequencyUnit,
            @JsonProperty("subscription_frequency") long subscriptionFrequency,
            @JsonProperty("subscription_start_at") String subscriptionStartAt,
            @JsonProperty("subscription_end_at") String subscriptionEndAt) {
        Utils.checkNotNull(subscriptionFrequencyUnit, "subscriptionFrequencyUnit");
        Utils.checkNotNull(subscriptionFrequency, "subscriptionFrequency");
        Utils.checkNotNull(subscriptionStartAt, "subscriptionStartAt");
        Utils.checkNotNull(subscriptionEndAt, "subscriptionEndAt");
        this.subscriptionFrequencyUnit = subscriptionFrequencyUnit;
        this.subscriptionFrequency = subscriptionFrequency;
        this.subscriptionStartAt = subscriptionStartAt;
        this.subscriptionEndAt = subscriptionEndAt;
    }

    /**
     * Indicates the frequency unit for the subscription. Allowed values are: `DAILY`, `WEEKLY`, `MONTHLY`,
     * `QUARTERLY`, `SEMI_ANNUAL`, and `ANNUAL`.
     */
    @JsonIgnore
    public SubscriptionFrequencyUnit subscriptionFrequencyUnit() {
        return subscriptionFrequencyUnit;
    }

    /**
     * Indicates the frequency for the subscription.
     */
    @JsonIgnore
    public long subscriptionFrequency() {
        return subscriptionFrequency;
    }

    /**
     * Indicates the start date for the subscription in format `YYYYMMDD`.
     */
    @JsonIgnore
    public String subscriptionStartAt() {
        return subscriptionStartAt;
    }

    /**
     * Indicates the end date for the subscription in format `YYYYMMDD`.
     */
    @JsonIgnore
    public String subscriptionEndAt() {
        return subscriptionEndAt;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Indicates the frequency unit for the subscription. Allowed values are: `DAILY`, `WEEKLY`, `MONTHLY`,
     * `QUARTERLY`, `SEMI_ANNUAL`, and `ANNUAL`.
     */
    public DlocalUPIRecurringInfoOptions withSubscriptionFrequencyUnit(SubscriptionFrequencyUnit subscriptionFrequencyUnit) {
        Utils.checkNotNull(subscriptionFrequencyUnit, "subscriptionFrequencyUnit");
        this.subscriptionFrequencyUnit = subscriptionFrequencyUnit;
        return this;
    }

    /**
     * Indicates the frequency for the subscription.
     */
    public DlocalUPIRecurringInfoOptions withSubscriptionFrequency(long subscriptionFrequency) {
        Utils.checkNotNull(subscriptionFrequency, "subscriptionFrequency");
        this.subscriptionFrequency = subscriptionFrequency;
        return this;
    }

    /**
     * Indicates the start date for the subscription in format `YYYYMMDD`.
     */
    public DlocalUPIRecurringInfoOptions withSubscriptionStartAt(String subscriptionStartAt) {
        Utils.checkNotNull(subscriptionStartAt, "subscriptionStartAt");
        this.subscriptionStartAt = subscriptionStartAt;
        return this;
    }

    /**
     * Indicates the end date for the subscription in format `YYYYMMDD`.
     */
    public DlocalUPIRecurringInfoOptions withSubscriptionEndAt(String subscriptionEndAt) {
        Utils.checkNotNull(subscriptionEndAt, "subscriptionEndAt");
        this.subscriptionEndAt = subscriptionEndAt;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DlocalUPIRecurringInfoOptions other = (DlocalUPIRecurringInfoOptions) o;
        return 
            Utils.enhancedDeepEquals(this.subscriptionFrequencyUnit, other.subscriptionFrequencyUnit) &&
            Utils.enhancedDeepEquals(this.subscriptionFrequency, other.subscriptionFrequency) &&
            Utils.enhancedDeepEquals(this.subscriptionStartAt, other.subscriptionStartAt) &&
            Utils.enhancedDeepEquals(this.subscriptionEndAt, other.subscriptionEndAt);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            subscriptionFrequencyUnit, subscriptionFrequency, subscriptionStartAt,
            subscriptionEndAt);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DlocalUPIRecurringInfoOptions.class,
                "subscriptionFrequencyUnit", subscriptionFrequencyUnit,
                "subscriptionFrequency", subscriptionFrequency,
                "subscriptionStartAt", subscriptionStartAt,
                "subscriptionEndAt", subscriptionEndAt);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private SubscriptionFrequencyUnit subscriptionFrequencyUnit;

        private Long subscriptionFrequency;

        private String subscriptionStartAt;

        private String subscriptionEndAt;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Indicates the frequency unit for the subscription. Allowed values are: `DAILY`, `WEEKLY`, `MONTHLY`,
         * `QUARTERLY`, `SEMI_ANNUAL`, and `ANNUAL`.
         */
        public Builder subscriptionFrequencyUnit(SubscriptionFrequencyUnit subscriptionFrequencyUnit) {
            Utils.checkNotNull(subscriptionFrequencyUnit, "subscriptionFrequencyUnit");
            this.subscriptionFrequencyUnit = subscriptionFrequencyUnit;
            return this;
        }


        /**
         * Indicates the frequency for the subscription.
         */
        public Builder subscriptionFrequency(long subscriptionFrequency) {
            Utils.checkNotNull(subscriptionFrequency, "subscriptionFrequency");
            this.subscriptionFrequency = subscriptionFrequency;
            return this;
        }


        /**
         * Indicates the start date for the subscription in format `YYYYMMDD`.
         */
        public Builder subscriptionStartAt(String subscriptionStartAt) {
            Utils.checkNotNull(subscriptionStartAt, "subscriptionStartAt");
            this.subscriptionStartAt = subscriptionStartAt;
            return this;
        }


        /**
         * Indicates the end date for the subscription in format `YYYYMMDD`.
         */
        public Builder subscriptionEndAt(String subscriptionEndAt) {
            Utils.checkNotNull(subscriptionEndAt, "subscriptionEndAt");
            this.subscriptionEndAt = subscriptionEndAt;
            return this;
        }

        public DlocalUPIRecurringInfoOptions build() {

            return new DlocalUPIRecurringInfoOptions(
                subscriptionFrequencyUnit, subscriptionFrequency, subscriptionStartAt,
                subscriptionEndAt);
        }

    }
}
