/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;

public class ThreeDSecureV2 {

    @JsonProperty("version")
    private String version;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authentication_response")
    private JsonNullable<String> authenticationResponse;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("directory_response")
    private JsonNullable<String> directoryResponse;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("directory_transaction_id")
    private JsonNullable<String> directoryTransactionId;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transaction_reason")
    private JsonNullable<String> transactionReason;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cavv")
    private JsonNullable<String> cavv;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eci")
    private JsonNullable<String> eci;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cardholder_info")
    private JsonNullable<String> cardholderInfo;

    @JsonCreator
    public ThreeDSecureV2(
            @JsonProperty("version") String version,
            @JsonProperty("authentication_response") JsonNullable<String> authenticationResponse,
            @JsonProperty("directory_response") JsonNullable<String> directoryResponse,
            @JsonProperty("directory_transaction_id") JsonNullable<String> directoryTransactionId,
            @JsonProperty("transaction_reason") JsonNullable<String> transactionReason,
            @JsonProperty("cavv") JsonNullable<String> cavv,
            @JsonProperty("eci") JsonNullable<String> eci,
            @JsonProperty("cardholder_info") JsonNullable<String> cardholderInfo) {
        Utils.checkNotNull(version, "version");
        Utils.checkNotNull(authenticationResponse, "authenticationResponse");
        Utils.checkNotNull(directoryResponse, "directoryResponse");
        Utils.checkNotNull(directoryTransactionId, "directoryTransactionId");
        Utils.checkNotNull(transactionReason, "transactionReason");
        Utils.checkNotNull(cavv, "cavv");
        Utils.checkNotNull(eci, "eci");
        Utils.checkNotNull(cardholderInfo, "cardholderInfo");
        this.version = version;
        this.authenticationResponse = authenticationResponse;
        this.directoryResponse = directoryResponse;
        this.directoryTransactionId = directoryTransactionId;
        this.transactionReason = transactionReason;
        this.cavv = cavv;
        this.eci = eci;
        this.cardholderInfo = cardholderInfo;
    }
    
    public ThreeDSecureV2(
            String version) {
        this(version, JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    @JsonIgnore
    public String version() {
        return version;
    }

    @JsonIgnore
    public JsonNullable<String> authenticationResponse() {
        return authenticationResponse;
    }

    @JsonIgnore
    public JsonNullable<String> directoryResponse() {
        return directoryResponse;
    }

    @JsonIgnore
    public JsonNullable<String> directoryTransactionId() {
        return directoryTransactionId;
    }

    @JsonIgnore
    public JsonNullable<String> transactionReason() {
        return transactionReason;
    }

    @JsonIgnore
    public JsonNullable<String> cavv() {
        return cavv;
    }

    @JsonIgnore
    public JsonNullable<String> eci() {
        return eci;
    }

    @JsonIgnore
    public JsonNullable<String> cardholderInfo() {
        return cardholderInfo;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public ThreeDSecureV2 withVersion(String version) {
        Utils.checkNotNull(version, "version");
        this.version = version;
        return this;
    }

    public ThreeDSecureV2 withAuthenticationResponse(String authenticationResponse) {
        Utils.checkNotNull(authenticationResponse, "authenticationResponse");
        this.authenticationResponse = JsonNullable.of(authenticationResponse);
        return this;
    }

    public ThreeDSecureV2 withAuthenticationResponse(JsonNullable<String> authenticationResponse) {
        Utils.checkNotNull(authenticationResponse, "authenticationResponse");
        this.authenticationResponse = authenticationResponse;
        return this;
    }

    public ThreeDSecureV2 withDirectoryResponse(String directoryResponse) {
        Utils.checkNotNull(directoryResponse, "directoryResponse");
        this.directoryResponse = JsonNullable.of(directoryResponse);
        return this;
    }

    public ThreeDSecureV2 withDirectoryResponse(JsonNullable<String> directoryResponse) {
        Utils.checkNotNull(directoryResponse, "directoryResponse");
        this.directoryResponse = directoryResponse;
        return this;
    }

    public ThreeDSecureV2 withDirectoryTransactionId(String directoryTransactionId) {
        Utils.checkNotNull(directoryTransactionId, "directoryTransactionId");
        this.directoryTransactionId = JsonNullable.of(directoryTransactionId);
        return this;
    }

    public ThreeDSecureV2 withDirectoryTransactionId(JsonNullable<String> directoryTransactionId) {
        Utils.checkNotNull(directoryTransactionId, "directoryTransactionId");
        this.directoryTransactionId = directoryTransactionId;
        return this;
    }

    public ThreeDSecureV2 withTransactionReason(String transactionReason) {
        Utils.checkNotNull(transactionReason, "transactionReason");
        this.transactionReason = JsonNullable.of(transactionReason);
        return this;
    }

    public ThreeDSecureV2 withTransactionReason(JsonNullable<String> transactionReason) {
        Utils.checkNotNull(transactionReason, "transactionReason");
        this.transactionReason = transactionReason;
        return this;
    }

    public ThreeDSecureV2 withCavv(String cavv) {
        Utils.checkNotNull(cavv, "cavv");
        this.cavv = JsonNullable.of(cavv);
        return this;
    }

    public ThreeDSecureV2 withCavv(JsonNullable<String> cavv) {
        Utils.checkNotNull(cavv, "cavv");
        this.cavv = cavv;
        return this;
    }

    public ThreeDSecureV2 withEci(String eci) {
        Utils.checkNotNull(eci, "eci");
        this.eci = JsonNullable.of(eci);
        return this;
    }

    public ThreeDSecureV2 withEci(JsonNullable<String> eci) {
        Utils.checkNotNull(eci, "eci");
        this.eci = eci;
        return this;
    }

    public ThreeDSecureV2 withCardholderInfo(String cardholderInfo) {
        Utils.checkNotNull(cardholderInfo, "cardholderInfo");
        this.cardholderInfo = JsonNullable.of(cardholderInfo);
        return this;
    }

    public ThreeDSecureV2 withCardholderInfo(JsonNullable<String> cardholderInfo) {
        Utils.checkNotNull(cardholderInfo, "cardholderInfo");
        this.cardholderInfo = cardholderInfo;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ThreeDSecureV2 other = (ThreeDSecureV2) o;
        return 
            Objects.deepEquals(this.version, other.version) &&
            Objects.deepEquals(this.authenticationResponse, other.authenticationResponse) &&
            Objects.deepEquals(this.directoryResponse, other.directoryResponse) &&
            Objects.deepEquals(this.directoryTransactionId, other.directoryTransactionId) &&
            Objects.deepEquals(this.transactionReason, other.transactionReason) &&
            Objects.deepEquals(this.cavv, other.cavv) &&
            Objects.deepEquals(this.eci, other.eci) &&
            Objects.deepEquals(this.cardholderInfo, other.cardholderInfo);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            version,
            authenticationResponse,
            directoryResponse,
            directoryTransactionId,
            transactionReason,
            cavv,
            eci,
            cardholderInfo);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ThreeDSecureV2.class,
                "version", version,
                "authenticationResponse", authenticationResponse,
                "directoryResponse", directoryResponse,
                "directoryTransactionId", directoryTransactionId,
                "transactionReason", transactionReason,
                "cavv", cavv,
                "eci", eci,
                "cardholderInfo", cardholderInfo);
    }
    
    public final static class Builder {
 
        private String version;
 
        private JsonNullable<String> authenticationResponse = JsonNullable.undefined();
 
        private JsonNullable<String> directoryResponse = JsonNullable.undefined();
 
        private JsonNullable<String> directoryTransactionId = JsonNullable.undefined();
 
        private JsonNullable<String> transactionReason = JsonNullable.undefined();
 
        private JsonNullable<String> cavv = JsonNullable.undefined();
 
        private JsonNullable<String> eci = JsonNullable.undefined();
 
        private JsonNullable<String> cardholderInfo = JsonNullable.undefined();
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder version(String version) {
            Utils.checkNotNull(version, "version");
            this.version = version;
            return this;
        }

        public Builder authenticationResponse(String authenticationResponse) {
            Utils.checkNotNull(authenticationResponse, "authenticationResponse");
            this.authenticationResponse = JsonNullable.of(authenticationResponse);
            return this;
        }

        public Builder authenticationResponse(JsonNullable<String> authenticationResponse) {
            Utils.checkNotNull(authenticationResponse, "authenticationResponse");
            this.authenticationResponse = authenticationResponse;
            return this;
        }

        public Builder directoryResponse(String directoryResponse) {
            Utils.checkNotNull(directoryResponse, "directoryResponse");
            this.directoryResponse = JsonNullable.of(directoryResponse);
            return this;
        }

        public Builder directoryResponse(JsonNullable<String> directoryResponse) {
            Utils.checkNotNull(directoryResponse, "directoryResponse");
            this.directoryResponse = directoryResponse;
            return this;
        }

        public Builder directoryTransactionId(String directoryTransactionId) {
            Utils.checkNotNull(directoryTransactionId, "directoryTransactionId");
            this.directoryTransactionId = JsonNullable.of(directoryTransactionId);
            return this;
        }

        public Builder directoryTransactionId(JsonNullable<String> directoryTransactionId) {
            Utils.checkNotNull(directoryTransactionId, "directoryTransactionId");
            this.directoryTransactionId = directoryTransactionId;
            return this;
        }

        public Builder transactionReason(String transactionReason) {
            Utils.checkNotNull(transactionReason, "transactionReason");
            this.transactionReason = JsonNullable.of(transactionReason);
            return this;
        }

        public Builder transactionReason(JsonNullable<String> transactionReason) {
            Utils.checkNotNull(transactionReason, "transactionReason");
            this.transactionReason = transactionReason;
            return this;
        }

        public Builder cavv(String cavv) {
            Utils.checkNotNull(cavv, "cavv");
            this.cavv = JsonNullable.of(cavv);
            return this;
        }

        public Builder cavv(JsonNullable<String> cavv) {
            Utils.checkNotNull(cavv, "cavv");
            this.cavv = cavv;
            return this;
        }

        public Builder eci(String eci) {
            Utils.checkNotNull(eci, "eci");
            this.eci = JsonNullable.of(eci);
            return this;
        }

        public Builder eci(JsonNullable<String> eci) {
            Utils.checkNotNull(eci, "eci");
            this.eci = eci;
            return this;
        }

        public Builder cardholderInfo(String cardholderInfo) {
            Utils.checkNotNull(cardholderInfo, "cardholderInfo");
            this.cardholderInfo = JsonNullable.of(cardholderInfo);
            return this;
        }

        public Builder cardholderInfo(JsonNullable<String> cardholderInfo) {
            Utils.checkNotNull(cardholderInfo, "cardholderInfo");
            this.cardholderInfo = cardholderInfo;
            return this;
        }
        
        public ThreeDSecureV2 build() {
            return new ThreeDSecureV2(
                version,
                authenticationResponse,
                directoryResponse,
                directoryTransactionId,
                transactionReason,
                cavv,
                eci,
                cardholderInfo);
        }
    }
}
