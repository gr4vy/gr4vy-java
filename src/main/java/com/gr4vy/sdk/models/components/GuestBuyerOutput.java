/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import org.openapitools.jackson.nullable.JsonNullable;


public class GuestBuyerOutput {
    /**
     * The display name for the buyer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("display_name")
    private JsonNullable<String> displayName;

    /**
     * The merchant identifier for this buyer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("external_identifier")
    private JsonNullable<String> externalIdentifier;

    /**
     * The billing name, address, email, and other fields for this buyer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billing_details")
    private JsonNullable<? extends BillingDetailsOutput> billingDetails;

    /**
     * The buyer account number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_number")
    private JsonNullable<String> accountNumber;

    /**
     * The optional shipping details for this buyer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipping_details")
    private JsonNullable<? extends ShippingDetailsCreate> shippingDetails;

    @JsonCreator
    public GuestBuyerOutput(
            @JsonProperty("display_name") JsonNullable<String> displayName,
            @JsonProperty("external_identifier") JsonNullable<String> externalIdentifier,
            @JsonProperty("billing_details") JsonNullable<? extends BillingDetailsOutput> billingDetails,
            @JsonProperty("account_number") JsonNullable<String> accountNumber,
            @JsonProperty("shipping_details") JsonNullable<? extends ShippingDetailsCreate> shippingDetails) {
        Utils.checkNotNull(displayName, "displayName");
        Utils.checkNotNull(externalIdentifier, "externalIdentifier");
        Utils.checkNotNull(billingDetails, "billingDetails");
        Utils.checkNotNull(accountNumber, "accountNumber");
        Utils.checkNotNull(shippingDetails, "shippingDetails");
        this.displayName = displayName;
        this.externalIdentifier = externalIdentifier;
        this.billingDetails = billingDetails;
        this.accountNumber = accountNumber;
        this.shippingDetails = shippingDetails;
    }
    
    public GuestBuyerOutput() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * The display name for the buyer.
     */
    @JsonIgnore
    public JsonNullable<String> displayName() {
        return displayName;
    }

    /**
     * The merchant identifier for this buyer.
     */
    @JsonIgnore
    public JsonNullable<String> externalIdentifier() {
        return externalIdentifier;
    }

    /**
     * The billing name, address, email, and other fields for this buyer.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<BillingDetailsOutput> billingDetails() {
        return (JsonNullable<BillingDetailsOutput>) billingDetails;
    }

    /**
     * The buyer account number
     */
    @JsonIgnore
    public JsonNullable<String> accountNumber() {
        return accountNumber;
    }

    /**
     * The optional shipping details for this buyer.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<ShippingDetailsCreate> shippingDetails() {
        return (JsonNullable<ShippingDetailsCreate>) shippingDetails;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The display name for the buyer.
     */
    public GuestBuyerOutput withDisplayName(String displayName) {
        Utils.checkNotNull(displayName, "displayName");
        this.displayName = JsonNullable.of(displayName);
        return this;
    }

    /**
     * The display name for the buyer.
     */
    public GuestBuyerOutput withDisplayName(JsonNullable<String> displayName) {
        Utils.checkNotNull(displayName, "displayName");
        this.displayName = displayName;
        return this;
    }

    /**
     * The merchant identifier for this buyer.
     */
    public GuestBuyerOutput withExternalIdentifier(String externalIdentifier) {
        Utils.checkNotNull(externalIdentifier, "externalIdentifier");
        this.externalIdentifier = JsonNullable.of(externalIdentifier);
        return this;
    }

    /**
     * The merchant identifier for this buyer.
     */
    public GuestBuyerOutput withExternalIdentifier(JsonNullable<String> externalIdentifier) {
        Utils.checkNotNull(externalIdentifier, "externalIdentifier");
        this.externalIdentifier = externalIdentifier;
        return this;
    }

    /**
     * The billing name, address, email, and other fields for this buyer.
     */
    public GuestBuyerOutput withBillingDetails(BillingDetailsOutput billingDetails) {
        Utils.checkNotNull(billingDetails, "billingDetails");
        this.billingDetails = JsonNullable.of(billingDetails);
        return this;
    }

    /**
     * The billing name, address, email, and other fields for this buyer.
     */
    public GuestBuyerOutput withBillingDetails(JsonNullable<? extends BillingDetailsOutput> billingDetails) {
        Utils.checkNotNull(billingDetails, "billingDetails");
        this.billingDetails = billingDetails;
        return this;
    }

    /**
     * The buyer account number
     */
    public GuestBuyerOutput withAccountNumber(String accountNumber) {
        Utils.checkNotNull(accountNumber, "accountNumber");
        this.accountNumber = JsonNullable.of(accountNumber);
        return this;
    }

    /**
     * The buyer account number
     */
    public GuestBuyerOutput withAccountNumber(JsonNullable<String> accountNumber) {
        Utils.checkNotNull(accountNumber, "accountNumber");
        this.accountNumber = accountNumber;
        return this;
    }

    /**
     * The optional shipping details for this buyer.
     */
    public GuestBuyerOutput withShippingDetails(ShippingDetailsCreate shippingDetails) {
        Utils.checkNotNull(shippingDetails, "shippingDetails");
        this.shippingDetails = JsonNullable.of(shippingDetails);
        return this;
    }

    /**
     * The optional shipping details for this buyer.
     */
    public GuestBuyerOutput withShippingDetails(JsonNullable<? extends ShippingDetailsCreate> shippingDetails) {
        Utils.checkNotNull(shippingDetails, "shippingDetails");
        this.shippingDetails = shippingDetails;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GuestBuyerOutput other = (GuestBuyerOutput) o;
        return 
            Utils.enhancedDeepEquals(this.displayName, other.displayName) &&
            Utils.enhancedDeepEquals(this.externalIdentifier, other.externalIdentifier) &&
            Utils.enhancedDeepEquals(this.billingDetails, other.billingDetails) &&
            Utils.enhancedDeepEquals(this.accountNumber, other.accountNumber) &&
            Utils.enhancedDeepEquals(this.shippingDetails, other.shippingDetails);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            displayName, externalIdentifier, billingDetails,
            accountNumber, shippingDetails);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GuestBuyerOutput.class,
                "displayName", displayName,
                "externalIdentifier", externalIdentifier,
                "billingDetails", billingDetails,
                "accountNumber", accountNumber,
                "shippingDetails", shippingDetails);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<String> displayName = JsonNullable.undefined();

        private JsonNullable<String> externalIdentifier = JsonNullable.undefined();

        private JsonNullable<? extends BillingDetailsOutput> billingDetails = JsonNullable.undefined();

        private JsonNullable<String> accountNumber = JsonNullable.undefined();

        private JsonNullable<? extends ShippingDetailsCreate> shippingDetails = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The display name for the buyer.
         */
        public Builder displayName(String displayName) {
            Utils.checkNotNull(displayName, "displayName");
            this.displayName = JsonNullable.of(displayName);
            return this;
        }

        /**
         * The display name for the buyer.
         */
        public Builder displayName(JsonNullable<String> displayName) {
            Utils.checkNotNull(displayName, "displayName");
            this.displayName = displayName;
            return this;
        }


        /**
         * The merchant identifier for this buyer.
         */
        public Builder externalIdentifier(String externalIdentifier) {
            Utils.checkNotNull(externalIdentifier, "externalIdentifier");
            this.externalIdentifier = JsonNullable.of(externalIdentifier);
            return this;
        }

        /**
         * The merchant identifier for this buyer.
         */
        public Builder externalIdentifier(JsonNullable<String> externalIdentifier) {
            Utils.checkNotNull(externalIdentifier, "externalIdentifier");
            this.externalIdentifier = externalIdentifier;
            return this;
        }


        /**
         * The billing name, address, email, and other fields for this buyer.
         */
        public Builder billingDetails(BillingDetailsOutput billingDetails) {
            Utils.checkNotNull(billingDetails, "billingDetails");
            this.billingDetails = JsonNullable.of(billingDetails);
            return this;
        }

        /**
         * The billing name, address, email, and other fields for this buyer.
         */
        public Builder billingDetails(JsonNullable<? extends BillingDetailsOutput> billingDetails) {
            Utils.checkNotNull(billingDetails, "billingDetails");
            this.billingDetails = billingDetails;
            return this;
        }


        /**
         * The buyer account number
         */
        public Builder accountNumber(String accountNumber) {
            Utils.checkNotNull(accountNumber, "accountNumber");
            this.accountNumber = JsonNullable.of(accountNumber);
            return this;
        }

        /**
         * The buyer account number
         */
        public Builder accountNumber(JsonNullable<String> accountNumber) {
            Utils.checkNotNull(accountNumber, "accountNumber");
            this.accountNumber = accountNumber;
            return this;
        }


        /**
         * The optional shipping details for this buyer.
         */
        public Builder shippingDetails(ShippingDetailsCreate shippingDetails) {
            Utils.checkNotNull(shippingDetails, "shippingDetails");
            this.shippingDetails = JsonNullable.of(shippingDetails);
            return this;
        }

        /**
         * The optional shipping details for this buyer.
         */
        public Builder shippingDetails(JsonNullable<? extends ShippingDetailsCreate> shippingDetails) {
            Utils.checkNotNull(shippingDetails, "shippingDetails");
            this.shippingDetails = shippingDetails;
            return this;
        }

        public GuestBuyerOutput build() {

            return new GuestBuyerOutput(
                displayName, externalIdentifier, billingDetails,
                accountNumber, shippingDetails);
        }

    }
}
