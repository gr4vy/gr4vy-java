/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;

public class PaymentOptionContext {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("approval_ui")
    private JsonNullable<? extends PaymentOptionContextApprovalUI> approvalUi;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("required_fields")
    private JsonNullable<? extends Map<String, RequiredFields2>> requiredFields;

    @JsonProperty("redirect_requires_popup")
    private boolean redirectRequiresPopup;

    @JsonProperty("requires_tokenized_redirect_popup")
    private boolean requiresTokenizedRedirectPopup;

    @JsonCreator
    public PaymentOptionContext(
            @JsonProperty("approval_ui") JsonNullable<? extends PaymentOptionContextApprovalUI> approvalUi,
            @JsonProperty("required_fields") JsonNullable<? extends Map<String, RequiredFields2>> requiredFields,
            @JsonProperty("redirect_requires_popup") boolean redirectRequiresPopup,
            @JsonProperty("requires_tokenized_redirect_popup") boolean requiresTokenizedRedirectPopup) {
        Utils.checkNotNull(approvalUi, "approvalUi");
        Utils.checkNotNull(requiredFields, "requiredFields");
        Utils.checkNotNull(redirectRequiresPopup, "redirectRequiresPopup");
        Utils.checkNotNull(requiresTokenizedRedirectPopup, "requiresTokenizedRedirectPopup");
        this.approvalUi = approvalUi;
        this.requiredFields = requiredFields;
        this.redirectRequiresPopup = redirectRequiresPopup;
        this.requiresTokenizedRedirectPopup = requiresTokenizedRedirectPopup;
    }
    
    public PaymentOptionContext(
            boolean redirectRequiresPopup,
            boolean requiresTokenizedRedirectPopup) {
        this(JsonNullable.undefined(), JsonNullable.undefined(), redirectRequiresPopup, requiresTokenizedRedirectPopup);
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<PaymentOptionContextApprovalUI> approvalUi() {
        return (JsonNullable<PaymentOptionContextApprovalUI>) approvalUi;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Map<String, RequiredFields2>> requiredFields() {
        return (JsonNullable<Map<String, RequiredFields2>>) requiredFields;
    }

    @JsonIgnore
    public boolean redirectRequiresPopup() {
        return redirectRequiresPopup;
    }

    @JsonIgnore
    public boolean requiresTokenizedRedirectPopup() {
        return requiresTokenizedRedirectPopup;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public PaymentOptionContext withApprovalUi(PaymentOptionContextApprovalUI approvalUi) {
        Utils.checkNotNull(approvalUi, "approvalUi");
        this.approvalUi = JsonNullable.of(approvalUi);
        return this;
    }

    public PaymentOptionContext withApprovalUi(JsonNullable<? extends PaymentOptionContextApprovalUI> approvalUi) {
        Utils.checkNotNull(approvalUi, "approvalUi");
        this.approvalUi = approvalUi;
        return this;
    }

    public PaymentOptionContext withRequiredFields(Map<String, RequiredFields2> requiredFields) {
        Utils.checkNotNull(requiredFields, "requiredFields");
        this.requiredFields = JsonNullable.of(requiredFields);
        return this;
    }

    public PaymentOptionContext withRequiredFields(JsonNullable<? extends Map<String, RequiredFields2>> requiredFields) {
        Utils.checkNotNull(requiredFields, "requiredFields");
        this.requiredFields = requiredFields;
        return this;
    }

    public PaymentOptionContext withRedirectRequiresPopup(boolean redirectRequiresPopup) {
        Utils.checkNotNull(redirectRequiresPopup, "redirectRequiresPopup");
        this.redirectRequiresPopup = redirectRequiresPopup;
        return this;
    }

    public PaymentOptionContext withRequiresTokenizedRedirectPopup(boolean requiresTokenizedRedirectPopup) {
        Utils.checkNotNull(requiresTokenizedRedirectPopup, "requiresTokenizedRedirectPopup");
        this.requiresTokenizedRedirectPopup = requiresTokenizedRedirectPopup;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PaymentOptionContext other = (PaymentOptionContext) o;
        return 
            Utils.enhancedDeepEquals(this.approvalUi, other.approvalUi) &&
            Utils.enhancedDeepEquals(this.requiredFields, other.requiredFields) &&
            Utils.enhancedDeepEquals(this.redirectRequiresPopup, other.redirectRequiresPopup) &&
            Utils.enhancedDeepEquals(this.requiresTokenizedRedirectPopup, other.requiresTokenizedRedirectPopup);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            approvalUi,
            requiredFields,
            redirectRequiresPopup,
            requiresTokenizedRedirectPopup);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PaymentOptionContext.class,
                "approvalUi", approvalUi,
                "requiredFields", requiredFields,
                "redirectRequiresPopup", redirectRequiresPopup,
                "requiresTokenizedRedirectPopup", requiresTokenizedRedirectPopup);
    }
    
    public final static class Builder {
 
        private JsonNullable<? extends PaymentOptionContextApprovalUI> approvalUi = JsonNullable.undefined();
 
        private JsonNullable<? extends Map<String, RequiredFields2>> requiredFields = JsonNullable.undefined();
 
        private Boolean redirectRequiresPopup;
 
        private Boolean requiresTokenizedRedirectPopup;
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder approvalUi(PaymentOptionContextApprovalUI approvalUi) {
            Utils.checkNotNull(approvalUi, "approvalUi");
            this.approvalUi = JsonNullable.of(approvalUi);
            return this;
        }

        public Builder approvalUi(JsonNullable<? extends PaymentOptionContextApprovalUI> approvalUi) {
            Utils.checkNotNull(approvalUi, "approvalUi");
            this.approvalUi = approvalUi;
            return this;
        }

        public Builder requiredFields(Map<String, RequiredFields2> requiredFields) {
            Utils.checkNotNull(requiredFields, "requiredFields");
            this.requiredFields = JsonNullable.of(requiredFields);
            return this;
        }

        public Builder requiredFields(JsonNullable<? extends Map<String, RequiredFields2>> requiredFields) {
            Utils.checkNotNull(requiredFields, "requiredFields");
            this.requiredFields = requiredFields;
            return this;
        }

        public Builder redirectRequiresPopup(boolean redirectRequiresPopup) {
            Utils.checkNotNull(redirectRequiresPopup, "redirectRequiresPopup");
            this.redirectRequiresPopup = redirectRequiresPopup;
            return this;
        }

        public Builder requiresTokenizedRedirectPopup(boolean requiresTokenizedRedirectPopup) {
            Utils.checkNotNull(requiresTokenizedRedirectPopup, "requiresTokenizedRedirectPopup");
            this.requiresTokenizedRedirectPopup = requiresTokenizedRedirectPopup;
            return this;
        }
        
        public PaymentOptionContext build() {
            return new PaymentOptionContext(
                approvalUi,
                requiredFields,
                redirectRequiresPopup,
                requiresTokenizedRedirectPopup);
        }
    }
}
