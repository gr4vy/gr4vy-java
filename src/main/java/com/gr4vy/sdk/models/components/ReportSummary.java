/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.gr4vy.sdk.utils.LazySingletonValue;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class ReportSummary {
    /**
     * Always `report`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    private Optional<String> type;

    /**
     * The unique ID for the report.
     */
    @JsonProperty("id")
    private String id;

    /**
     * The merchant account ID this report belongs to.
     */
    @JsonProperty("merchant_account_id")
    private String merchantAccountId;

    /**
     * The name of the report.
     */
    @JsonProperty("name")
    private String name;

    /**
     * The ID of the user who created the report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creator_id")
    private JsonNullable<String> creatorId;

    /**
     * The display name of the report creator.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creator_display_name")
    private JsonNullable<String> creatorDisplayName;

    /**
     * The type of the report creator.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creator_type")
    private JsonNullable<? extends ReportCreatorType> creatorType;

    @JsonCreator
    public ReportSummary(
            @JsonProperty("id") String id,
            @JsonProperty("merchant_account_id") String merchantAccountId,
            @JsonProperty("name") String name,
            @JsonProperty("creator_id") JsonNullable<String> creatorId,
            @JsonProperty("creator_display_name") JsonNullable<String> creatorDisplayName,
            @JsonProperty("creator_type") JsonNullable<? extends ReportCreatorType> creatorType) {
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(creatorId, "creatorId");
        Utils.checkNotNull(creatorDisplayName, "creatorDisplayName");
        Utils.checkNotNull(creatorType, "creatorType");
        this.type = Builder._SINGLETON_VALUE_Type.value();
        this.id = id;
        this.merchantAccountId = merchantAccountId;
        this.name = name;
        this.creatorId = creatorId;
        this.creatorDisplayName = creatorDisplayName;
        this.creatorType = creatorType;
    }
    
    public ReportSummary(
            String id,
            String merchantAccountId,
            String name) {
        this(id, merchantAccountId, name,
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * Always `report`.
     */
    @JsonIgnore
    public Optional<String> type() {
        return type;
    }

    /**
     * The unique ID for the report.
     */
    @JsonIgnore
    public String id() {
        return id;
    }

    /**
     * The merchant account ID this report belongs to.
     */
    @JsonIgnore
    public String merchantAccountId() {
        return merchantAccountId;
    }

    /**
     * The name of the report.
     */
    @JsonIgnore
    public String name() {
        return name;
    }

    /**
     * The ID of the user who created the report.
     */
    @JsonIgnore
    public JsonNullable<String> creatorId() {
        return creatorId;
    }

    /**
     * The display name of the report creator.
     */
    @JsonIgnore
    public JsonNullable<String> creatorDisplayName() {
        return creatorDisplayName;
    }

    /**
     * The type of the report creator.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<ReportCreatorType> creatorType() {
        return (JsonNullable<ReportCreatorType>) creatorType;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The unique ID for the report.
     */
    public ReportSummary withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    /**
     * The merchant account ID this report belongs to.
     */
    public ReportSummary withMerchantAccountId(String merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = merchantAccountId;
        return this;
    }

    /**
     * The name of the report.
     */
    public ReportSummary withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    /**
     * The ID of the user who created the report.
     */
    public ReportSummary withCreatorId(String creatorId) {
        Utils.checkNotNull(creatorId, "creatorId");
        this.creatorId = JsonNullable.of(creatorId);
        return this;
    }

    /**
     * The ID of the user who created the report.
     */
    public ReportSummary withCreatorId(JsonNullable<String> creatorId) {
        Utils.checkNotNull(creatorId, "creatorId");
        this.creatorId = creatorId;
        return this;
    }

    /**
     * The display name of the report creator.
     */
    public ReportSummary withCreatorDisplayName(String creatorDisplayName) {
        Utils.checkNotNull(creatorDisplayName, "creatorDisplayName");
        this.creatorDisplayName = JsonNullable.of(creatorDisplayName);
        return this;
    }

    /**
     * The display name of the report creator.
     */
    public ReportSummary withCreatorDisplayName(JsonNullable<String> creatorDisplayName) {
        Utils.checkNotNull(creatorDisplayName, "creatorDisplayName");
        this.creatorDisplayName = creatorDisplayName;
        return this;
    }

    /**
     * The type of the report creator.
     */
    public ReportSummary withCreatorType(ReportCreatorType creatorType) {
        Utils.checkNotNull(creatorType, "creatorType");
        this.creatorType = JsonNullable.of(creatorType);
        return this;
    }

    /**
     * The type of the report creator.
     */
    public ReportSummary withCreatorType(JsonNullable<? extends ReportCreatorType> creatorType) {
        Utils.checkNotNull(creatorType, "creatorType");
        this.creatorType = creatorType;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ReportSummary other = (ReportSummary) o;
        return 
            Utils.enhancedDeepEquals(this.type, other.type) &&
            Utils.enhancedDeepEquals(this.id, other.id) &&
            Utils.enhancedDeepEquals(this.merchantAccountId, other.merchantAccountId) &&
            Utils.enhancedDeepEquals(this.name, other.name) &&
            Utils.enhancedDeepEquals(this.creatorId, other.creatorId) &&
            Utils.enhancedDeepEquals(this.creatorDisplayName, other.creatorDisplayName) &&
            Utils.enhancedDeepEquals(this.creatorType, other.creatorType);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            type, id, merchantAccountId,
            name, creatorId, creatorDisplayName,
            creatorType);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ReportSummary.class,
                "type", type,
                "id", id,
                "merchantAccountId", merchantAccountId,
                "name", name,
                "creatorId", creatorId,
                "creatorDisplayName", creatorDisplayName,
                "creatorType", creatorType);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String id;

        private String merchantAccountId;

        private String name;

        private JsonNullable<String> creatorId = JsonNullable.undefined();

        private JsonNullable<String> creatorDisplayName = JsonNullable.undefined();

        private JsonNullable<? extends ReportCreatorType> creatorType = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The unique ID for the report.
         */
        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }


        /**
         * The merchant account ID this report belongs to.
         */
        public Builder merchantAccountId(String merchantAccountId) {
            Utils.checkNotNull(merchantAccountId, "merchantAccountId");
            this.merchantAccountId = merchantAccountId;
            return this;
        }


        /**
         * The name of the report.
         */
        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }


        /**
         * The ID of the user who created the report.
         */
        public Builder creatorId(String creatorId) {
            Utils.checkNotNull(creatorId, "creatorId");
            this.creatorId = JsonNullable.of(creatorId);
            return this;
        }

        /**
         * The ID of the user who created the report.
         */
        public Builder creatorId(JsonNullable<String> creatorId) {
            Utils.checkNotNull(creatorId, "creatorId");
            this.creatorId = creatorId;
            return this;
        }


        /**
         * The display name of the report creator.
         */
        public Builder creatorDisplayName(String creatorDisplayName) {
            Utils.checkNotNull(creatorDisplayName, "creatorDisplayName");
            this.creatorDisplayName = JsonNullable.of(creatorDisplayName);
            return this;
        }

        /**
         * The display name of the report creator.
         */
        public Builder creatorDisplayName(JsonNullable<String> creatorDisplayName) {
            Utils.checkNotNull(creatorDisplayName, "creatorDisplayName");
            this.creatorDisplayName = creatorDisplayName;
            return this;
        }


        /**
         * The type of the report creator.
         */
        public Builder creatorType(ReportCreatorType creatorType) {
            Utils.checkNotNull(creatorType, "creatorType");
            this.creatorType = JsonNullable.of(creatorType);
            return this;
        }

        /**
         * The type of the report creator.
         */
        public Builder creatorType(JsonNullable<? extends ReportCreatorType> creatorType) {
            Utils.checkNotNull(creatorType, "creatorType");
            this.creatorType = creatorType;
            return this;
        }

        public ReportSummary build() {

            return new ReportSummary(
                id, merchantAccountId, name,
                creatorId, creatorDisplayName, creatorType);
        }


        private static final LazySingletonValue<Optional<String>> _SINGLETON_VALUE_Type =
                new LazySingletonValue<>(
                        "type",
                        "\"report\"",
                        new TypeReference<Optional<String>>() {});
    }
}
