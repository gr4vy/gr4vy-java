/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.gr4vy.sdk.utils.LazySingletonValue;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;

public class AccountUpdaterInquirySummary {

    /**
     * Always `account-updater-inquiry`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    private Optional<String> type;

    /**
     * The ID for the account updater inquiry.
     */
    @JsonProperty("id")
    private String id;

    /**
     * The ID of the payment method
     */
    @JsonProperty("payment_method_id")
    private String paymentMethodId;

    @JsonCreator
    public AccountUpdaterInquirySummary(
            @JsonProperty("id") String id,
            @JsonProperty("payment_method_id") String paymentMethodId) {
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(paymentMethodId, "paymentMethodId");
        this.type = Builder._SINGLETON_VALUE_Type.value();
        this.id = id;
        this.paymentMethodId = paymentMethodId;
    }

    /**
     * Always `account-updater-inquiry`
     */
    @JsonIgnore
    public Optional<String> type() {
        return type;
    }

    /**
     * The ID for the account updater inquiry.
     */
    @JsonIgnore
    public String id() {
        return id;
    }

    /**
     * The ID of the payment method
     */
    @JsonIgnore
    public String paymentMethodId() {
        return paymentMethodId;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The ID for the account updater inquiry.
     */
    public AccountUpdaterInquirySummary withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    /**
     * The ID of the payment method
     */
    public AccountUpdaterInquirySummary withPaymentMethodId(String paymentMethodId) {
        Utils.checkNotNull(paymentMethodId, "paymentMethodId");
        this.paymentMethodId = paymentMethodId;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AccountUpdaterInquirySummary other = (AccountUpdaterInquirySummary) o;
        return 
            Utils.enhancedDeepEquals(this.type, other.type) &&
            Utils.enhancedDeepEquals(this.id, other.id) &&
            Utils.enhancedDeepEquals(this.paymentMethodId, other.paymentMethodId);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            type,
            id,
            paymentMethodId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AccountUpdaterInquirySummary.class,
                "type", type,
                "id", id,
                "paymentMethodId", paymentMethodId);
    }
    
    public final static class Builder {
 
        private String id;
 
        private String paymentMethodId;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The ID for the account updater inquiry.
         */
        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }

        /**
         * The ID of the payment method
         */
        public Builder paymentMethodId(String paymentMethodId) {
            Utils.checkNotNull(paymentMethodId, "paymentMethodId");
            this.paymentMethodId = paymentMethodId;
            return this;
        }
        
        public AccountUpdaterInquirySummary build() {
            return new AccountUpdaterInquirySummary(
                id,
                paymentMethodId);
        }

        private static final LazySingletonValue<Optional<String>> _SINGLETON_VALUE_Type =
                new LazySingletonValue<>(
                        "type",
                        "\"account-updater-inquiry\"",
                        new TypeReference<Optional<String>>() {});
    }
}
