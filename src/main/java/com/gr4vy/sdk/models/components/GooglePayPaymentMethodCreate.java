/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.gr4vy.sdk.utils.LazySingletonValue;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * GooglePayPaymentMethodCreate
 * 
 * <p>Create a Google Pay transaction with a device token.
 */
public class GooglePayPaymentMethodCreate {
    /**
     * The external identifier of the buyer to create a payment for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buyer_external_identifier")
    private JsonNullable<String> buyerExternalIdentifier;

    /**
     * The ID of the buyer to retrieve billing details for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buyer_id")
    private JsonNullable<String> buyerId;

    /**
     * The card holder name associated to the original card for the token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cardholder_name")
    private JsonNullable<String> cardholderName;

    /**
     * The URL to redirect a user back to after the complete 3DS in browser.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("redirect_url")
    private JsonNullable<String> redirectUrl;

    /**
     * The last 4 digits of the original card used to generate the token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card_suffix")
    private JsonNullable<String> cardSuffix;

    /**
     * The original card scheme for which the token was generated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card_scheme")
    private JsonNullable<String> cardScheme;

    /**
     * The payment scheme of the card.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card_type")
    private JsonNullable<String> cardType;

    /**
     * Always `googlepay`
     */
    @JsonProperty("method")
    private String method;

    /**
     * The opaque token as received from the Google Pay JS library. This format may change between JS library versions.
     */
    @JsonProperty("token")
    private Token token;

    /**
     * The assurance details provided by Google Pay
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assurance_details")
    private JsonNullable<? extends GooglePayAssuranceDetails> assuranceDetails;

    @JsonCreator
    public GooglePayPaymentMethodCreate(
            @JsonProperty("buyer_external_identifier") JsonNullable<String> buyerExternalIdentifier,
            @JsonProperty("buyer_id") JsonNullable<String> buyerId,
            @JsonProperty("cardholder_name") JsonNullable<String> cardholderName,
            @JsonProperty("redirect_url") JsonNullable<String> redirectUrl,
            @JsonProperty("card_suffix") JsonNullable<String> cardSuffix,
            @JsonProperty("card_scheme") JsonNullable<String> cardScheme,
            @JsonProperty("card_type") JsonNullable<String> cardType,
            @JsonProperty("token") Token token,
            @JsonProperty("assurance_details") JsonNullable<? extends GooglePayAssuranceDetails> assuranceDetails) {
        Utils.checkNotNull(buyerExternalIdentifier, "buyerExternalIdentifier");
        Utils.checkNotNull(buyerId, "buyerId");
        Utils.checkNotNull(cardholderName, "cardholderName");
        Utils.checkNotNull(redirectUrl, "redirectUrl");
        Utils.checkNotNull(cardSuffix, "cardSuffix");
        Utils.checkNotNull(cardScheme, "cardScheme");
        Utils.checkNotNull(cardType, "cardType");
        Utils.checkNotNull(token, "token");
        Utils.checkNotNull(assuranceDetails, "assuranceDetails");
        this.buyerExternalIdentifier = buyerExternalIdentifier;
        this.buyerId = buyerId;
        this.cardholderName = cardholderName;
        this.redirectUrl = redirectUrl;
        this.cardSuffix = cardSuffix;
        this.cardScheme = cardScheme;
        this.cardType = cardType;
        this.method = Builder._SINGLETON_VALUE_Method.value();
        this.token = token;
        this.assuranceDetails = assuranceDetails;
    }
    
    public GooglePayPaymentMethodCreate(
            Token token) {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), token, JsonNullable.undefined());
    }

    /**
     * The external identifier of the buyer to create a payment for.
     */
    @JsonIgnore
    public JsonNullable<String> buyerExternalIdentifier() {
        return buyerExternalIdentifier;
    }

    /**
     * The ID of the buyer to retrieve billing details for.
     */
    @JsonIgnore
    public JsonNullable<String> buyerId() {
        return buyerId;
    }

    /**
     * The card holder name associated to the original card for the token.
     */
    @JsonIgnore
    public JsonNullable<String> cardholderName() {
        return cardholderName;
    }

    /**
     * The URL to redirect a user back to after the complete 3DS in browser.
     */
    @JsonIgnore
    public JsonNullable<String> redirectUrl() {
        return redirectUrl;
    }

    /**
     * The last 4 digits of the original card used to generate the token.
     */
    @JsonIgnore
    public JsonNullable<String> cardSuffix() {
        return cardSuffix;
    }

    /**
     * The original card scheme for which the token was generated.
     */
    @JsonIgnore
    public JsonNullable<String> cardScheme() {
        return cardScheme;
    }

    /**
     * The payment scheme of the card.
     */
    @JsonIgnore
    public JsonNullable<String> cardType() {
        return cardType;
    }

    /**
     * Always `googlepay`
     */
    @JsonIgnore
    public String method() {
        return method;
    }

    /**
     * The opaque token as received from the Google Pay JS library. This format may change between JS library versions.
     */
    @JsonIgnore
    public Token token() {
        return token;
    }

    /**
     * The assurance details provided by Google Pay
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<GooglePayAssuranceDetails> assuranceDetails() {
        return (JsonNullable<GooglePayAssuranceDetails>) assuranceDetails;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The external identifier of the buyer to create a payment for.
     */
    public GooglePayPaymentMethodCreate withBuyerExternalIdentifier(String buyerExternalIdentifier) {
        Utils.checkNotNull(buyerExternalIdentifier, "buyerExternalIdentifier");
        this.buyerExternalIdentifier = JsonNullable.of(buyerExternalIdentifier);
        return this;
    }

    /**
     * The external identifier of the buyer to create a payment for.
     */
    public GooglePayPaymentMethodCreate withBuyerExternalIdentifier(JsonNullable<String> buyerExternalIdentifier) {
        Utils.checkNotNull(buyerExternalIdentifier, "buyerExternalIdentifier");
        this.buyerExternalIdentifier = buyerExternalIdentifier;
        return this;
    }

    /**
     * The ID of the buyer to retrieve billing details for.
     */
    public GooglePayPaymentMethodCreate withBuyerId(String buyerId) {
        Utils.checkNotNull(buyerId, "buyerId");
        this.buyerId = JsonNullable.of(buyerId);
        return this;
    }

    /**
     * The ID of the buyer to retrieve billing details for.
     */
    public GooglePayPaymentMethodCreate withBuyerId(JsonNullable<String> buyerId) {
        Utils.checkNotNull(buyerId, "buyerId");
        this.buyerId = buyerId;
        return this;
    }

    /**
     * The card holder name associated to the original card for the token.
     */
    public GooglePayPaymentMethodCreate withCardholderName(String cardholderName) {
        Utils.checkNotNull(cardholderName, "cardholderName");
        this.cardholderName = JsonNullable.of(cardholderName);
        return this;
    }

    /**
     * The card holder name associated to the original card for the token.
     */
    public GooglePayPaymentMethodCreate withCardholderName(JsonNullable<String> cardholderName) {
        Utils.checkNotNull(cardholderName, "cardholderName");
        this.cardholderName = cardholderName;
        return this;
    }

    /**
     * The URL to redirect a user back to after the complete 3DS in browser.
     */
    public GooglePayPaymentMethodCreate withRedirectUrl(String redirectUrl) {
        Utils.checkNotNull(redirectUrl, "redirectUrl");
        this.redirectUrl = JsonNullable.of(redirectUrl);
        return this;
    }

    /**
     * The URL to redirect a user back to after the complete 3DS in browser.
     */
    public GooglePayPaymentMethodCreate withRedirectUrl(JsonNullable<String> redirectUrl) {
        Utils.checkNotNull(redirectUrl, "redirectUrl");
        this.redirectUrl = redirectUrl;
        return this;
    }

    /**
     * The last 4 digits of the original card used to generate the token.
     */
    public GooglePayPaymentMethodCreate withCardSuffix(String cardSuffix) {
        Utils.checkNotNull(cardSuffix, "cardSuffix");
        this.cardSuffix = JsonNullable.of(cardSuffix);
        return this;
    }

    /**
     * The last 4 digits of the original card used to generate the token.
     */
    public GooglePayPaymentMethodCreate withCardSuffix(JsonNullable<String> cardSuffix) {
        Utils.checkNotNull(cardSuffix, "cardSuffix");
        this.cardSuffix = cardSuffix;
        return this;
    }

    /**
     * The original card scheme for which the token was generated.
     */
    public GooglePayPaymentMethodCreate withCardScheme(String cardScheme) {
        Utils.checkNotNull(cardScheme, "cardScheme");
        this.cardScheme = JsonNullable.of(cardScheme);
        return this;
    }

    /**
     * The original card scheme for which the token was generated.
     */
    public GooglePayPaymentMethodCreate withCardScheme(JsonNullable<String> cardScheme) {
        Utils.checkNotNull(cardScheme, "cardScheme");
        this.cardScheme = cardScheme;
        return this;
    }

    /**
     * The payment scheme of the card.
     */
    public GooglePayPaymentMethodCreate withCardType(String cardType) {
        Utils.checkNotNull(cardType, "cardType");
        this.cardType = JsonNullable.of(cardType);
        return this;
    }

    /**
     * The payment scheme of the card.
     */
    public GooglePayPaymentMethodCreate withCardType(JsonNullable<String> cardType) {
        Utils.checkNotNull(cardType, "cardType");
        this.cardType = cardType;
        return this;
    }

    /**
     * The opaque token as received from the Google Pay JS library. This format may change between JS library versions.
     */
    public GooglePayPaymentMethodCreate withToken(Token token) {
        Utils.checkNotNull(token, "token");
        this.token = token;
        return this;
    }

    /**
     * The assurance details provided by Google Pay
     */
    public GooglePayPaymentMethodCreate withAssuranceDetails(GooglePayAssuranceDetails assuranceDetails) {
        Utils.checkNotNull(assuranceDetails, "assuranceDetails");
        this.assuranceDetails = JsonNullable.of(assuranceDetails);
        return this;
    }

    /**
     * The assurance details provided by Google Pay
     */
    public GooglePayPaymentMethodCreate withAssuranceDetails(JsonNullable<? extends GooglePayAssuranceDetails> assuranceDetails) {
        Utils.checkNotNull(assuranceDetails, "assuranceDetails");
        this.assuranceDetails = assuranceDetails;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GooglePayPaymentMethodCreate other = (GooglePayPaymentMethodCreate) o;
        return 
            Utils.enhancedDeepEquals(this.buyerExternalIdentifier, other.buyerExternalIdentifier) &&
            Utils.enhancedDeepEquals(this.buyerId, other.buyerId) &&
            Utils.enhancedDeepEquals(this.cardholderName, other.cardholderName) &&
            Utils.enhancedDeepEquals(this.redirectUrl, other.redirectUrl) &&
            Utils.enhancedDeepEquals(this.cardSuffix, other.cardSuffix) &&
            Utils.enhancedDeepEquals(this.cardScheme, other.cardScheme) &&
            Utils.enhancedDeepEquals(this.cardType, other.cardType) &&
            Utils.enhancedDeepEquals(this.method, other.method) &&
            Utils.enhancedDeepEquals(this.token, other.token) &&
            Utils.enhancedDeepEquals(this.assuranceDetails, other.assuranceDetails);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            buyerExternalIdentifier, buyerId, cardholderName,
            redirectUrl, cardSuffix, cardScheme,
            cardType, method, token,
            assuranceDetails);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GooglePayPaymentMethodCreate.class,
                "buyerExternalIdentifier", buyerExternalIdentifier,
                "buyerId", buyerId,
                "cardholderName", cardholderName,
                "redirectUrl", redirectUrl,
                "cardSuffix", cardSuffix,
                "cardScheme", cardScheme,
                "cardType", cardType,
                "method", method,
                "token", token,
                "assuranceDetails", assuranceDetails);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<String> buyerExternalIdentifier = JsonNullable.undefined();

        private JsonNullable<String> buyerId = JsonNullable.undefined();

        private JsonNullable<String> cardholderName = JsonNullable.undefined();

        private JsonNullable<String> redirectUrl = JsonNullable.undefined();

        private JsonNullable<String> cardSuffix = JsonNullable.undefined();

        private JsonNullable<String> cardScheme = JsonNullable.undefined();

        private JsonNullable<String> cardType = JsonNullable.undefined();

        private Token token;

        private JsonNullable<? extends GooglePayAssuranceDetails> assuranceDetails = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The external identifier of the buyer to create a payment for.
         */
        public Builder buyerExternalIdentifier(String buyerExternalIdentifier) {
            Utils.checkNotNull(buyerExternalIdentifier, "buyerExternalIdentifier");
            this.buyerExternalIdentifier = JsonNullable.of(buyerExternalIdentifier);
            return this;
        }

        /**
         * The external identifier of the buyer to create a payment for.
         */
        public Builder buyerExternalIdentifier(JsonNullable<String> buyerExternalIdentifier) {
            Utils.checkNotNull(buyerExternalIdentifier, "buyerExternalIdentifier");
            this.buyerExternalIdentifier = buyerExternalIdentifier;
            return this;
        }


        /**
         * The ID of the buyer to retrieve billing details for.
         */
        public Builder buyerId(String buyerId) {
            Utils.checkNotNull(buyerId, "buyerId");
            this.buyerId = JsonNullable.of(buyerId);
            return this;
        }

        /**
         * The ID of the buyer to retrieve billing details for.
         */
        public Builder buyerId(JsonNullable<String> buyerId) {
            Utils.checkNotNull(buyerId, "buyerId");
            this.buyerId = buyerId;
            return this;
        }


        /**
         * The card holder name associated to the original card for the token.
         */
        public Builder cardholderName(String cardholderName) {
            Utils.checkNotNull(cardholderName, "cardholderName");
            this.cardholderName = JsonNullable.of(cardholderName);
            return this;
        }

        /**
         * The card holder name associated to the original card for the token.
         */
        public Builder cardholderName(JsonNullable<String> cardholderName) {
            Utils.checkNotNull(cardholderName, "cardholderName");
            this.cardholderName = cardholderName;
            return this;
        }


        /**
         * The URL to redirect a user back to after the complete 3DS in browser.
         */
        public Builder redirectUrl(String redirectUrl) {
            Utils.checkNotNull(redirectUrl, "redirectUrl");
            this.redirectUrl = JsonNullable.of(redirectUrl);
            return this;
        }

        /**
         * The URL to redirect a user back to after the complete 3DS in browser.
         */
        public Builder redirectUrl(JsonNullable<String> redirectUrl) {
            Utils.checkNotNull(redirectUrl, "redirectUrl");
            this.redirectUrl = redirectUrl;
            return this;
        }


        /**
         * The last 4 digits of the original card used to generate the token.
         */
        public Builder cardSuffix(String cardSuffix) {
            Utils.checkNotNull(cardSuffix, "cardSuffix");
            this.cardSuffix = JsonNullable.of(cardSuffix);
            return this;
        }

        /**
         * The last 4 digits of the original card used to generate the token.
         */
        public Builder cardSuffix(JsonNullable<String> cardSuffix) {
            Utils.checkNotNull(cardSuffix, "cardSuffix");
            this.cardSuffix = cardSuffix;
            return this;
        }


        /**
         * The original card scheme for which the token was generated.
         */
        public Builder cardScheme(String cardScheme) {
            Utils.checkNotNull(cardScheme, "cardScheme");
            this.cardScheme = JsonNullable.of(cardScheme);
            return this;
        }

        /**
         * The original card scheme for which the token was generated.
         */
        public Builder cardScheme(JsonNullable<String> cardScheme) {
            Utils.checkNotNull(cardScheme, "cardScheme");
            this.cardScheme = cardScheme;
            return this;
        }


        /**
         * The payment scheme of the card.
         */
        public Builder cardType(String cardType) {
            Utils.checkNotNull(cardType, "cardType");
            this.cardType = JsonNullable.of(cardType);
            return this;
        }

        /**
         * The payment scheme of the card.
         */
        public Builder cardType(JsonNullable<String> cardType) {
            Utils.checkNotNull(cardType, "cardType");
            this.cardType = cardType;
            return this;
        }


        /**
         * The opaque token as received from the Google Pay JS library. This format may change between JS library versions.
         */
        public Builder token(Token token) {
            Utils.checkNotNull(token, "token");
            this.token = token;
            return this;
        }


        /**
         * The assurance details provided by Google Pay
         */
        public Builder assuranceDetails(GooglePayAssuranceDetails assuranceDetails) {
            Utils.checkNotNull(assuranceDetails, "assuranceDetails");
            this.assuranceDetails = JsonNullable.of(assuranceDetails);
            return this;
        }

        /**
         * The assurance details provided by Google Pay
         */
        public Builder assuranceDetails(JsonNullable<? extends GooglePayAssuranceDetails> assuranceDetails) {
            Utils.checkNotNull(assuranceDetails, "assuranceDetails");
            this.assuranceDetails = assuranceDetails;
            return this;
        }

        public GooglePayPaymentMethodCreate build() {

            return new GooglePayPaymentMethodCreate(
                buyerExternalIdentifier, buyerId, cardholderName,
                redirectUrl, cardSuffix, cardScheme,
                cardType, token, assuranceDetails);
        }


        private static final LazySingletonValue<String> _SINGLETON_VALUE_Method =
                new LazySingletonValue<>(
                        "method",
                        "\"googlepay\"",
                        new TypeReference<String>() {});
    }
}
