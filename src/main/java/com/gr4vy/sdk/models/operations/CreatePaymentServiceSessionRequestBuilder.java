/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.operations;

import static com.gr4vy.sdk.operations.Operations.RequestOperation;

import com.gr4vy.sdk.SDKConfiguration;
import com.gr4vy.sdk.operations.CreatePaymentServiceSessionOperation;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.Object;
import java.lang.String;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;

public class CreatePaymentServiceSessionRequestBuilder {

    private String paymentServiceId;
    private JsonNullable<String> merchantAccountId = JsonNullable.undefined();
    private Map<String, Object> requestBody = new HashMap<>();
    private final SDKConfiguration sdkConfiguration;

    public CreatePaymentServiceSessionRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public CreatePaymentServiceSessionRequestBuilder paymentServiceId(String paymentServiceId) {
        Utils.checkNotNull(paymentServiceId, "paymentServiceId");
        this.paymentServiceId = paymentServiceId;
        return this;
    }

    public CreatePaymentServiceSessionRequestBuilder merchantAccountId(String merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = JsonNullable.of(merchantAccountId);
        return this;
    }

    public CreatePaymentServiceSessionRequestBuilder merchantAccountId(JsonNullable<String> merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = merchantAccountId;
        return this;
    }

    public CreatePaymentServiceSessionRequestBuilder requestBody(Map<String, Object> requestBody) {
        Utils.checkNotNull(requestBody, "requestBody");
        this.requestBody = requestBody;
        return this;
    }


    private CreatePaymentServiceSessionRequest buildRequest() {

        CreatePaymentServiceSessionRequest request = new CreatePaymentServiceSessionRequest(paymentServiceId,
            merchantAccountId,
            requestBody);

        return request;
    }

    public CreatePaymentServiceSessionResponse call() throws Exception {
        
        RequestOperation<CreatePaymentServiceSessionRequest, CreatePaymentServiceSessionResponse> operation
              = new CreatePaymentServiceSessionOperation(sdkConfiguration);
        CreatePaymentServiceSessionRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
