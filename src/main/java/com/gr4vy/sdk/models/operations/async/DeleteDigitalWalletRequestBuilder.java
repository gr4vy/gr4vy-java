/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.operations.async;

import static com.gr4vy.sdk.operations.Operations.AsyncRequestOperation;

import com.gr4vy.sdk.SDKConfiguration;
import com.gr4vy.sdk.models.operations.DeleteDigitalWalletRequest;
import com.gr4vy.sdk.operations.DeleteDigitalWallet;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.concurrent.CompletableFuture;
import org.openapitools.jackson.nullable.JsonNullable;

public class DeleteDigitalWalletRequestBuilder {

    private String digitalWalletId;
    private JsonNullable<String> merchantAccountId = JsonNullable.undefined();
    private final SDKConfiguration sdkConfiguration;

    public DeleteDigitalWalletRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public DeleteDigitalWalletRequestBuilder digitalWalletId(String digitalWalletId) {
        Utils.checkNotNull(digitalWalletId, "digitalWalletId");
        this.digitalWalletId = digitalWalletId;
        return this;
    }

    public DeleteDigitalWalletRequestBuilder merchantAccountId(String merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = JsonNullable.of(merchantAccountId);
        return this;
    }

    public DeleteDigitalWalletRequestBuilder merchantAccountId(JsonNullable<String> merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = merchantAccountId;
        return this;
    }


    private DeleteDigitalWalletRequest buildRequest() {

        DeleteDigitalWalletRequest request = new DeleteDigitalWalletRequest(digitalWalletId,
            merchantAccountId);

        return request;
    }

    public CompletableFuture<DeleteDigitalWalletResponse> call() throws Exception {
        
        AsyncRequestOperation<DeleteDigitalWalletRequest, DeleteDigitalWalletResponse> operation
              = new DeleteDigitalWallet.Async(sdkConfiguration);
        DeleteDigitalWalletRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
