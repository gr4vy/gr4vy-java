/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.operations;

import static com.gr4vy.sdk.operations.Operations.RequestOperation;

import com.gr4vy.sdk.SDKConfiguration;
import com.gr4vy.sdk.operations.DeletePaymentMethodNetworkToken;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import org.openapitools.jackson.nullable.JsonNullable;

public class DeletePaymentMethodNetworkTokenRequestBuilder {

    private String paymentMethodId;
    private String networkTokenId;
    private JsonNullable<String> merchantAccountId = JsonNullable.undefined();
    private final SDKConfiguration sdkConfiguration;

    public DeletePaymentMethodNetworkTokenRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public DeletePaymentMethodNetworkTokenRequestBuilder paymentMethodId(String paymentMethodId) {
        Utils.checkNotNull(paymentMethodId, "paymentMethodId");
        this.paymentMethodId = paymentMethodId;
        return this;
    }

    public DeletePaymentMethodNetworkTokenRequestBuilder networkTokenId(String networkTokenId) {
        Utils.checkNotNull(networkTokenId, "networkTokenId");
        this.networkTokenId = networkTokenId;
        return this;
    }

    public DeletePaymentMethodNetworkTokenRequestBuilder merchantAccountId(String merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = JsonNullable.of(merchantAccountId);
        return this;
    }

    public DeletePaymentMethodNetworkTokenRequestBuilder merchantAccountId(JsonNullable<String> merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = merchantAccountId;
        return this;
    }


    private DeletePaymentMethodNetworkTokenRequest buildRequest() {

        DeletePaymentMethodNetworkTokenRequest request = new DeletePaymentMethodNetworkTokenRequest(paymentMethodId,
            networkTokenId,
            merchantAccountId);

        return request;
    }

    public DeletePaymentMethodNetworkTokenResponse call() throws Exception {
        
        RequestOperation<DeletePaymentMethodNetworkTokenRequest, DeletePaymentMethodNetworkTokenResponse> operation
              = new DeletePaymentMethodNetworkToken.Sync(sdkConfiguration);
        DeletePaymentMethodNetworkTokenRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
