/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.operations;

import com.fasterxml.jackson.core.type.TypeReference;
import com.gr4vy.sdk.utils.LazySingletonValue;
import com.gr4vy.sdk.utils.Options;
import com.gr4vy.sdk.utils.RetryConfig;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class ListPaymentMethodPaymentServiceTokensRequestBuilder {

    private String paymentMethodId;
    private JsonNullable<String> paymentServiceId = JsonNullable.undefined();
    private Optional<String> applicationName = Utils.readDefaultOrConstValue(
                            "applicationName",
                            "\"core-api\"",
                            new TypeReference<Optional<String>>() {});
    private JsonNullable<String> merchantAccountId = JsonNullable.undefined();
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKMethodInterfaces.MethodCallListPaymentMethodPaymentServiceTokens sdk;

    public ListPaymentMethodPaymentServiceTokensRequestBuilder(SDKMethodInterfaces.MethodCallListPaymentMethodPaymentServiceTokens sdk) {
        this.sdk = sdk;
    }

    public ListPaymentMethodPaymentServiceTokensRequestBuilder paymentMethodId(String paymentMethodId) {
        Utils.checkNotNull(paymentMethodId, "paymentMethodId");
        this.paymentMethodId = paymentMethodId;
        return this;
    }

    public ListPaymentMethodPaymentServiceTokensRequestBuilder paymentServiceId(String paymentServiceId) {
        Utils.checkNotNull(paymentServiceId, "paymentServiceId");
        this.paymentServiceId = JsonNullable.of(paymentServiceId);
        return this;
    }

    public ListPaymentMethodPaymentServiceTokensRequestBuilder paymentServiceId(JsonNullable<String> paymentServiceId) {
        Utils.checkNotNull(paymentServiceId, "paymentServiceId");
        this.paymentServiceId = paymentServiceId;
        return this;
    }
                
    public ListPaymentMethodPaymentServiceTokensRequestBuilder applicationName(String applicationName) {
        Utils.checkNotNull(applicationName, "applicationName");
        this.applicationName = Optional.of(applicationName);
        return this;
    }

    public ListPaymentMethodPaymentServiceTokensRequestBuilder applicationName(Optional<String> applicationName) {
        Utils.checkNotNull(applicationName, "applicationName");
        this.applicationName = applicationName;
        return this;
    }

    public ListPaymentMethodPaymentServiceTokensRequestBuilder merchantAccountId(String merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = JsonNullable.of(merchantAccountId);
        return this;
    }

    public ListPaymentMethodPaymentServiceTokensRequestBuilder merchantAccountId(JsonNullable<String> merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = merchantAccountId;
        return this;
    }
                
    public ListPaymentMethodPaymentServiceTokensRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public ListPaymentMethodPaymentServiceTokensRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }

    public ListPaymentMethodPaymentServiceTokensResponse call() throws Exception {
        if (applicationName == null) {
            applicationName = _SINGLETON_VALUE_ApplicationName.value();
        }        Optional<Options> options = Optional.of(Options.builder()
                                                    .retryConfig(retryConfig)
                                                    .build());
        return sdk.list(
            paymentMethodId,
            paymentServiceId,
            applicationName,
            merchantAccountId,
            options);
    }

    private static final LazySingletonValue<Optional<String>> _SINGLETON_VALUE_ApplicationName =
            new LazySingletonValue<>(
                    "applicationName",
                    "\"core-api\"",
                    new TypeReference<Optional<String>>() {});
}
