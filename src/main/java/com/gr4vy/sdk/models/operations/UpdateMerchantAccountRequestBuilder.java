/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.operations;

import com.fasterxml.jackson.core.type.TypeReference;
import com.gr4vy.sdk.models.components.MerchantAccountUpdate;
import com.gr4vy.sdk.utils.LazySingletonValue;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Double;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;

public class UpdateMerchantAccountRequestBuilder {

    private String merchantAccountId;
    private Optional<Double> timeoutInSeconds = Utils.readDefaultOrConstValue(
                            "timeoutInSeconds",
                            "1",
                            new TypeReference<Optional<Double>>() {});
    private MerchantAccountUpdate merchantAccountUpdate;
    private final SDKMethodInterfaces.MethodCallUpdateMerchantAccount sdk;

    public UpdateMerchantAccountRequestBuilder(SDKMethodInterfaces.MethodCallUpdateMerchantAccount sdk) {
        this.sdk = sdk;
    }

    public UpdateMerchantAccountRequestBuilder merchantAccountId(String merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = merchantAccountId;
        return this;
    }
                
    public UpdateMerchantAccountRequestBuilder timeoutInSeconds(double timeoutInSeconds) {
        Utils.checkNotNull(timeoutInSeconds, "timeoutInSeconds");
        this.timeoutInSeconds = Optional.of(timeoutInSeconds);
        return this;
    }

    public UpdateMerchantAccountRequestBuilder timeoutInSeconds(Optional<Double> timeoutInSeconds) {
        Utils.checkNotNull(timeoutInSeconds, "timeoutInSeconds");
        this.timeoutInSeconds = timeoutInSeconds;
        return this;
    }

    public UpdateMerchantAccountRequestBuilder merchantAccountUpdate(MerchantAccountUpdate merchantAccountUpdate) {
        Utils.checkNotNull(merchantAccountUpdate, "merchantAccountUpdate");
        this.merchantAccountUpdate = merchantAccountUpdate;
        return this;
    }

    public UpdateMerchantAccountResponse call() throws Exception {
        if (timeoutInSeconds == null) {
            timeoutInSeconds = _SINGLETON_VALUE_TimeoutInSeconds.value();
        }
        return sdk.update(
            merchantAccountId,
            timeoutInSeconds,
            merchantAccountUpdate);
    }

    private static final LazySingletonValue<Optional<Double>> _SINGLETON_VALUE_TimeoutInSeconds =
            new LazySingletonValue<>(
                    "timeoutInSeconds",
                    "1",
                    new TypeReference<Optional<Double>>() {});
}
