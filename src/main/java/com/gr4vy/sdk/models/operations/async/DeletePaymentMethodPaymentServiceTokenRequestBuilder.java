/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.operations.async;

import static com.gr4vy.sdk.operations.Operations.AsyncRequestOperation;

import com.gr4vy.sdk.SDKConfiguration;
import com.gr4vy.sdk.models.operations.DeletePaymentMethodPaymentServiceTokenRequest;
import com.gr4vy.sdk.operations.DeletePaymentMethodPaymentServiceToken;
import com.gr4vy.sdk.utils.Headers;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.concurrent.CompletableFuture;
import org.openapitools.jackson.nullable.JsonNullable;

public class DeletePaymentMethodPaymentServiceTokenRequestBuilder {

    private String paymentMethodId;
    private String paymentServiceTokenId;
    private JsonNullable<String> merchantAccountId = JsonNullable.undefined();
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public DeletePaymentMethodPaymentServiceTokenRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public DeletePaymentMethodPaymentServiceTokenRequestBuilder paymentMethodId(String paymentMethodId) {
        Utils.checkNotNull(paymentMethodId, "paymentMethodId");
        this.paymentMethodId = paymentMethodId;
        return this;
    }

    public DeletePaymentMethodPaymentServiceTokenRequestBuilder paymentServiceTokenId(String paymentServiceTokenId) {
        Utils.checkNotNull(paymentServiceTokenId, "paymentServiceTokenId");
        this.paymentServiceTokenId = paymentServiceTokenId;
        return this;
    }

    public DeletePaymentMethodPaymentServiceTokenRequestBuilder merchantAccountId(String merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = JsonNullable.of(merchantAccountId);
        return this;
    }

    public DeletePaymentMethodPaymentServiceTokenRequestBuilder merchantAccountId(JsonNullable<String> merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = merchantAccountId;
        return this;
    }


    private DeletePaymentMethodPaymentServiceTokenRequest buildRequest() {

        DeletePaymentMethodPaymentServiceTokenRequest request = new DeletePaymentMethodPaymentServiceTokenRequest(paymentMethodId,
            paymentServiceTokenId,
            merchantAccountId);

        return request;
    }

    public CompletableFuture<DeletePaymentMethodPaymentServiceTokenResponse> call() throws Exception {
        
        AsyncRequestOperation<DeletePaymentMethodPaymentServiceTokenRequest, DeletePaymentMethodPaymentServiceTokenResponse> operation
              = new DeletePaymentMethodPaymentServiceToken.Async(sdkConfiguration, _headers);
        DeletePaymentMethodPaymentServiceTokenRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
