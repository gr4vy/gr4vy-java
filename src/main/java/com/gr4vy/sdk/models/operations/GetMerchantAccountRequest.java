/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.gr4vy.sdk.utils.SpeakeasyMetadata;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

public class GetMerchantAccountRequest {

    /**
     * The ID of the merchant account
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=merchant_account_id")
    private String merchantAccountId;

    @JsonCreator
    public GetMerchantAccountRequest(
            String merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = merchantAccountId;
    }

    /**
     * The ID of the merchant account
     */
    @JsonIgnore
    public String merchantAccountId() {
        return merchantAccountId;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The ID of the merchant account
     */
    public GetMerchantAccountRequest withMerchantAccountId(String merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = merchantAccountId;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetMerchantAccountRequest other = (GetMerchantAccountRequest) o;
        return 
            Objects.deepEquals(this.merchantAccountId, other.merchantAccountId);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            merchantAccountId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetMerchantAccountRequest.class,
                "merchantAccountId", merchantAccountId);
    }
    
    public final static class Builder {
 
        private String merchantAccountId;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The ID of the merchant account
         */
        public Builder merchantAccountId(String merchantAccountId) {
            Utils.checkNotNull(merchantAccountId, "merchantAccountId");
            this.merchantAccountId = merchantAccountId;
            return this;
        }
        
        public GetMerchantAccountRequest build() {
            return new GetMerchantAccountRequest(
                merchantAccountId);
        }
    }
}
