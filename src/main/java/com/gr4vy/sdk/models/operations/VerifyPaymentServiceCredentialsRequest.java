/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.gr4vy.sdk.models.components.VerifyCredentials;
import com.gr4vy.sdk.utils.SpeakeasyMetadata;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import org.openapitools.jackson.nullable.JsonNullable;


public class VerifyPaymentServiceCredentialsRequest {
    /**
     * The ID of the merchant account to use for this request.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-gr4vy-merchant-account-id")
    private JsonNullable<String> merchantAccountId;


    @SpeakeasyMetadata("request:mediaType=application/json")
    private VerifyCredentials verifyCredentials;

    @JsonCreator
    public VerifyPaymentServiceCredentialsRequest(
            JsonNullable<String> merchantAccountId,
            VerifyCredentials verifyCredentials) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        Utils.checkNotNull(verifyCredentials, "verifyCredentials");
        this.merchantAccountId = merchantAccountId;
        this.verifyCredentials = verifyCredentials;
    }
    
    public VerifyPaymentServiceCredentialsRequest(
            VerifyCredentials verifyCredentials) {
        this(JsonNullable.undefined(), verifyCredentials);
    }

    /**
     * The ID of the merchant account to use for this request.
     */
    @JsonIgnore
    public JsonNullable<String> merchantAccountId() {
        return merchantAccountId;
    }

    @JsonIgnore
    public VerifyCredentials verifyCredentials() {
        return verifyCredentials;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The ID of the merchant account to use for this request.
     */
    public VerifyPaymentServiceCredentialsRequest withMerchantAccountId(String merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = JsonNullable.of(merchantAccountId);
        return this;
    }

    /**
     * The ID of the merchant account to use for this request.
     */
    public VerifyPaymentServiceCredentialsRequest withMerchantAccountId(JsonNullable<String> merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = merchantAccountId;
        return this;
    }

    public VerifyPaymentServiceCredentialsRequest withVerifyCredentials(VerifyCredentials verifyCredentials) {
        Utils.checkNotNull(verifyCredentials, "verifyCredentials");
        this.verifyCredentials = verifyCredentials;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        VerifyPaymentServiceCredentialsRequest other = (VerifyPaymentServiceCredentialsRequest) o;
        return 
            Utils.enhancedDeepEquals(this.merchantAccountId, other.merchantAccountId) &&
            Utils.enhancedDeepEquals(this.verifyCredentials, other.verifyCredentials);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            merchantAccountId, verifyCredentials);
    }
    
    @Override
    public String toString() {
        return Utils.toString(VerifyPaymentServiceCredentialsRequest.class,
                "merchantAccountId", merchantAccountId,
                "verifyCredentials", verifyCredentials);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<String> merchantAccountId = JsonNullable.undefined();

        private VerifyCredentials verifyCredentials;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The ID of the merchant account to use for this request.
         */
        public Builder merchantAccountId(String merchantAccountId) {
            Utils.checkNotNull(merchantAccountId, "merchantAccountId");
            this.merchantAccountId = JsonNullable.of(merchantAccountId);
            return this;
        }

        /**
         * The ID of the merchant account to use for this request.
         */
        public Builder merchantAccountId(JsonNullable<String> merchantAccountId) {
            Utils.checkNotNull(merchantAccountId, "merchantAccountId");
            this.merchantAccountId = merchantAccountId;
            return this;
        }


        public Builder verifyCredentials(VerifyCredentials verifyCredentials) {
            Utils.checkNotNull(verifyCredentials, "verifyCredentials");
            this.verifyCredentials = verifyCredentials;
            return this;
        }

        public VerifyPaymentServiceCredentialsRequest build() {

            return new VerifyPaymentServiceCredentialsRequest(
                merchantAccountId, verifyCredentials);
        }

    }
}
