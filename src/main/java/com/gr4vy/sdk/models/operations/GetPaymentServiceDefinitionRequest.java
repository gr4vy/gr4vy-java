/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.gr4vy.sdk.utils.SpeakeasyMetadata;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;

public class GetPaymentServiceDefinitionRequest {

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=payment_service_definition_id")
    private String paymentServiceDefinitionId;

    @JsonCreator
    public GetPaymentServiceDefinitionRequest(
            String paymentServiceDefinitionId) {
        Utils.checkNotNull(paymentServiceDefinitionId, "paymentServiceDefinitionId");
        this.paymentServiceDefinitionId = paymentServiceDefinitionId;
    }

    @JsonIgnore
    public String paymentServiceDefinitionId() {
        return paymentServiceDefinitionId;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public GetPaymentServiceDefinitionRequest withPaymentServiceDefinitionId(String paymentServiceDefinitionId) {
        Utils.checkNotNull(paymentServiceDefinitionId, "paymentServiceDefinitionId");
        this.paymentServiceDefinitionId = paymentServiceDefinitionId;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetPaymentServiceDefinitionRequest other = (GetPaymentServiceDefinitionRequest) o;
        return 
            Utils.enhancedDeepEquals(this.paymentServiceDefinitionId, other.paymentServiceDefinitionId);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            paymentServiceDefinitionId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetPaymentServiceDefinitionRequest.class,
                "paymentServiceDefinitionId", paymentServiceDefinitionId);
    }
    
    public final static class Builder {
 
        private String paymentServiceDefinitionId;
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder paymentServiceDefinitionId(String paymentServiceDefinitionId) {
            Utils.checkNotNull(paymentServiceDefinitionId, "paymentServiceDefinitionId");
            this.paymentServiceDefinitionId = paymentServiceDefinitionId;
            return this;
        }
        
        public GetPaymentServiceDefinitionRequest build() {
            return new GetPaymentServiceDefinitionRequest(
                paymentServiceDefinitionId);
        }
    }
}
