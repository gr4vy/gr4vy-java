/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.operations;

import static com.gr4vy.sdk.operations.Operations.RequestOperation;

import com.gr4vy.sdk.SDKConfiguration;
import com.gr4vy.sdk.models.components.ApplePaySessionRequest;
import com.gr4vy.sdk.operations.CreateApplePayDigitalWalletSession;
import com.gr4vy.sdk.utils.Headers;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import org.openapitools.jackson.nullable.JsonNullable;

public class CreateApplePayDigitalWalletSessionRequestBuilder {

    private JsonNullable<String> merchantAccountId = JsonNullable.undefined();
    private ApplePaySessionRequest applePaySessionRequest;
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public CreateApplePayDigitalWalletSessionRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public CreateApplePayDigitalWalletSessionRequestBuilder merchantAccountId(String merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = JsonNullable.of(merchantAccountId);
        return this;
    }

    public CreateApplePayDigitalWalletSessionRequestBuilder merchantAccountId(JsonNullable<String> merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = merchantAccountId;
        return this;
    }

    public CreateApplePayDigitalWalletSessionRequestBuilder applePaySessionRequest(ApplePaySessionRequest applePaySessionRequest) {
        Utils.checkNotNull(applePaySessionRequest, "applePaySessionRequest");
        this.applePaySessionRequest = applePaySessionRequest;
        return this;
    }


    private CreateApplePayDigitalWalletSessionRequest buildRequest() {

        CreateApplePayDigitalWalletSessionRequest request = new CreateApplePayDigitalWalletSessionRequest(merchantAccountId,
            applePaySessionRequest);

        return request;
    }

    public CreateApplePayDigitalWalletSessionResponse call() throws Exception {
        
        RequestOperation<CreateApplePayDigitalWalletSessionRequest, CreateApplePayDigitalWalletSessionResponse> operation
              = new CreateApplePayDigitalWalletSession.Sync(sdkConfiguration, _headers);
        CreateApplePayDigitalWalletSessionRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
