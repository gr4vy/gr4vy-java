/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.operations.async;

import static com.gr4vy.sdk.operations.Operations.AsyncRequestOperation;

import com.gr4vy.sdk.SDKConfiguration;
import com.gr4vy.sdk.models.components.MerchantAccountUpdate;
import com.gr4vy.sdk.models.operations.UpdateMerchantAccountRequest;
import com.gr4vy.sdk.operations.UpdateMerchantAccount;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.concurrent.CompletableFuture;

public class UpdateMerchantAccountRequestBuilder {

    private String merchantAccountId;
    private MerchantAccountUpdate merchantAccountUpdate;
    private final SDKConfiguration sdkConfiguration;

    public UpdateMerchantAccountRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public UpdateMerchantAccountRequestBuilder merchantAccountId(String merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = merchantAccountId;
        return this;
    }

    public UpdateMerchantAccountRequestBuilder merchantAccountUpdate(MerchantAccountUpdate merchantAccountUpdate) {
        Utils.checkNotNull(merchantAccountUpdate, "merchantAccountUpdate");
        this.merchantAccountUpdate = merchantAccountUpdate;
        return this;
    }


    private UpdateMerchantAccountRequest buildRequest() {

        UpdateMerchantAccountRequest request = new UpdateMerchantAccountRequest(merchantAccountId,
            merchantAccountUpdate);

        return request;
    }

    public CompletableFuture<UpdateMerchantAccountResponse> call() throws Exception {
        
        AsyncRequestOperation<UpdateMerchantAccountRequest, UpdateMerchantAccountResponse> operation
              = new UpdateMerchantAccount.Async(sdkConfiguration);
        UpdateMerchantAccountRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
