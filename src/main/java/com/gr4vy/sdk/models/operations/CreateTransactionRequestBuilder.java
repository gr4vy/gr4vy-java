/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.operations;

import com.gr4vy.sdk.models.components.TransactionCreate;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import org.openapitools.jackson.nullable.JsonNullable;

public class CreateTransactionRequestBuilder {

    private JsonNullable<String> merchantAccountId = JsonNullable.undefined();
    private JsonNullable<String> idempotencyKey = JsonNullable.undefined();
    private TransactionCreate transactionCreate;
    private final SDKMethodInterfaces.MethodCallCreateTransaction sdk;

    public CreateTransactionRequestBuilder(SDKMethodInterfaces.MethodCallCreateTransaction sdk) {
        this.sdk = sdk;
    }

    public CreateTransactionRequestBuilder merchantAccountId(String merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = JsonNullable.of(merchantAccountId);
        return this;
    }

    public CreateTransactionRequestBuilder merchantAccountId(JsonNullable<String> merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = merchantAccountId;
        return this;
    }

    public CreateTransactionRequestBuilder idempotencyKey(String idempotencyKey) {
        Utils.checkNotNull(idempotencyKey, "idempotencyKey");
        this.idempotencyKey = JsonNullable.of(idempotencyKey);
        return this;
    }

    public CreateTransactionRequestBuilder idempotencyKey(JsonNullable<String> idempotencyKey) {
        Utils.checkNotNull(idempotencyKey, "idempotencyKey");
        this.idempotencyKey = idempotencyKey;
        return this;
    }

    public CreateTransactionRequestBuilder transactionCreate(TransactionCreate transactionCreate) {
        Utils.checkNotNull(transactionCreate, "transactionCreate");
        this.transactionCreate = transactionCreate;
        return this;
    }

    public CreateTransactionResponse call() throws Exception {

        return sdk.create(
            merchantAccountId,
            idempotencyKey,
            transactionCreate);
    }
}
