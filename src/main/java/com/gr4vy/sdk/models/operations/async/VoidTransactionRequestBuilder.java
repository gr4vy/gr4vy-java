/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.operations.async;

import static com.gr4vy.sdk.operations.Operations.AsyncRequestOperation;

import com.gr4vy.sdk.SDKConfiguration;
import com.gr4vy.sdk.models.operations.VoidTransactionRequest;
import com.gr4vy.sdk.operations.VoidTransaction;
import com.gr4vy.sdk.utils.Headers;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import org.openapitools.jackson.nullable.JsonNullable;

public class VoidTransactionRequestBuilder {

    private String transactionId;
    private JsonNullable<? extends List<String>> prefer = JsonNullable.undefined();
    private JsonNullable<String> merchantAccountId = JsonNullable.undefined();
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public VoidTransactionRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public VoidTransactionRequestBuilder transactionId(String transactionId) {
        Utils.checkNotNull(transactionId, "transactionId");
        this.transactionId = transactionId;
        return this;
    }

    public VoidTransactionRequestBuilder prefer(List<String> prefer) {
        Utils.checkNotNull(prefer, "prefer");
        this.prefer = JsonNullable.of(prefer);
        return this;
    }

    public VoidTransactionRequestBuilder prefer(JsonNullable<? extends List<String>> prefer) {
        Utils.checkNotNull(prefer, "prefer");
        this.prefer = prefer;
        return this;
    }

    public VoidTransactionRequestBuilder merchantAccountId(String merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = JsonNullable.of(merchantAccountId);
        return this;
    }

    public VoidTransactionRequestBuilder merchantAccountId(JsonNullable<String> merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = merchantAccountId;
        return this;
    }


    private VoidTransactionRequest buildRequest() {

        VoidTransactionRequest request = new VoidTransactionRequest(transactionId,
            prefer,
            merchantAccountId);

        return request;
    }

    public CompletableFuture<VoidTransactionResponse> call() throws Exception {
        
        AsyncRequestOperation<VoidTransactionRequest, VoidTransactionResponse> operation
              = new VoidTransaction.Async(sdkConfiguration, _headers);
        VoidTransactionRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
