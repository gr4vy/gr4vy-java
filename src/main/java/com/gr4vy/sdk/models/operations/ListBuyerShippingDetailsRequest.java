/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.gr4vy.sdk.utils.SpeakeasyMetadata;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import org.openapitools.jackson.nullable.JsonNullable;


public class ListBuyerShippingDetailsRequest {
    /**
     * The ID of the buyer to retrieve shipping details for.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=buyer_id")
    private String buyerId;

    /**
     * The ID of the merchant account to use for this request.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-gr4vy-merchant-account-id")
    private JsonNullable<String> merchantAccountId;

    @JsonCreator
    public ListBuyerShippingDetailsRequest(
            String buyerId,
            JsonNullable<String> merchantAccountId) {
        Utils.checkNotNull(buyerId, "buyerId");
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.buyerId = buyerId;
        this.merchantAccountId = merchantAccountId;
    }
    
    public ListBuyerShippingDetailsRequest(
            String buyerId) {
        this(buyerId, JsonNullable.undefined());
    }

    /**
     * The ID of the buyer to retrieve shipping details for.
     */
    @JsonIgnore
    public String buyerId() {
        return buyerId;
    }

    /**
     * The ID of the merchant account to use for this request.
     */
    @JsonIgnore
    public JsonNullable<String> merchantAccountId() {
        return merchantAccountId;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The ID of the buyer to retrieve shipping details for.
     */
    public ListBuyerShippingDetailsRequest withBuyerId(String buyerId) {
        Utils.checkNotNull(buyerId, "buyerId");
        this.buyerId = buyerId;
        return this;
    }

    /**
     * The ID of the merchant account to use for this request.
     */
    public ListBuyerShippingDetailsRequest withMerchantAccountId(String merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = JsonNullable.of(merchantAccountId);
        return this;
    }

    /**
     * The ID of the merchant account to use for this request.
     */
    public ListBuyerShippingDetailsRequest withMerchantAccountId(JsonNullable<String> merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = merchantAccountId;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListBuyerShippingDetailsRequest other = (ListBuyerShippingDetailsRequest) o;
        return 
            Utils.enhancedDeepEquals(this.buyerId, other.buyerId) &&
            Utils.enhancedDeepEquals(this.merchantAccountId, other.merchantAccountId);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            buyerId, merchantAccountId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListBuyerShippingDetailsRequest.class,
                "buyerId", buyerId,
                "merchantAccountId", merchantAccountId);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String buyerId;

        private JsonNullable<String> merchantAccountId = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The ID of the buyer to retrieve shipping details for.
         */
        public Builder buyerId(String buyerId) {
            Utils.checkNotNull(buyerId, "buyerId");
            this.buyerId = buyerId;
            return this;
        }


        /**
         * The ID of the merchant account to use for this request.
         */
        public Builder merchantAccountId(String merchantAccountId) {
            Utils.checkNotNull(merchantAccountId, "merchantAccountId");
            this.merchantAccountId = JsonNullable.of(merchantAccountId);
            return this;
        }

        /**
         * The ID of the merchant account to use for this request.
         */
        public Builder merchantAccountId(JsonNullable<String> merchantAccountId) {
            Utils.checkNotNull(merchantAccountId, "merchantAccountId");
            this.merchantAccountId = merchantAccountId;
            return this;
        }

        public ListBuyerShippingDetailsRequest build() {

            return new ListBuyerShippingDetailsRequest(
                buyerId, merchantAccountId);
        }

    }
}
