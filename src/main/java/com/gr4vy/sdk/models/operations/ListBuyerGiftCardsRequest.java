/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.gr4vy.sdk.utils.SpeakeasyMetadata;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;

public class ListBuyerGiftCardsRequest {

    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=buyer_external_identifier")
    private JsonNullable<String> buyerExternalIdentifier;

    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=buyer_id")
    private JsonNullable<String> buyerId;

    /**
     * The ID of the merchant account to use for this request.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-gr4vy-merchant-account-id")
    private JsonNullable<String> merchantAccountId;

    @JsonCreator
    public ListBuyerGiftCardsRequest(
            JsonNullable<String> buyerExternalIdentifier,
            JsonNullable<String> buyerId,
            JsonNullable<String> merchantAccountId) {
        Utils.checkNotNull(buyerExternalIdentifier, "buyerExternalIdentifier");
        Utils.checkNotNull(buyerId, "buyerId");
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.buyerExternalIdentifier = buyerExternalIdentifier;
        this.buyerId = buyerId;
        this.merchantAccountId = merchantAccountId;
    }
    
    public ListBuyerGiftCardsRequest() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    @JsonIgnore
    public JsonNullable<String> buyerExternalIdentifier() {
        return buyerExternalIdentifier;
    }

    @JsonIgnore
    public JsonNullable<String> buyerId() {
        return buyerId;
    }

    /**
     * The ID of the merchant account to use for this request.
     */
    @JsonIgnore
    public JsonNullable<String> merchantAccountId() {
        return merchantAccountId;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public ListBuyerGiftCardsRequest withBuyerExternalIdentifier(String buyerExternalIdentifier) {
        Utils.checkNotNull(buyerExternalIdentifier, "buyerExternalIdentifier");
        this.buyerExternalIdentifier = JsonNullable.of(buyerExternalIdentifier);
        return this;
    }

    public ListBuyerGiftCardsRequest withBuyerExternalIdentifier(JsonNullable<String> buyerExternalIdentifier) {
        Utils.checkNotNull(buyerExternalIdentifier, "buyerExternalIdentifier");
        this.buyerExternalIdentifier = buyerExternalIdentifier;
        return this;
    }

    public ListBuyerGiftCardsRequest withBuyerId(String buyerId) {
        Utils.checkNotNull(buyerId, "buyerId");
        this.buyerId = JsonNullable.of(buyerId);
        return this;
    }

    public ListBuyerGiftCardsRequest withBuyerId(JsonNullable<String> buyerId) {
        Utils.checkNotNull(buyerId, "buyerId");
        this.buyerId = buyerId;
        return this;
    }

    /**
     * The ID of the merchant account to use for this request.
     */
    public ListBuyerGiftCardsRequest withMerchantAccountId(String merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = JsonNullable.of(merchantAccountId);
        return this;
    }

    /**
     * The ID of the merchant account to use for this request.
     */
    public ListBuyerGiftCardsRequest withMerchantAccountId(JsonNullable<String> merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = merchantAccountId;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListBuyerGiftCardsRequest other = (ListBuyerGiftCardsRequest) o;
        return 
            Objects.deepEquals(this.buyerExternalIdentifier, other.buyerExternalIdentifier) &&
            Objects.deepEquals(this.buyerId, other.buyerId) &&
            Objects.deepEquals(this.merchantAccountId, other.merchantAccountId);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            buyerExternalIdentifier,
            buyerId,
            merchantAccountId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListBuyerGiftCardsRequest.class,
                "buyerExternalIdentifier", buyerExternalIdentifier,
                "buyerId", buyerId,
                "merchantAccountId", merchantAccountId);
    }
    
    public final static class Builder {
 
        private JsonNullable<String> buyerExternalIdentifier = JsonNullable.undefined();
 
        private JsonNullable<String> buyerId = JsonNullable.undefined();
 
        private JsonNullable<String> merchantAccountId = JsonNullable.undefined();
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder buyerExternalIdentifier(String buyerExternalIdentifier) {
            Utils.checkNotNull(buyerExternalIdentifier, "buyerExternalIdentifier");
            this.buyerExternalIdentifier = JsonNullable.of(buyerExternalIdentifier);
            return this;
        }

        public Builder buyerExternalIdentifier(JsonNullable<String> buyerExternalIdentifier) {
            Utils.checkNotNull(buyerExternalIdentifier, "buyerExternalIdentifier");
            this.buyerExternalIdentifier = buyerExternalIdentifier;
            return this;
        }

        public Builder buyerId(String buyerId) {
            Utils.checkNotNull(buyerId, "buyerId");
            this.buyerId = JsonNullable.of(buyerId);
            return this;
        }

        public Builder buyerId(JsonNullable<String> buyerId) {
            Utils.checkNotNull(buyerId, "buyerId");
            this.buyerId = buyerId;
            return this;
        }

        /**
         * The ID of the merchant account to use for this request.
         */
        public Builder merchantAccountId(String merchantAccountId) {
            Utils.checkNotNull(merchantAccountId, "merchantAccountId");
            this.merchantAccountId = JsonNullable.of(merchantAccountId);
            return this;
        }

        /**
         * The ID of the merchant account to use for this request.
         */
        public Builder merchantAccountId(JsonNullable<String> merchantAccountId) {
            Utils.checkNotNull(merchantAccountId, "merchantAccountId");
            this.merchantAccountId = merchantAccountId;
            return this;
        }
        
        public ListBuyerGiftCardsRequest build() {
            return new ListBuyerGiftCardsRequest(
                buyerExternalIdentifier,
                buyerId,
                merchantAccountId);
        }
    }
}
