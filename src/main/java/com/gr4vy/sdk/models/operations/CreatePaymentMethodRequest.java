/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.gr4vy.sdk.utils.SpeakeasyMetadata;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import org.openapitools.jackson.nullable.JsonNullable;

public class CreatePaymentMethodRequest {

    /**
     * The ID of the merchant account to use for this request.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-gr4vy-merchant-account-id")
    private JsonNullable<String> merchantAccountId;

    @SpeakeasyMetadata("request:mediaType=application/json")
    private Body requestBody;

    @JsonCreator
    public CreatePaymentMethodRequest(
            JsonNullable<String> merchantAccountId,
            Body requestBody) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        Utils.checkNotNull(requestBody, "requestBody");
        this.merchantAccountId = merchantAccountId;
        this.requestBody = requestBody;
    }
    
    public CreatePaymentMethodRequest(
            Body requestBody) {
        this(JsonNullable.undefined(), requestBody);
    }

    /**
     * The ID of the merchant account to use for this request.
     */
    @JsonIgnore
    public JsonNullable<String> merchantAccountId() {
        return merchantAccountId;
    }

    @JsonIgnore
    public Body requestBody() {
        return requestBody;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The ID of the merchant account to use for this request.
     */
    public CreatePaymentMethodRequest withMerchantAccountId(String merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = JsonNullable.of(merchantAccountId);
        return this;
    }

    /**
     * The ID of the merchant account to use for this request.
     */
    public CreatePaymentMethodRequest withMerchantAccountId(JsonNullable<String> merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = merchantAccountId;
        return this;
    }

    public CreatePaymentMethodRequest withRequestBody(Body requestBody) {
        Utils.checkNotNull(requestBody, "requestBody");
        this.requestBody = requestBody;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreatePaymentMethodRequest other = (CreatePaymentMethodRequest) o;
        return 
            Utils.enhancedDeepEquals(this.merchantAccountId, other.merchantAccountId) &&
            Utils.enhancedDeepEquals(this.requestBody, other.requestBody);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            merchantAccountId,
            requestBody);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CreatePaymentMethodRequest.class,
                "merchantAccountId", merchantAccountId,
                "requestBody", requestBody);
    }
    
    public final static class Builder {
 
        private JsonNullable<String> merchantAccountId = JsonNullable.undefined();
 
        private Body requestBody;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The ID of the merchant account to use for this request.
         */
        public Builder merchantAccountId(String merchantAccountId) {
            Utils.checkNotNull(merchantAccountId, "merchantAccountId");
            this.merchantAccountId = JsonNullable.of(merchantAccountId);
            return this;
        }

        /**
         * The ID of the merchant account to use for this request.
         */
        public Builder merchantAccountId(JsonNullable<String> merchantAccountId) {
            Utils.checkNotNull(merchantAccountId, "merchantAccountId");
            this.merchantAccountId = merchantAccountId;
            return this;
        }

        public Builder requestBody(Body requestBody) {
            Utils.checkNotNull(requestBody, "requestBody");
            this.requestBody = requestBody;
            return this;
        }
        
        public CreatePaymentMethodRequest build() {
            return new CreatePaymentMethodRequest(
                merchantAccountId,
                requestBody);
        }
    }
}
