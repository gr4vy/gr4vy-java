/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk.models.operations.async;

import static com.gr4vy.sdk.operations.Operations.AsyncRequestOperation;

import com.gr4vy.sdk.SDKConfiguration;
import com.gr4vy.sdk.models.components.ReportExecutionUrlGenerate;
import com.gr4vy.sdk.models.operations.CreateReportExecutionUrlRequest;
import com.gr4vy.sdk.operations.CreateReportExecutionUrl;
import com.gr4vy.sdk.utils.Headers;
import com.gr4vy.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;
import org.openapitools.jackson.nullable.JsonNullable;

public class CreateReportExecutionUrlRequestBuilder {

    private String reportId;
    private String reportExecutionId;
    private JsonNullable<String> merchantAccountId = JsonNullable.undefined();
    private Optional<? extends ReportExecutionUrlGenerate> reportExecutionUrlGenerate = Optional.empty();
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public CreateReportExecutionUrlRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public CreateReportExecutionUrlRequestBuilder reportId(String reportId) {
        Utils.checkNotNull(reportId, "reportId");
        this.reportId = reportId;
        return this;
    }

    public CreateReportExecutionUrlRequestBuilder reportExecutionId(String reportExecutionId) {
        Utils.checkNotNull(reportExecutionId, "reportExecutionId");
        this.reportExecutionId = reportExecutionId;
        return this;
    }

    public CreateReportExecutionUrlRequestBuilder merchantAccountId(String merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = JsonNullable.of(merchantAccountId);
        return this;
    }

    public CreateReportExecutionUrlRequestBuilder merchantAccountId(JsonNullable<String> merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = merchantAccountId;
        return this;
    }
                
    public CreateReportExecutionUrlRequestBuilder reportExecutionUrlGenerate(ReportExecutionUrlGenerate reportExecutionUrlGenerate) {
        Utils.checkNotNull(reportExecutionUrlGenerate, "reportExecutionUrlGenerate");
        this.reportExecutionUrlGenerate = Optional.of(reportExecutionUrlGenerate);
        return this;
    }

    public CreateReportExecutionUrlRequestBuilder reportExecutionUrlGenerate(Optional<? extends ReportExecutionUrlGenerate> reportExecutionUrlGenerate) {
        Utils.checkNotNull(reportExecutionUrlGenerate, "reportExecutionUrlGenerate");
        this.reportExecutionUrlGenerate = reportExecutionUrlGenerate;
        return this;
    }


    private CreateReportExecutionUrlRequest buildRequest() {

        CreateReportExecutionUrlRequest request = new CreateReportExecutionUrlRequest(reportId,
            reportExecutionId,
            merchantAccountId,
            reportExecutionUrlGenerate);

        return request;
    }

    public CompletableFuture<CreateReportExecutionUrlResponse> call() throws Exception {
        
        AsyncRequestOperation<CreateReportExecutionUrlRequest, CreateReportExecutionUrlResponse> operation
              = new CreateReportExecutionUrl.Async(sdkConfiguration, _headers);
        CreateReportExecutionUrlRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
