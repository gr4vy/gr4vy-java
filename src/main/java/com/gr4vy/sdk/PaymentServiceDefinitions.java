/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk;

import static com.gr4vy.sdk.operations.Operations.RequestOperation;

import com.gr4vy.sdk.models.operations.CreatePaymentServiceDefinitionSessionRequest;
import com.gr4vy.sdk.models.operations.CreatePaymentServiceDefinitionSessionRequestBuilder;
import com.gr4vy.sdk.models.operations.CreatePaymentServiceDefinitionSessionResponse;
import com.gr4vy.sdk.models.operations.GetPaymentServiceDefinitionRequest;
import com.gr4vy.sdk.models.operations.GetPaymentServiceDefinitionRequestBuilder;
import com.gr4vy.sdk.models.operations.GetPaymentServiceDefinitionResponse;
import com.gr4vy.sdk.models.operations.ListPaymentServiceDefinitionsRequest;
import com.gr4vy.sdk.models.operations.ListPaymentServiceDefinitionsRequestBuilder;
import com.gr4vy.sdk.models.operations.ListPaymentServiceDefinitionsResponse;
import com.gr4vy.sdk.operations.CreatePaymentServiceDefinitionSession;
import com.gr4vy.sdk.operations.GetPaymentServiceDefinition;
import com.gr4vy.sdk.operations.ListPaymentServiceDefinitions;
import com.gr4vy.sdk.utils.Headers;
import com.gr4vy.sdk.utils.Options;
import java.lang.Exception;
import java.lang.Long;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class PaymentServiceDefinitions {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncPaymentServiceDefinitions asyncSDK;

    PaymentServiceDefinitions(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncPaymentServiceDefinitions(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncPaymentServiceDefinitions async() {
        return asyncSDK;
    }

    /**
     * List payment service definitions
     * 
     * <p>List the definitions of each payment service that can be configured.
     * 
     * @return The call builder
     */
    public ListPaymentServiceDefinitionsRequestBuilder list() {
        return new ListPaymentServiceDefinitionsRequestBuilder(sdkConfiguration);
    }

    /**
     * List payment service definitions
     * 
     * <p>List the definitions of each payment service that can be configured.
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListPaymentServiceDefinitionsResponse listDirect() throws Exception {
        return list(JsonNullable.undefined(), Optional.empty(), Optional.empty());
    }

    /**
     * List payment service definitions
     * 
     * <p>List the definitions of each payment service that can be configured.
     * 
     * @param cursor A pointer to the page of results to return.
     * @param limit The maximum number of items that are at returned.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListPaymentServiceDefinitionsResponse list(
            JsonNullable<String> cursor, Optional<Long> limit,
            Optional<Options> options) throws Exception {
        ListPaymentServiceDefinitionsRequest request =
            ListPaymentServiceDefinitionsRequest
                .builder()
                .cursor(cursor)
                .limit(limit)
                .build();
        RequestOperation<ListPaymentServiceDefinitionsRequest, ListPaymentServiceDefinitionsResponse> operation
              = new ListPaymentServiceDefinitions.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get a payment service definition
     * 
     * <p>Get the definition of a payment service that can be configured.
     * 
     * @return The call builder
     */
    public GetPaymentServiceDefinitionRequestBuilder get() {
        return new GetPaymentServiceDefinitionRequestBuilder(sdkConfiguration);
    }

    /**
     * Get a payment service definition
     * 
     * <p>Get the definition of a payment service that can be configured.
     * 
     * @param paymentServiceDefinitionId 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetPaymentServiceDefinitionResponse get(String paymentServiceDefinitionId) throws Exception {
        return get(paymentServiceDefinitionId, Optional.empty());
    }

    /**
     * Get a payment service definition
     * 
     * <p>Get the definition of a payment service that can be configured.
     * 
     * @param paymentServiceDefinitionId 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetPaymentServiceDefinitionResponse get(String paymentServiceDefinitionId, Optional<Options> options) throws Exception {
        GetPaymentServiceDefinitionRequest request =
            GetPaymentServiceDefinitionRequest
                .builder()
                .paymentServiceDefinitionId(paymentServiceDefinitionId)
                .build();
        RequestOperation<GetPaymentServiceDefinitionRequest, GetPaymentServiceDefinitionResponse> operation
              = new GetPaymentServiceDefinition.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create a session for a payment service definition
     * 
     * <p>Creates a session for a payment service that supports sessions.
     * 
     * @return The call builder
     */
    public CreatePaymentServiceDefinitionSessionRequestBuilder session() {
        return new CreatePaymentServiceDefinitionSessionRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a session for a payment service definition
     * 
     * <p>Creates a session for a payment service that supports sessions.
     * 
     * @param paymentServiceDefinitionId 
     * @param requestBody 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreatePaymentServiceDefinitionSessionResponse session(String paymentServiceDefinitionId, Map<String, Object> requestBody) throws Exception {
        CreatePaymentServiceDefinitionSessionRequest request =
            CreatePaymentServiceDefinitionSessionRequest
                .builder()
                .paymentServiceDefinitionId(paymentServiceDefinitionId)
                .requestBody(requestBody)
                .build();
        RequestOperation<CreatePaymentServiceDefinitionSessionRequest, CreatePaymentServiceDefinitionSessionResponse> operation
              = new CreatePaymentServiceDefinitionSession.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
