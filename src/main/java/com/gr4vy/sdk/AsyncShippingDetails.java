/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk;

import static com.gr4vy.sdk.operations.Operations.AsyncRequestOperation;

import com.gr4vy.sdk.models.components.ShippingDetailsCreate;
import com.gr4vy.sdk.models.components.ShippingDetailsUpdate;
import com.gr4vy.sdk.models.operations.AddBuyerShippingDetailsRequest;
import com.gr4vy.sdk.models.operations.DeleteBuyerShippingDetailsRequest;
import com.gr4vy.sdk.models.operations.GetBuyerShippingDetailsRequest;
import com.gr4vy.sdk.models.operations.ListBuyerShippingDetailsRequest;
import com.gr4vy.sdk.models.operations.UpdateBuyerShippingDetailsRequest;
import com.gr4vy.sdk.models.operations.async.AddBuyerShippingDetailsRequestBuilder;
import com.gr4vy.sdk.models.operations.async.AddBuyerShippingDetailsResponse;
import com.gr4vy.sdk.models.operations.async.DeleteBuyerShippingDetailsRequestBuilder;
import com.gr4vy.sdk.models.operations.async.DeleteBuyerShippingDetailsResponse;
import com.gr4vy.sdk.models.operations.async.GetBuyerShippingDetailsRequestBuilder;
import com.gr4vy.sdk.models.operations.async.GetBuyerShippingDetailsResponse;
import com.gr4vy.sdk.models.operations.async.ListBuyerShippingDetailsRequestBuilder;
import com.gr4vy.sdk.models.operations.async.ListBuyerShippingDetailsResponse;
import com.gr4vy.sdk.models.operations.async.UpdateBuyerShippingDetailsRequestBuilder;
import com.gr4vy.sdk.models.operations.async.UpdateBuyerShippingDetailsResponse;
import com.gr4vy.sdk.operations.AddBuyerShippingDetails;
import com.gr4vy.sdk.operations.DeleteBuyerShippingDetails;
import com.gr4vy.sdk.operations.GetBuyerShippingDetails;
import com.gr4vy.sdk.operations.ListBuyerShippingDetails;
import com.gr4vy.sdk.operations.UpdateBuyerShippingDetails;
import com.gr4vy.sdk.utils.Headers;
import com.gr4vy.sdk.utils.Options;
import java.lang.String;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;
import org.openapitools.jackson.nullable.JsonNullable;


public class AsyncShippingDetails {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final ShippingDetails syncSDK;

    AsyncShippingDetails(ShippingDetails syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public ShippingDetails sync() {
        return syncSDK;
    }


    /**
     * Add buyer shipping details
     * 
     * <p>Associate shipping details to a buyer.
     * 
     * @return The async call builder
     */
    public AddBuyerShippingDetailsRequestBuilder create() {
        return new AddBuyerShippingDetailsRequestBuilder(sdkConfiguration);
    }

    /**
     * Add buyer shipping details
     * 
     * <p>Associate shipping details to a buyer.
     * 
     * @param buyerId The ID of the buyer to add shipping details to.
     * @param shippingDetailsCreate 
     * @return CompletableFuture&lt;AddBuyerShippingDetailsResponse&gt; - The async response
     */
    public CompletableFuture<AddBuyerShippingDetailsResponse> create(String buyerId, ShippingDetailsCreate shippingDetailsCreate) {
        return create(buyerId, JsonNullable.undefined(), shippingDetailsCreate);
    }

    /**
     * Add buyer shipping details
     * 
     * <p>Associate shipping details to a buyer.
     * 
     * @param buyerId The ID of the buyer to add shipping details to.
     * @param merchantAccountId 
     * @param shippingDetailsCreate 
     * @return CompletableFuture&lt;AddBuyerShippingDetailsResponse&gt; - The async response
     */
    public CompletableFuture<AddBuyerShippingDetailsResponse> create(
            String buyerId, JsonNullable<String> merchantAccountId,
            ShippingDetailsCreate shippingDetailsCreate) {
        AddBuyerShippingDetailsRequest request =
            AddBuyerShippingDetailsRequest
                .builder()
                .buyerId(buyerId)
                .merchantAccountId(merchantAccountId)
                .shippingDetailsCreate(shippingDetailsCreate)
                .build();
        AsyncRequestOperation<AddBuyerShippingDetailsRequest, AddBuyerShippingDetailsResponse> operation
              = new AddBuyerShippingDetails.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * List a buyer's shipping details
     * 
     * <p>List all the shipping details associated to a specific buyer.
     * 
     * @return The async call builder
     */
    public ListBuyerShippingDetailsRequestBuilder list() {
        return new ListBuyerShippingDetailsRequestBuilder(sdkConfiguration);
    }

    /**
     * List a buyer's shipping details
     * 
     * <p>List all the shipping details associated to a specific buyer.
     * 
     * @param buyerId The ID of the buyer to retrieve shipping details for.
     * @return CompletableFuture&lt;ListBuyerShippingDetailsResponse&gt; - The async response
     */
    public CompletableFuture<ListBuyerShippingDetailsResponse> list(String buyerId) {
        return list(buyerId, JsonNullable.undefined(), Optional.empty());
    }

    /**
     * List a buyer's shipping details
     * 
     * <p>List all the shipping details associated to a specific buyer.
     * 
     * @param buyerId The ID of the buyer to retrieve shipping details for.
     * @param merchantAccountId 
     * @param options additional options
     * @return CompletableFuture&lt;ListBuyerShippingDetailsResponse&gt; - The async response
     */
    public CompletableFuture<ListBuyerShippingDetailsResponse> list(
            String buyerId, JsonNullable<String> merchantAccountId,
            Optional<Options> options) {
        ListBuyerShippingDetailsRequest request =
            ListBuyerShippingDetailsRequest
                .builder()
                .buyerId(buyerId)
                .merchantAccountId(merchantAccountId)
                .build();
        AsyncRequestOperation<ListBuyerShippingDetailsRequest, ListBuyerShippingDetailsResponse> operation
              = new ListBuyerShippingDetails.Async(
                                    sdkConfiguration, options, sdkConfiguration.retryScheduler(),
                                    _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Get buyer shipping details
     * 
     * <p>Get a buyer's shipping details.
     * 
     * @return The async call builder
     */
    public GetBuyerShippingDetailsRequestBuilder get() {
        return new GetBuyerShippingDetailsRequestBuilder(sdkConfiguration);
    }

    /**
     * Get buyer shipping details
     * 
     * <p>Get a buyer's shipping details.
     * 
     * @param buyerId The ID of the buyer to retrieve shipping details for.
     * @param shippingDetailsId The ID of the shipping details to retrieve.
     * @return CompletableFuture&lt;GetBuyerShippingDetailsResponse&gt; - The async response
     */
    public CompletableFuture<GetBuyerShippingDetailsResponse> get(String buyerId, String shippingDetailsId) {
        return get(
                buyerId, shippingDetailsId, JsonNullable.undefined(),
                Optional.empty());
    }

    /**
     * Get buyer shipping details
     * 
     * <p>Get a buyer's shipping details.
     * 
     * @param buyerId The ID of the buyer to retrieve shipping details for.
     * @param shippingDetailsId The ID of the shipping details to retrieve.
     * @param merchantAccountId 
     * @param options additional options
     * @return CompletableFuture&lt;GetBuyerShippingDetailsResponse&gt; - The async response
     */
    public CompletableFuture<GetBuyerShippingDetailsResponse> get(
            String buyerId, String shippingDetailsId,
            JsonNullable<String> merchantAccountId, Optional<Options> options) {
        GetBuyerShippingDetailsRequest request =
            GetBuyerShippingDetailsRequest
                .builder()
                .buyerId(buyerId)
                .shippingDetailsId(shippingDetailsId)
                .merchantAccountId(merchantAccountId)
                .build();
        AsyncRequestOperation<GetBuyerShippingDetailsRequest, GetBuyerShippingDetailsResponse> operation
              = new GetBuyerShippingDetails.Async(
                                    sdkConfiguration, options, sdkConfiguration.retryScheduler(),
                                    _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update a buyer's shipping details
     * 
     * <p>Update the shipping details associated to a specific buyer.
     * 
     * @return The async call builder
     */
    public UpdateBuyerShippingDetailsRequestBuilder update() {
        return new UpdateBuyerShippingDetailsRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a buyer's shipping details
     * 
     * <p>Update the shipping details associated to a specific buyer.
     * 
     * @param buyerId The ID of the buyer to update shipping details for.
     * @param shippingDetailsId The ID of the shipping details to update.
     * @param shippingDetailsUpdate 
     * @return CompletableFuture&lt;UpdateBuyerShippingDetailsResponse&gt; - The async response
     */
    public CompletableFuture<UpdateBuyerShippingDetailsResponse> update(
            String buyerId, String shippingDetailsId,
            ShippingDetailsUpdate shippingDetailsUpdate) {
        return update(
                buyerId, shippingDetailsId, JsonNullable.undefined(),
                shippingDetailsUpdate);
    }

    /**
     * Update a buyer's shipping details
     * 
     * <p>Update the shipping details associated to a specific buyer.
     * 
     * @param buyerId The ID of the buyer to update shipping details for.
     * @param shippingDetailsId The ID of the shipping details to update.
     * @param merchantAccountId 
     * @param shippingDetailsUpdate 
     * @return CompletableFuture&lt;UpdateBuyerShippingDetailsResponse&gt; - The async response
     */
    public CompletableFuture<UpdateBuyerShippingDetailsResponse> update(
            String buyerId, String shippingDetailsId,
            JsonNullable<String> merchantAccountId, ShippingDetailsUpdate shippingDetailsUpdate) {
        UpdateBuyerShippingDetailsRequest request =
            UpdateBuyerShippingDetailsRequest
                .builder()
                .buyerId(buyerId)
                .shippingDetailsId(shippingDetailsId)
                .merchantAccountId(merchantAccountId)
                .shippingDetailsUpdate(shippingDetailsUpdate)
                .build();
        AsyncRequestOperation<UpdateBuyerShippingDetailsRequest, UpdateBuyerShippingDetailsResponse> operation
              = new UpdateBuyerShippingDetails.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Delete a buyer's shipping details
     * 
     * <p>Delete the shipping details associated to a specific buyer.
     * 
     * @return The async call builder
     */
    public DeleteBuyerShippingDetailsRequestBuilder delete() {
        return new DeleteBuyerShippingDetailsRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete a buyer's shipping details
     * 
     * <p>Delete the shipping details associated to a specific buyer.
     * 
     * @param buyerId The ID of the buyer to delete shipping details for.
     * @param shippingDetailsId The ID of the shipping details to delete.
     * @return CompletableFuture&lt;DeleteBuyerShippingDetailsResponse&gt; - The async response
     */
    public CompletableFuture<DeleteBuyerShippingDetailsResponse> delete(String buyerId, String shippingDetailsId) {
        return delete(buyerId, shippingDetailsId, JsonNullable.undefined());
    }

    /**
     * Delete a buyer's shipping details
     * 
     * <p>Delete the shipping details associated to a specific buyer.
     * 
     * @param buyerId The ID of the buyer to delete shipping details for.
     * @param shippingDetailsId The ID of the shipping details to delete.
     * @param merchantAccountId 
     * @return CompletableFuture&lt;DeleteBuyerShippingDetailsResponse&gt; - The async response
     */
    public CompletableFuture<DeleteBuyerShippingDetailsResponse> delete(
            String buyerId, String shippingDetailsId,
            JsonNullable<String> merchantAccountId) {
        DeleteBuyerShippingDetailsRequest request =
            DeleteBuyerShippingDetailsRequest
                .builder()
                .buyerId(buyerId)
                .shippingDetailsId(shippingDetailsId)
                .merchantAccountId(merchantAccountId)
                .build();
        AsyncRequestOperation<DeleteBuyerShippingDetailsRequest, DeleteBuyerShippingDetailsResponse> operation
              = new DeleteBuyerShippingDetails.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
