/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk;

import static com.gr4vy.sdk.operations.Operations.RequestOperation;

import com.gr4vy.sdk.models.operations.CreateReportExecutionUrlRequest;
import com.gr4vy.sdk.models.operations.CreateReportExecutionUrlRequestBuilder;
import com.gr4vy.sdk.models.operations.CreateReportExecutionUrlResponse;
import com.gr4vy.sdk.models.operations.GetReportExecutionRequest;
import com.gr4vy.sdk.models.operations.GetReportExecutionRequestBuilder;
import com.gr4vy.sdk.models.operations.GetReportExecutionResponse;
import com.gr4vy.sdk.models.operations.ListReportExecutionsRequest;
import com.gr4vy.sdk.models.operations.ListReportExecutionsRequestBuilder;
import com.gr4vy.sdk.models.operations.ListReportExecutionsResponse;
import com.gr4vy.sdk.operations.CreateReportExecutionUrlOperation;
import com.gr4vy.sdk.operations.GetReportExecutionOperation;
import com.gr4vy.sdk.operations.ListReportExecutionsOperation;
import com.gr4vy.sdk.utils.Options;
import java.lang.Exception;
import java.lang.Long;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class Executions {
    private final SDKConfiguration sdkConfiguration;

    Executions(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * List executions for report
     * 
     * <p>List all executions of a specific report.
     * 
     * @return The call builder
     */
    public ListReportExecutionsRequestBuilder list() {
        return new ListReportExecutionsRequestBuilder(sdkConfiguration);
    }

    /**
     * List executions for report
     * 
     * <p>List all executions of a specific report.
     * 
     * @param reportId The ID of the report to retrieve details for.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListReportExecutionsResponse list(String reportId) throws Exception {
        return list(reportId, JsonNullable.undefined(), Optional.empty(),
            JsonNullable.undefined(), Optional.empty());
    }

    /**
     * List executions for report
     * 
     * <p>List all executions of a specific report.
     * 
     * @param reportId The ID of the report to retrieve details for.
     * @param cursor A pointer to the page of results to return.
     * @param limit The maximum number of items that are at returned.
     * @param merchantAccountId 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListReportExecutionsResponse list(
            String reportId, JsonNullable<String> cursor,
            Optional<Long> limit, JsonNullable<String> merchantAccountId,
            Optional<Options> options) throws Exception {
        ListReportExecutionsRequest request =
            ListReportExecutionsRequest
                .builder()
                .reportId(reportId)
                .cursor(cursor)
                .limit(limit)
                .merchantAccountId(merchantAccountId)
                .build();
        RequestOperation<ListReportExecutionsRequest, ListReportExecutionsResponse> operation
              = new ListReportExecutionsOperation(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create URL for executed report
     * 
     * <p>Creates a download URL for a specific execution of a report.
     * 
     * @return The call builder
     */
    public CreateReportExecutionUrlRequestBuilder url() {
        return new CreateReportExecutionUrlRequestBuilder(sdkConfiguration);
    }

    /**
     * Create URL for executed report
     * 
     * <p>Creates a download URL for a specific execution of a report.
     * 
     * @param reportId The ID of the report to retrieve a URL for.
     * @param reportExecutionId The ID of the execution of a report to retrieve a URL for.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateReportExecutionUrlResponse url(String reportId, String reportExecutionId) throws Exception {
        return url(reportId, reportExecutionId, JsonNullable.undefined());
    }

    /**
     * Create URL for executed report
     * 
     * <p>Creates a download URL for a specific execution of a report.
     * 
     * @param reportId The ID of the report to retrieve a URL for.
     * @param reportExecutionId The ID of the execution of a report to retrieve a URL for.
     * @param merchantAccountId 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateReportExecutionUrlResponse url(
            String reportId, String reportExecutionId,
            JsonNullable<String> merchantAccountId) throws Exception {
        CreateReportExecutionUrlRequest request =
            CreateReportExecutionUrlRequest
                .builder()
                .reportId(reportId)
                .reportExecutionId(reportExecutionId)
                .merchantAccountId(merchantAccountId)
                .build();
        RequestOperation<CreateReportExecutionUrlRequest, CreateReportExecutionUrlResponse> operation
              = new CreateReportExecutionUrlOperation(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get executed report
     * 
     * <p>Fetch a specific executed report.
     * 
     * @return The call builder
     */
    public GetReportExecutionRequestBuilder get() {
        return new GetReportExecutionRequestBuilder(sdkConfiguration);
    }

    /**
     * Get executed report
     * 
     * <p>Fetch a specific executed report.
     * 
     * @param reportExecutionId The ID of the execution of a report to retrieve details for.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetReportExecutionResponse get(String reportExecutionId) throws Exception {
        return get(reportExecutionId, JsonNullable.undefined(), Optional.empty());
    }

    /**
     * Get executed report
     * 
     * <p>Fetch a specific executed report.
     * 
     * @param reportExecutionId The ID of the execution of a report to retrieve details for.
     * @param merchantAccountId 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetReportExecutionResponse get(
            String reportExecutionId, JsonNullable<String> merchantAccountId,
            Optional<Options> options) throws Exception {
        GetReportExecutionRequest request =
            GetReportExecutionRequest
                .builder()
                .reportExecutionId(reportExecutionId)
                .merchantAccountId(merchantAccountId)
                .build();
        RequestOperation<GetReportExecutionRequest, GetReportExecutionResponse> operation
              = new GetReportExecutionOperation(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
