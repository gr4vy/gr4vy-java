/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk;

import static com.gr4vy.sdk.operations.Operations.AsyncRequestOperation;

import com.gr4vy.sdk.models.components.PaymentOptionRequest;
import com.gr4vy.sdk.models.operations.ListPaymentOptionsRequest;
import com.gr4vy.sdk.models.operations.async.ListPaymentOptionsRequestBuilder;
import com.gr4vy.sdk.models.operations.async.ListPaymentOptionsResponse;
import com.gr4vy.sdk.operations.ListPaymentOptions;
import com.gr4vy.sdk.utils.Headers;
import java.lang.String;
import java.util.concurrent.CompletableFuture;
import org.openapitools.jackson.nullable.JsonNullable;


public class AsyncPaymentOptions {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final PaymentOptions syncSDK;

    AsyncPaymentOptions(PaymentOptions syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public PaymentOptions sync() {
        return syncSDK;
    }


    /**
     * List payment options
     * 
     * <p>List the payment options available at checkout. filtering by country, currency, and additional
     * fields passed to Flow rules.
     * 
     * @return The async call builder
     */
    public ListPaymentOptionsRequestBuilder list() {
        return new ListPaymentOptionsRequestBuilder(sdkConfiguration);
    }

    /**
     * List payment options
     * 
     * <p>List the payment options available at checkout. filtering by country, currency, and additional
     * fields passed to Flow rules.
     * 
     * @param paymentOptionRequest 
     * @return {@code CompletableFuture<ListPaymentOptionsResponse>} - The async response
     */
    public CompletableFuture<ListPaymentOptionsResponse> list(PaymentOptionRequest paymentOptionRequest) {
        return list(JsonNullable.undefined(), paymentOptionRequest);
    }

    /**
     * List payment options
     * 
     * <p>List the payment options available at checkout. filtering by country, currency, and additional
     * fields passed to Flow rules.
     * 
     * @param merchantAccountId 
     * @param paymentOptionRequest 
     * @return {@code CompletableFuture<ListPaymentOptionsResponse>} - The async response
     */
    public CompletableFuture<ListPaymentOptionsResponse> list(JsonNullable<String> merchantAccountId, PaymentOptionRequest paymentOptionRequest) {
        ListPaymentOptionsRequest request =
            ListPaymentOptionsRequest
                .builder()
                .merchantAccountId(merchantAccountId)
                .paymentOptionRequest(paymentOptionRequest)
                .build();
        AsyncRequestOperation<ListPaymentOptionsRequest, ListPaymentOptionsResponse> operation
              = new ListPaymentOptions.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
