/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk;

import static com.gr4vy.sdk.operations.Operations.RequestOperation;

import com.gr4vy.sdk.models.operations.GetRefundRequest;
import com.gr4vy.sdk.models.operations.GetRefundRequestBuilder;
import com.gr4vy.sdk.models.operations.GetRefundResponse;
import com.gr4vy.sdk.operations.GetRefundOperation;
import com.gr4vy.sdk.utils.Options;
import java.lang.Exception;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class Refunds {
    private final SDKConfiguration sdkConfiguration;

    Refunds(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * Get refund
     * 
     * <p>Fetch a refund.
     * 
     * @return The call builder
     */
    public GetRefundRequestBuilder get() {
        return new GetRefundRequestBuilder(sdkConfiguration);
    }

    /**
     * Get refund
     * 
     * <p>Fetch a refund.
     * 
     * @param refundId The ID of the refund
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetRefundResponse get(String refundId) throws Exception {
        return get(refundId, JsonNullable.undefined(), Optional.empty());
    }

    /**
     * Get refund
     * 
     * <p>Fetch a refund.
     * 
     * @param refundId The ID of the refund
     * @param merchantAccountId 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetRefundResponse get(
            String refundId, JsonNullable<String> merchantAccountId,
            Optional<Options> options) throws Exception {
        GetRefundRequest request =
            GetRefundRequest
                .builder()
                .refundId(refundId)
                .merchantAccountId(merchantAccountId)
                .build();
        RequestOperation<GetRefundRequest, GetRefundResponse> operation
              = new GetRefundOperation(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
