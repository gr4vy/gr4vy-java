/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk;

import static com.gr4vy.sdk.operations.Operations.AsyncRequestOperation;

import com.gr4vy.sdk.models.operations.ListBuyerGiftCardsRequest;
import com.gr4vy.sdk.models.operations.async.ListBuyerGiftCardsRequestBuilder;
import com.gr4vy.sdk.models.operations.async.ListBuyerGiftCardsResponse;
import com.gr4vy.sdk.operations.ListBuyerGiftCards;
import com.gr4vy.sdk.utils.Options;
import java.lang.String;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;
import org.openapitools.jackson.nullable.JsonNullable;


public class AsyncBuyersGiftCards {
    private final SDKConfiguration sdkConfiguration;
    private final BuyersGiftCards syncSDK;

    AsyncBuyersGiftCards(BuyersGiftCards syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public BuyersGiftCards sync() {
        return syncSDK;
    }


    /**
     * List gift cards for a buyer
     * 
     * <p>List all the stored gift cards for a specific buyer.
     * 
     * @return The async call builder
     */
    public ListBuyerGiftCardsRequestBuilder list() {
        return new ListBuyerGiftCardsRequestBuilder(sdkConfiguration);
    }

    /**
     * List gift cards for a buyer
     * 
     * <p>List all the stored gift cards for a specific buyer.
     * 
     * @return CompletableFuture&lt;ListBuyerGiftCardsResponse&gt; - The async response
     */
    public CompletableFuture<ListBuyerGiftCardsResponse> listDirect() {
        return list(
                JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(),
                Optional.empty());
    }

    /**
     * List gift cards for a buyer
     * 
     * <p>List all the stored gift cards for a specific buyer.
     * 
     * @param buyerExternalIdentifier 
     * @param buyerId 
     * @param merchantAccountId 
     * @param options additional options
     * @return CompletableFuture&lt;ListBuyerGiftCardsResponse&gt; - The async response
     */
    public CompletableFuture<ListBuyerGiftCardsResponse> list(
            JsonNullable<String> buyerExternalIdentifier, JsonNullable<String> buyerId,
            JsonNullable<String> merchantAccountId, Optional<Options> options) {
        ListBuyerGiftCardsRequest request =
            ListBuyerGiftCardsRequest
                .builder()
                .buyerExternalIdentifier(buyerExternalIdentifier)
                .buyerId(buyerId)
                .merchantAccountId(merchantAccountId)
                .build();
        AsyncRequestOperation<ListBuyerGiftCardsRequest, ListBuyerGiftCardsResponse> operation
              = new ListBuyerGiftCards.Async(sdkConfiguration, options, sdkConfiguration.retryScheduler());
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
