/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.gr4vy.sdk;

import static com.gr4vy.sdk.operations.Operations.AsyncRequestOperation;

import com.gr4vy.sdk.models.operations.ListCardSchemeDefinitionsRequest;
import com.gr4vy.sdk.models.operations.async.ListCardSchemeDefinitionsRequestBuilder;
import com.gr4vy.sdk.models.operations.async.ListCardSchemeDefinitionsResponse;
import com.gr4vy.sdk.operations.ListCardSchemeDefinitions;
import com.gr4vy.sdk.utils.Headers;
import com.gr4vy.sdk.utils.Options;
import java.lang.String;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;
import org.openapitools.jackson.nullable.JsonNullable;


public class AsyncCardSchemeDefinitions {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final CardSchemeDefinitions syncSDK;

    AsyncCardSchemeDefinitions(CardSchemeDefinitions syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public CardSchemeDefinitions sync() {
        return syncSDK;
    }


    /**
     * List card scheme definitions
     * 
     * <p>Fetch a list of the definitions of each card scheme.
     * 
     * @return The async call builder
     */
    public ListCardSchemeDefinitionsRequestBuilder list() {
        return new ListCardSchemeDefinitionsRequestBuilder(sdkConfiguration);
    }

    /**
     * List card scheme definitions
     * 
     * <p>Fetch a list of the definitions of each card scheme.
     * 
     * @return {@code CompletableFuture<ListCardSchemeDefinitionsResponse>} - The async response
     */
    public CompletableFuture<ListCardSchemeDefinitionsResponse> listDirect() {
        return list(JsonNullable.undefined(), Optional.empty());
    }

    /**
     * List card scheme definitions
     * 
     * <p>Fetch a list of the definitions of each card scheme.
     * 
     * @param merchantAccountId 
     * @param options additional options
     * @return {@code CompletableFuture<ListCardSchemeDefinitionsResponse>} - The async response
     */
    public CompletableFuture<ListCardSchemeDefinitionsResponse> list(JsonNullable<String> merchantAccountId, Optional<Options> options) {
        ListCardSchemeDefinitionsRequest request =
            ListCardSchemeDefinitionsRequest
                .builder()
                .merchantAccountId(merchantAccountId)
                .build();
        AsyncRequestOperation<ListCardSchemeDefinitionsRequest, ListCardSchemeDefinitionsResponse> operation
              = new ListCardSchemeDefinitions.Async(
                                    sdkConfiguration, options, sdkConfiguration.retryScheduler(),
                                    _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
