/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.github.gr4vy.gr4vy_java.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.github.gr4vy.gr4vy_java.utils.SpeakeasyMetadata;
import com.github.gr4vy.gr4vy_java.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;

public class GetPayoutRequest {

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=payout_id")
    private String payoutId;

    /**
     * The ID of the merchant account to use for this request.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-gr4vy-merchant-account-id")
    private JsonNullable<String> xGr4vyMerchantAccountId;

    @JsonCreator
    public GetPayoutRequest(
            String payoutId,
            JsonNullable<String> xGr4vyMerchantAccountId) {
        Utils.checkNotNull(payoutId, "payoutId");
        Utils.checkNotNull(xGr4vyMerchantAccountId, "xGr4vyMerchantAccountId");
        this.payoutId = payoutId;
        this.xGr4vyMerchantAccountId = xGr4vyMerchantAccountId;
    }
    
    public GetPayoutRequest(
            String payoutId) {
        this(payoutId, JsonNullable.undefined());
    }

    @JsonIgnore
    public String payoutId() {
        return payoutId;
    }

    /**
     * The ID of the merchant account to use for this request.
     */
    @JsonIgnore
    public JsonNullable<String> xGr4vyMerchantAccountId() {
        return xGr4vyMerchantAccountId;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public GetPayoutRequest withPayoutId(String payoutId) {
        Utils.checkNotNull(payoutId, "payoutId");
        this.payoutId = payoutId;
        return this;
    }

    /**
     * The ID of the merchant account to use for this request.
     */
    public GetPayoutRequest withXGr4vyMerchantAccountId(String xGr4vyMerchantAccountId) {
        Utils.checkNotNull(xGr4vyMerchantAccountId, "xGr4vyMerchantAccountId");
        this.xGr4vyMerchantAccountId = JsonNullable.of(xGr4vyMerchantAccountId);
        return this;
    }

    /**
     * The ID of the merchant account to use for this request.
     */
    public GetPayoutRequest withXGr4vyMerchantAccountId(JsonNullable<String> xGr4vyMerchantAccountId) {
        Utils.checkNotNull(xGr4vyMerchantAccountId, "xGr4vyMerchantAccountId");
        this.xGr4vyMerchantAccountId = xGr4vyMerchantAccountId;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetPayoutRequest other = (GetPayoutRequest) o;
        return 
            Objects.deepEquals(this.payoutId, other.payoutId) &&
            Objects.deepEquals(this.xGr4vyMerchantAccountId, other.xGr4vyMerchantAccountId);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            payoutId,
            xGr4vyMerchantAccountId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetPayoutRequest.class,
                "payoutId", payoutId,
                "xGr4vyMerchantAccountId", xGr4vyMerchantAccountId);
    }
    
    public final static class Builder {
 
        private String payoutId;
 
        private JsonNullable<String> xGr4vyMerchantAccountId = JsonNullable.undefined();
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder payoutId(String payoutId) {
            Utils.checkNotNull(payoutId, "payoutId");
            this.payoutId = payoutId;
            return this;
        }

        /**
         * The ID of the merchant account to use for this request.
         */
        public Builder xGr4vyMerchantAccountId(String xGr4vyMerchantAccountId) {
            Utils.checkNotNull(xGr4vyMerchantAccountId, "xGr4vyMerchantAccountId");
            this.xGr4vyMerchantAccountId = JsonNullable.of(xGr4vyMerchantAccountId);
            return this;
        }

        /**
         * The ID of the merchant account to use for this request.
         */
        public Builder xGr4vyMerchantAccountId(JsonNullable<String> xGr4vyMerchantAccountId) {
            Utils.checkNotNull(xGr4vyMerchantAccountId, "xGr4vyMerchantAccountId");
            this.xGr4vyMerchantAccountId = xGr4vyMerchantAccountId;
            return this;
        }
        
        public GetPayoutRequest build() {
            return new GetPayoutRequest(
                payoutId,
                xGr4vyMerchantAccountId);
        }
    }
}
