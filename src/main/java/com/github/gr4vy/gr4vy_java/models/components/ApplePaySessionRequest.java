/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.github.gr4vy.gr4vy_java.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.github.gr4vy.gr4vy_java.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

public class ApplePaySessionRequest {

    /**
     * The validation URL as provided by the Apple SDK when processing a payment.
     */
    @JsonProperty("validation_url")
    private String validationUrl;

    /**
     * The domain on which Apple Pay is being loaded.
     */
    @JsonProperty("domain_name")
    private String domainName;

    @JsonCreator
    public ApplePaySessionRequest(
            @JsonProperty("validation_url") String validationUrl,
            @JsonProperty("domain_name") String domainName) {
        Utils.checkNotNull(validationUrl, "validationUrl");
        Utils.checkNotNull(domainName, "domainName");
        this.validationUrl = validationUrl;
        this.domainName = domainName;
    }

    /**
     * The validation URL as provided by the Apple SDK when processing a payment.
     */
    @JsonIgnore
    public String validationUrl() {
        return validationUrl;
    }

    /**
     * The domain on which Apple Pay is being loaded.
     */
    @JsonIgnore
    public String domainName() {
        return domainName;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The validation URL as provided by the Apple SDK when processing a payment.
     */
    public ApplePaySessionRequest withValidationUrl(String validationUrl) {
        Utils.checkNotNull(validationUrl, "validationUrl");
        this.validationUrl = validationUrl;
        return this;
    }

    /**
     * The domain on which Apple Pay is being loaded.
     */
    public ApplePaySessionRequest withDomainName(String domainName) {
        Utils.checkNotNull(domainName, "domainName");
        this.domainName = domainName;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ApplePaySessionRequest other = (ApplePaySessionRequest) o;
        return 
            Objects.deepEquals(this.validationUrl, other.validationUrl) &&
            Objects.deepEquals(this.domainName, other.domainName);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            validationUrl,
            domainName);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ApplePaySessionRequest.class,
                "validationUrl", validationUrl,
                "domainName", domainName);
    }
    
    public final static class Builder {
 
        private String validationUrl;
 
        private String domainName;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The validation URL as provided by the Apple SDK when processing a payment.
         */
        public Builder validationUrl(String validationUrl) {
            Utils.checkNotNull(validationUrl, "validationUrl");
            this.validationUrl = validationUrl;
            return this;
        }

        /**
         * The domain on which Apple Pay is being loaded.
         */
        public Builder domainName(String domainName) {
            Utils.checkNotNull(domainName, "domainName");
            this.domainName = domainName;
            return this;
        }
        
        public ApplePaySessionRequest build() {
            return new ApplePaySessionRequest(
                validationUrl,
                domainName);
        }
    }
}
