/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.github.gr4vy.gr4vy_java.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.github.gr4vy.gr4vy_java.models.components.PaymentServiceCreate;
import com.github.gr4vy.gr4vy_java.utils.SpeakeasyMetadata;
import com.github.gr4vy.gr4vy_java.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;

public class UpdatePaymentServiceRequest {

    /**
     * The ID of the merchant account to use for this request.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-gr4vy-merchant-account-id")
    private JsonNullable<String> xGr4vyMerchantAccountId;

    @SpeakeasyMetadata("request:mediaType=application/json")
    private PaymentServiceCreate paymentServiceCreate;

    @JsonCreator
    public UpdatePaymentServiceRequest(
            JsonNullable<String> xGr4vyMerchantAccountId,
            PaymentServiceCreate paymentServiceCreate) {
        Utils.checkNotNull(xGr4vyMerchantAccountId, "xGr4vyMerchantAccountId");
        Utils.checkNotNull(paymentServiceCreate, "paymentServiceCreate");
        this.xGr4vyMerchantAccountId = xGr4vyMerchantAccountId;
        this.paymentServiceCreate = paymentServiceCreate;
    }
    
    public UpdatePaymentServiceRequest(
            PaymentServiceCreate paymentServiceCreate) {
        this(JsonNullable.undefined(), paymentServiceCreate);
    }

    /**
     * The ID of the merchant account to use for this request.
     */
    @JsonIgnore
    public JsonNullable<String> xGr4vyMerchantAccountId() {
        return xGr4vyMerchantAccountId;
    }

    @JsonIgnore
    public PaymentServiceCreate paymentServiceCreate() {
        return paymentServiceCreate;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The ID of the merchant account to use for this request.
     */
    public UpdatePaymentServiceRequest withXGr4vyMerchantAccountId(String xGr4vyMerchantAccountId) {
        Utils.checkNotNull(xGr4vyMerchantAccountId, "xGr4vyMerchantAccountId");
        this.xGr4vyMerchantAccountId = JsonNullable.of(xGr4vyMerchantAccountId);
        return this;
    }

    /**
     * The ID of the merchant account to use for this request.
     */
    public UpdatePaymentServiceRequest withXGr4vyMerchantAccountId(JsonNullable<String> xGr4vyMerchantAccountId) {
        Utils.checkNotNull(xGr4vyMerchantAccountId, "xGr4vyMerchantAccountId");
        this.xGr4vyMerchantAccountId = xGr4vyMerchantAccountId;
        return this;
    }

    public UpdatePaymentServiceRequest withPaymentServiceCreate(PaymentServiceCreate paymentServiceCreate) {
        Utils.checkNotNull(paymentServiceCreate, "paymentServiceCreate");
        this.paymentServiceCreate = paymentServiceCreate;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdatePaymentServiceRequest other = (UpdatePaymentServiceRequest) o;
        return 
            Objects.deepEquals(this.xGr4vyMerchantAccountId, other.xGr4vyMerchantAccountId) &&
            Objects.deepEquals(this.paymentServiceCreate, other.paymentServiceCreate);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            xGr4vyMerchantAccountId,
            paymentServiceCreate);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UpdatePaymentServiceRequest.class,
                "xGr4vyMerchantAccountId", xGr4vyMerchantAccountId,
                "paymentServiceCreate", paymentServiceCreate);
    }
    
    public final static class Builder {
 
        private JsonNullable<String> xGr4vyMerchantAccountId = JsonNullable.undefined();
 
        private PaymentServiceCreate paymentServiceCreate;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The ID of the merchant account to use for this request.
         */
        public Builder xGr4vyMerchantAccountId(String xGr4vyMerchantAccountId) {
            Utils.checkNotNull(xGr4vyMerchantAccountId, "xGr4vyMerchantAccountId");
            this.xGr4vyMerchantAccountId = JsonNullable.of(xGr4vyMerchantAccountId);
            return this;
        }

        /**
         * The ID of the merchant account to use for this request.
         */
        public Builder xGr4vyMerchantAccountId(JsonNullable<String> xGr4vyMerchantAccountId) {
            Utils.checkNotNull(xGr4vyMerchantAccountId, "xGr4vyMerchantAccountId");
            this.xGr4vyMerchantAccountId = xGr4vyMerchantAccountId;
            return this;
        }

        public Builder paymentServiceCreate(PaymentServiceCreate paymentServiceCreate) {
            Utils.checkNotNull(paymentServiceCreate, "paymentServiceCreate");
            this.paymentServiceCreate = paymentServiceCreate;
            return this;
        }
        
        public UpdatePaymentServiceRequest build() {
            return new UpdatePaymentServiceRequest(
                xGr4vyMerchantAccountId,
                paymentServiceCreate);
        }
    }
}
