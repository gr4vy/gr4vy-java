/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.github.gr4vy.gr4vy_java.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.github.gr4vy.gr4vy_java.utils.Utils;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * GooglePayAssuranceDetails
 * 
 * <p>The assurance details provided by Google Pay
 */
public class GooglePayAssuranceDetails {

    /**
     * Defines if an account was verified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_verified")
    private JsonNullable<Boolean> accountVerified;

    /**
     * Defines if the card holder was authenticated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card_holder_authenticated")
    private JsonNullable<Boolean> cardHolderAuthenticated;

    @JsonCreator
    public GooglePayAssuranceDetails(
            @JsonProperty("account_verified") JsonNullable<Boolean> accountVerified,
            @JsonProperty("card_holder_authenticated") JsonNullable<Boolean> cardHolderAuthenticated) {
        Utils.checkNotNull(accountVerified, "accountVerified");
        Utils.checkNotNull(cardHolderAuthenticated, "cardHolderAuthenticated");
        this.accountVerified = accountVerified;
        this.cardHolderAuthenticated = cardHolderAuthenticated;
    }
    
    public GooglePayAssuranceDetails() {
        this(JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * Defines if an account was verified.
     */
    @JsonIgnore
    public JsonNullable<Boolean> accountVerified() {
        return accountVerified;
    }

    /**
     * Defines if the card holder was authenticated.
     */
    @JsonIgnore
    public JsonNullable<Boolean> cardHolderAuthenticated() {
        return cardHolderAuthenticated;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Defines if an account was verified.
     */
    public GooglePayAssuranceDetails withAccountVerified(boolean accountVerified) {
        Utils.checkNotNull(accountVerified, "accountVerified");
        this.accountVerified = JsonNullable.of(accountVerified);
        return this;
    }

    /**
     * Defines if an account was verified.
     */
    public GooglePayAssuranceDetails withAccountVerified(JsonNullable<Boolean> accountVerified) {
        Utils.checkNotNull(accountVerified, "accountVerified");
        this.accountVerified = accountVerified;
        return this;
    }

    /**
     * Defines if the card holder was authenticated.
     */
    public GooglePayAssuranceDetails withCardHolderAuthenticated(boolean cardHolderAuthenticated) {
        Utils.checkNotNull(cardHolderAuthenticated, "cardHolderAuthenticated");
        this.cardHolderAuthenticated = JsonNullable.of(cardHolderAuthenticated);
        return this;
    }

    /**
     * Defines if the card holder was authenticated.
     */
    public GooglePayAssuranceDetails withCardHolderAuthenticated(JsonNullable<Boolean> cardHolderAuthenticated) {
        Utils.checkNotNull(cardHolderAuthenticated, "cardHolderAuthenticated");
        this.cardHolderAuthenticated = cardHolderAuthenticated;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GooglePayAssuranceDetails other = (GooglePayAssuranceDetails) o;
        return 
            Objects.deepEquals(this.accountVerified, other.accountVerified) &&
            Objects.deepEquals(this.cardHolderAuthenticated, other.cardHolderAuthenticated);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            accountVerified,
            cardHolderAuthenticated);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GooglePayAssuranceDetails.class,
                "accountVerified", accountVerified,
                "cardHolderAuthenticated", cardHolderAuthenticated);
    }
    
    public final static class Builder {
 
        private JsonNullable<Boolean> accountVerified = JsonNullable.undefined();
 
        private JsonNullable<Boolean> cardHolderAuthenticated = JsonNullable.undefined();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Defines if an account was verified.
         */
        public Builder accountVerified(boolean accountVerified) {
            Utils.checkNotNull(accountVerified, "accountVerified");
            this.accountVerified = JsonNullable.of(accountVerified);
            return this;
        }

        /**
         * Defines if an account was verified.
         */
        public Builder accountVerified(JsonNullable<Boolean> accountVerified) {
            Utils.checkNotNull(accountVerified, "accountVerified");
            this.accountVerified = accountVerified;
            return this;
        }

        /**
         * Defines if the card holder was authenticated.
         */
        public Builder cardHolderAuthenticated(boolean cardHolderAuthenticated) {
            Utils.checkNotNull(cardHolderAuthenticated, "cardHolderAuthenticated");
            this.cardHolderAuthenticated = JsonNullable.of(cardHolderAuthenticated);
            return this;
        }

        /**
         * Defines if the card holder was authenticated.
         */
        public Builder cardHolderAuthenticated(JsonNullable<Boolean> cardHolderAuthenticated) {
            Utils.checkNotNull(cardHolderAuthenticated, "cardHolderAuthenticated");
            this.cardHolderAuthenticated = cardHolderAuthenticated;
            return this;
        }
        
        public GooglePayAssuranceDetails build() {
            return new GooglePayAssuranceDetails(
                accountVerified,
                cardHolderAuthenticated);
        }
    }
}
