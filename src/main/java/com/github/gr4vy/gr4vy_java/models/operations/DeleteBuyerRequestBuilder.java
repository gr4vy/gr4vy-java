/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.github.gr4vy.gr4vy_java.models.operations;

import com.fasterxml.jackson.core.type.TypeReference;
import com.github.gr4vy.gr4vy_java.utils.LazySingletonValue;
import com.github.gr4vy.gr4vy_java.utils.Utils;
import java.lang.Double;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class DeleteBuyerRequestBuilder {

    private String buyerId;
    private Optional<Double> timeoutInSeconds = Utils.readDefaultOrConstValue(
                            "timeoutInSeconds",
                            "1",
                            new TypeReference<Optional<Double>>() {});
    private JsonNullable<String> merchantAccountId = JsonNullable.undefined();
    private final SDKMethodInterfaces.MethodCallDeleteBuyer sdk;

    public DeleteBuyerRequestBuilder(SDKMethodInterfaces.MethodCallDeleteBuyer sdk) {
        this.sdk = sdk;
    }

    public DeleteBuyerRequestBuilder buyerId(String buyerId) {
        Utils.checkNotNull(buyerId, "buyerId");
        this.buyerId = buyerId;
        return this;
    }
                
    public DeleteBuyerRequestBuilder timeoutInSeconds(double timeoutInSeconds) {
        Utils.checkNotNull(timeoutInSeconds, "timeoutInSeconds");
        this.timeoutInSeconds = Optional.of(timeoutInSeconds);
        return this;
    }

    public DeleteBuyerRequestBuilder timeoutInSeconds(Optional<Double> timeoutInSeconds) {
        Utils.checkNotNull(timeoutInSeconds, "timeoutInSeconds");
        this.timeoutInSeconds = timeoutInSeconds;
        return this;
    }

    public DeleteBuyerRequestBuilder merchantAccountId(String merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = JsonNullable.of(merchantAccountId);
        return this;
    }

    public DeleteBuyerRequestBuilder merchantAccountId(JsonNullable<String> merchantAccountId) {
        Utils.checkNotNull(merchantAccountId, "merchantAccountId");
        this.merchantAccountId = merchantAccountId;
        return this;
    }

    public DeleteBuyerResponse call() throws Exception {
        if (timeoutInSeconds == null) {
            timeoutInSeconds = _SINGLETON_VALUE_TimeoutInSeconds.value();
        }
        return sdk.delete(
            buyerId,
            timeoutInSeconds,
            merchantAccountId);
    }

    private static final LazySingletonValue<Optional<Double>> _SINGLETON_VALUE_TimeoutInSeconds =
            new LazySingletonValue<>(
                    "timeoutInSeconds",
                    "1",
                    new TypeReference<Optional<Double>>() {});
}
