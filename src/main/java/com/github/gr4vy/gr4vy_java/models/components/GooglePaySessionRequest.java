/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.github.gr4vy.gr4vy_java.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.github.gr4vy.gr4vy_java.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

public class GooglePaySessionRequest {

    /**
     * The domain on which Google Pay is being loaded.
     */
    @JsonProperty("origin_domain")
    private String originDomain;

    @JsonCreator
    public GooglePaySessionRequest(
            @JsonProperty("origin_domain") String originDomain) {
        Utils.checkNotNull(originDomain, "originDomain");
        this.originDomain = originDomain;
    }

    /**
     * The domain on which Google Pay is being loaded.
     */
    @JsonIgnore
    public String originDomain() {
        return originDomain;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The domain on which Google Pay is being loaded.
     */
    public GooglePaySessionRequest withOriginDomain(String originDomain) {
        Utils.checkNotNull(originDomain, "originDomain");
        this.originDomain = originDomain;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GooglePaySessionRequest other = (GooglePaySessionRequest) o;
        return 
            Objects.deepEquals(this.originDomain, other.originDomain);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            originDomain);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GooglePaySessionRequest.class,
                "originDomain", originDomain);
    }
    
    public final static class Builder {
 
        private String originDomain;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The domain on which Google Pay is being loaded.
         */
        public Builder originDomain(String originDomain) {
            Utils.checkNotNull(originDomain, "originDomain");
            this.originDomain = originDomain;
            return this;
        }
        
        public GooglePaySessionRequest build() {
            return new GooglePaySessionRequest(
                originDomain);
        }
    }
}
